{"version":3,"sources":["NewBooks.js","Book.js","BestSeller.js","Detail.js","Search.js","Login.js","Signin.js","SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["NewBooksContext","React","createContext","NewBooks","props","useState","books","setBooks","useEffect","axios","get","then","res","data","catch","error","alert","console","log","className","Provider","value","getBooks","BookWrapper","styled","div","BookImageWrapper","BookList","history","useHistory","map","book","i","onClick","push","isbn","rank","src","coverLargeUrl","title","author","publisher","itemId","Book","bestSeller","useContext","BestSellerContext","newBooks","BestSeller","DetailView","useParams","find","x","width","translator","pubDate","categoryId","categoryName","customerReviewRank","description","RentButton","Button","variant","size","Detail","BookContext","Search","result","setResult","searchWord","params","query","thumbnail","contents","authors","dateTime","Login","type","name","placeholder","Signin","SearchBar","InputGroup","FormControl","onKeyDown","e","key","searchWordChange","target","onKeyUp","Wrapper","UserStyle","App","booksData","href","to","Navbar","bg","Container","Brand","Nav","Link","as","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb721444.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Book from './Book.js'\n\nexport let NewBooksContext = React.createContext();\n\nfunction NewBooks(props) {\n\n    let [books, setBooks] = useState();\n    \n    useEffect(() => {\n        axios.get('/api/newbook')\n            .then((res) => {\n                setBooks(res.data);\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div className='row'>\n            <NewBooksContext.Provider value={books}>\n                {props.getBooks(books)}\n                <Book />\n            </NewBooksContext.Provider>\n        </div>\n    )\n}\n\nexport default NewBooks;","import React, {useContext} from 'react';\nimport {BestSellerContext} from './BestSeller.js'\nimport {NewBooksContext} from './NewBooks.js'\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nlet BookWrapper = styled.div`\n  width: 80%;\n  margin-top: 2rem;\n  text-align: left;\n  cursor: pointer; \n\n  p {\n    font-size: 13pt;\n    font-weight: 600;\n    margin: 0.5rem 0 0 0;\n  }\n\n  h3 {\n    color: yellowgreen;\n    text-shadow: 1px 1px 1px darkgreen;\n    font-style: italic;\n    font-weight: bolder;\n  }\n`\nlet BookImageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n\n  img {\n    width: 11rem; \n    height: 16rem;\n    object-fit: cover;\n    border: solid 0.1rem darkgreen;\n  }\n`\n\nfunction Book() {\n\n    let bestSeller = useContext(BestSellerContext);\n    let newBooks = useContext(NewBooksContext);\n   \n    return (\n        <div>\n            {\n                bestSeller\n                ? <BookList books={bestSeller}/>\n                : <BookList books={newBooks}/>\n            }\n        </div>\n    )\n}\n\nfunction BookList(props) {\n\n    let history = useHistory();\n\n    return (\n        <div className='row'>\n            {props.books && props.books.map((book, i) => (\n                <div className=\"col-lg-3 col-sm-4\" key={book.itemId} onClick={()=>{ history.push('/detail/' + book.isbn)}}>\n                    <BookWrapper>\n                        <h3>{book.rank}</h3>\n                        <BookImageWrapper><img src={book.coverLargeUrl}/></BookImageWrapper>\n                        <p>{book.title}</p>\n                        {book.author} / {book.publisher}\n                    </BookWrapper>\n                </div>\n            ))} \n        </div>\n    )\n}\n\nexport default Book;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Book from './Book.js'\n\nexport let BestSellerContext = React.createContext();\n\nfunction BestSeller(props) {\n    \n    let [books, setBooks] = useState();\n    \n    useEffect(() => {\n        axios.get('/api/bestseller')\n            .then((res) => {\n                // console.log(res.data);\n                // console.log(Array.isArray(res.data));\n                setBooks(res.data);\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div>\n            <BestSellerContext.Provider value={books}>\n                {props.getBooks(books)}\n                <Book />\n            </BestSellerContext.Provider>\n        </div>\n    )\n}\n\nexport default BestSeller;","import React, {useContext} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Button} from \"react-bootstrap\";\nimport \"./App.css\";\nimport {BookContext} from './App.js';\n\nfunction Detail() {\n\n    let book = useContext(BookContext);\n\n    return (\n        <div>\n            {\n                book\n                ? <DetailView books={book}/>\n                : alert(\"새로고침으로 인해 state가 유지되지 않아 도서데이터 수신에 실패했습니다.\")\n            }\n        </div>\n    )\n}\n\nfunction DetailView(props) {\n\n    let { isbn } = useParams();\n\n    let book = props.books && props.books.find(x => x.isbn == isbn);\n    return (\n        <div>\n            <img src={book.coverLargeUrl} width=\"300rem\"/>\n            {book.title}<br/>\n            {book.author}<br/>\n            {book.translator}<br/>\n            {book.pubDate}<br/>\n            {book.publisher}<br/>\n            {book.categoryId}<br/>\n            {book.categoryName}<br/>\n            {book.isbn}<br/>\n            {book.customerReviewRank}<br/>\n            {book.description}<br/>\n            <RentButton/>\n        </div>\n    )\n}\n\nfunction RentButton() {\n    let rentStatus = 'return';\n\n    if (rentStatus === 'rentOK') {\n        return <Button variant=\"success\" size=\"lg\">대여하기</Button>\n    } else if (rentStatus === 'return') {\n        return <Button variant=\"dark\" size=\"lg\">반납하기</Button>\n    } else {\n        return <Button variant=\"danger\" size=\"lg\">대여불가</Button>\n    }\n}\n\nexport default Detail;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nfunction Search(props) {\n\n    let [result, setResult] = useState();\n    let searchWord = props.searchWord\n\n    useEffect(() => {\n        axios.get('/search', {params : {query : searchWord}})\n            .then((res) => {\n                // console.log(res.data);\n                setResult(res.data);\n            }).catch((error) => {\n                alert('검색결과 데이터를 받아오는 데 실패했습니다.');\n                console.log(searchWord);\n                console.log(error);\n            });\n    },[searchWord]);\n\n    return (\n        <div>\n            {result && result.map((book, i) => (\n                <div key={book.itemId}>\n                    <img src={book.thumbnail}/>\n                    {book.title}<br/>\n                    줄거리 : {book.contents}...<br/>\n                    {book.authors}/{book.publisher}/{book.dateTime}/{book.translator}/{book.isbn}\n                </div>\n            ))} \n        </div>\n    )\n}\n\nexport default Search;","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction Login() {\n    return (\n        <div className=\"loginform\">\n            <form>\n                <div>\n                    <div>\n                        <div className=\"loginformtext\">ID</div>\n                        <input\n                            type=\"text\"\n                            name=\"userId\"\n                            placeholder=\"아이디를 입력해주세요.\"\n                        ></input>\n                    </div>\n                    <div>\n                        <div className=\"loginformtext\">PassWord</div>\n                        <input\n                            type=\"password\"\n                            name=\"userPw\"\n                            placeholder=\"비밀번호를 입력해주세요\"\n                        ></input>\n                    </div>\n                </div>\n                <div>\n                    <Button variant=\"outline-primary\" type=\"submit\">\n                        Login\n                    </Button>\n                    <Button variant=\"outline-warning\" type=\"reset\">\n                        Reset\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction Signin() {\n    return (\n        <div className=\"loginform\">\n            <form>\n                <div>\n                    <div>\n                        <div className=\"loginformtext\">ID</div>\n                        <input\n                            type=\"text\"\n                            name=\"userId\"\n                            placeholder=\"아이디를 입력해주세요.\"\n                        ></input>\n                    </div>\n                    <div>\n                        <div className=\"loginformtext\">PassWord</div>\n                        <input\n                            type=\"password\"\n                            name=\"userPw\"\n                            placeholder=\"비밀번호를 입력해주세요\"\n                        ></input>\n                    </div>\n                    <div>\n                        <div className=\"loginformtext\">Name</div>\n                        <input\n                            type=\"text\"\n                            name=\"userName\"\n                            placeholder=\"이름을 입력해주세요\"\n                        ></input>\n                    </div>\n                    <div>\n                        <div className=\"loginformtext\">Email</div>\n                        <input\n                            type=\"email\"\n                            name=\"userEmail\"\n                            placeholder=\"이메일 주소를 입력해주세요\"\n                        ></input>\n                    </div>\n                </div>\n                <div>\n                    <Button variant=\"outline-primary\" type=\"submit\">\n                        Signin\n                    </Button>\n                    <Button variant=\"outline-warning\" type=\"reset\">\n                        Reset\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Signin;","import React from 'react';\nimport {InputGroup, FormControl, Button} from \"react-bootstrap\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction SearchBar(props) {\n\n    let history = useHistory();\n\n    return (\n        <div>\n            <InputGroup className=\"my-5 w-50 mx-auto\">\n                <FormControl\n                    size=\"lg\"\n                    type=\"search\"\n                    placeholder=\"검색을 원하는 책, 저자를 입력해주세요.\"\n                    onKeyDown={(e) => { if(e.key ==='Enter') { props.searchWordChange(e.target.value) } }}\n                    onKeyUp={(e) => { if(e.key ==='Enter') { history.push('/search?query=' + props.searchWord) } }}\n                    />\n                <Button \n                    className=\"rounded-1\" \n                    variant=\"outline-light\" \n                    onClick={()=>{ history.push('/search?query=' + props.searchWord) }}>검색</Button>\n            </InputGroup>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React, {useState} from \"react\";\nimport {Nav, Navbar, Container, InputGroup, FormControl, Button} from \"react-bootstrap\";\nimport \"./App.css\";\nimport styled from 'styled-components';\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\nimport BestSeller from \"./BestSeller.js\";\nimport NewBooks from \"./NewBooks.js\";\nimport Detail from \"./Detail.js\";\nimport Search from \"./Search.js\";\nimport Login from \"./Login.js\";\nimport Signin from \"./Signin.js\";\nimport SearchBar from \"./SearchBar\";\n\n// const GlobalStyle  =  createGlobalStyle`\n//   font-family: 'Pretendard-Medium';\n// `\n\nlet Wrapper = styled.div`\n  width : 70%;\n  margin : auto;\n`;\nlet UserStyle = styled.div`\n  text-align: right;\n  padding : 2rem;\n  font-size : 13pt;\n  background-color: hsl(146, 45%, 36%);\n  color: floralwhite;\n  span {\n    margin: 0.5rem;\n  }\n`;\n\nexport let BookContext = React.createContext();\n\nfunction App() {\n\n    let [books, setBooks] = useState();\n    let getBooks = (booksData) => {\n        setBooks(booksData);\n    }\n\n    let [searchWord, searchWordChange] = useState('');\n\n\n    return (\n        <div className=\"App\">\n\n            {/* <GlobalStyle/> */}\n            <UserStyle>\n\n                <div className=\"nav\">\n                    <div className=\"titleImg\">\n                        <a href=\"/\">\n                            <div>\n                                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReIJDl-BNU7poDMxewQcEWm7ZLBeoxSfvVlQ&usqp=CAU\" />\n                            </div>\n                            <div>Go Book Go Book</div>\n                        </a>\n                    </div>\n                    <div>\n                        <Link to=\"/loginpage\">\n                        <span>로그인</span>\n                        </Link>\n                        <span>|</span>\n                        <Link to=\"/signinpage\">\n                        <span>회원가입</span>\n                        </Link>\n                        <span>|</span>\n                        <span>마이페이지&nbsp;</span>\n                    </div>\n                </div>\n\n                <SearchBar searchWord={searchWord} searchWordChange={searchWordChange}/>\n\n            </UserStyle>\n\n            <Navbar bg=\"success\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand className=\"fs-3\">도서</Navbar.Brand>\n                    <Nav className=\"me-auto fs-5\">\n                        <Nav.Link as={Link} to=\"/api/bestseller\">베스트셀러</Nav.Link>\n                        <Nav.Link as={Link} to=\"/api/newbook\">신간도서</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n\n\n            <Switch>\n                <Wrapper>\n                    <Route exact path=\"/api/bestseller\">\n                        <BestSeller getBooks={getBooks}/>\n                    </Route>\n                    <Route path=\"/api/newbook\">\n                        <NewBooks getBooks={getBooks}/>\n                    </Route>\n                    <Route path=\"/detail/:isbn\">\n                        <BookContext.Provider value={books}>\n                            <Detail />\n                        </BookContext.Provider>\n                    </Route>\n\n                    <Route path=\"/search\">\n                        <Search searchWord={searchWord}/>\n                    </Route>\n\n                    <Route path=\"/loginpage\">\n                        <Login />\n                    </Route>\n                    <Route path=\"/signinpage\">\n                        <Signin />\n                    </Route>\n                </Wrapper>\n            </Switch>\n        </div>\n    );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}