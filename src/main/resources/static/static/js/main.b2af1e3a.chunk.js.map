{"version":3,"sources":["NewBooks.js","Book.js","BestSeller.js","Detail.js","Search.js","Login.js","Signin.js","SearchBar.js","MyRentBooks.js","MyRent.js","MyInfo.js","Mypage.js","App.js","reportWebVitals.js","index.js"],"names":["NewBooksContext","React","createContext","NewBooks","props","useState","books","setBooks","useEffect","axios","get","then","res","data","catch","error","alert","console","log","className","Col","ButtonToolbar","ButtonGroup","Button","Provider","value","getBooks","BookWrapper","styled","div","BookImageWrapper","BookList","history","useHistory","map","book","i","onClick","push","isbn","rank","src","coverLargeUrl","title","author","publisher","itemId","Book","bestSeller","useContext","BestSellerContext","newBooks","BestSeller","DetailView","useParams","find","x","width","translator","pubDate","categoryId","categoryName","customerReviewRank","description","RentButton","variant","size","Detail","BookContext","Search","result","setResult","searchWord","params","query","thumbnail","contents","authors","dateTime","LoginForm","Signin","span","Alarm","Login","alarm","setAlarm","userId","userPw","account","setAccount","idFormat","RegExp","passwordFormat","onChangeFunc","e","target","name","onSubmit","preventDefault","test","type","placeholder","onChange","to","SigninForm","GroupStyle","validated","setValidated","nameAlarm","setNameAlarm","idAlarm","setIdAlarm","pwAlarm","setPwAlarm","pwMatchAlarm","setPwMatchAlarm","userName","userEmail","userPwCheck","nameFormat","Form","noValidate","form","currentTarget","checkValidity","post","Group","Label","Control","required","Feedback","SearchBar","InputGroup","FormControl","onKeyDown","key","searchWordChange","onKeyUp","CartStyle","MyrentPage","Card","Img","Body","Title","Text","MyRent","radioValue","setRadioValue","radio","idx","ToggleButton","id","checked","MyRentBooks","InfoForm","MyInfo","emailAlarm","setEmailAlarm","useremail","userpw","userpwCheck","emailFormat","setMenu","MyMenu","MyList","Mypage","menu","Row","sm","ListGroup","Item","action","Wrapper","UserStyle","App","booksData","href","Navbar","bg","Container","Brand","Nav","Link","as","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2af1e3a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Book from \"./Book.js\";\nimport { Button, ButtonGroup, ButtonToolbar, Col } from \"react-bootstrap\";\n\nexport let NewBooksContext = React.createContext();\n\nfunction NewBooks(props) {\n  let [books, setBooks] = useState();\n  let [menu, setMenu] = useState(0);\n  useEffect(() => {\n    axios\n      .get(\"/api/newbook\")\n      .then((res) => {\n        setBooks(res.data);\n      })\n      .catch((error) => {\n        alert(\"도서 데이터를 받아오는 데 실패했습니다.\");\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"row\">\n      <Col>\n        <ButtonToolbar aria-label=\"Toolbar with button groups\">\n          <ButtonGroup className=\"me-2\" aria-label=\"First group\">\n            <Button>국내도서</Button>\n            <Button>국내소설</Button>\n            <Button>외국도서</Button>\n            <Button>4</Button>\n            <Button>5</Button>\n            <Button>6</Button>\n            <Button>7</Button>\n            <Button>8</Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n        <NewBooksContext.Provider value={books}>\n          {props.getBooks(books)}\n          <Book />\n        </NewBooksContext.Provider>\n      </Col>\n    </div>\n  );\n}\n\nexport default NewBooks;\n","import React, {useContext} from 'react';\nimport {BestSellerContext} from './BestSeller.js'\nimport {NewBooksContext} from './NewBooks.js'\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nlet BookWrapper = styled.div`\n  width: 80%;\n  margin-top: 2rem;\n  text-align: left;\n  cursor: pointer; \n\n  p {\n    font-size: 13pt;\n    font-weight: 600;\n    margin: 0.5rem 0 0 0;\n  }\n\n  h3 {\n    color: gold;\n    text-shadow: 2px 2px 1px blue;\n    font-style: italic;\n    font-weight: bolder;\n  }\n`\nlet BookImageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n\n  img {\n    width: 11rem; \n    height: 16rem;\n    object-fit: cover;\n    border: solid 0.1rem darkgreen;\n  }\n`\n\nfunction Book() {\n\n    let bestSeller = useContext(BestSellerContext);\n    let newBooks = useContext(NewBooksContext);\n   \n    return (\n        <div>\n            {\n                bestSeller\n                ? <BookList books={bestSeller}/>\n                : <BookList books={newBooks}/>\n            }\n        </div>\n    )\n}\n\nfunction BookList(props) {\n\n    let history = useHistory();\n\n    return (\n        <div className='row'>\n            {props.books && props.books.map((book, i) => (\n                <div className=\"col-lg-3 col-sm-4\" key={book.itemId} onClick={()=>{ history.push('/detail/' + book.isbn)}}>\n                    <BookWrapper>\n                        <h3>{book.rank}</h3>\n                        <BookImageWrapper><img src={book.coverLargeUrl}/></BookImageWrapper>\n                        <p>{book.title}</p>\n                        {book.author} / {book.publisher}\n                    </BookWrapper>\n                </div>\n            ))} \n        </div>\n    )\n}\n\nexport default Book;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Book from './Book.js'\n\nexport let BestSellerContext = React.createContext();\n\nfunction BestSeller(props) {\n    \n    let [books, setBooks] = useState();\n    \n    useEffect(() => {\n        axios.get('/api/bestseller')\n            .then((res) => {\n                // console.log(res.data);\n                // console.log(Array.isArray(res.data));\n                setBooks(res.data);\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div>\n            <BestSellerContext.Provider value={books}>\n                {props.getBooks(books)}\n                <Book />\n            </BestSellerContext.Provider>\n        </div>\n    )\n}\n\nexport default BestSeller;","import React, {useContext} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Button} from \"react-bootstrap\";\nimport \"./App.css\";\nimport {BookContext} from './App.js';\n\nfunction Detail() {\n\n    let book = useContext(BookContext);\n\n    return (\n        <div>\n            {\n                book\n                ? <DetailView books={book}/>\n                : alert(\"새로고침으로 인해 state가 유지되지 않아 도서데이터 수신에 실패했습니다.\")\n            }\n        </div>\n    )\n}\n\nfunction DetailView(props) {\n\n    let { isbn } = useParams();\n\n    let book = props.books && props.books.find(x => x.isbn == isbn);\n    return (\n        <div>\n            <img src={book.coverLargeUrl} width=\"300rem\"/>\n            {book.title}<br/>\n            {book.author}<br/>\n            {book.translator}<br/>\n            {book.pubDate}<br/>\n            {book.publisher}<br/>\n            {book.categoryId}<br/>\n            {book.categoryName}<br/>\n            {book.isbn}<br/>\n            {book.customerReviewRank}<br/>\n            {book.description}<br/>\n            <RentButton/>\n        </div>\n    )\n}\n\nfunction RentButton() {\n    let rentStatus = 'return';\n\n    if (rentStatus === 'rentOK') {\n        return <Button variant=\"success\" size=\"lg\">대여하기</Button>\n    } else if (rentStatus === 'return') {\n        return <Button variant=\"dark\" size=\"lg\">반납하기</Button>\n    } else {\n        return <Button variant=\"danger\" size=\"lg\">대여불가</Button>\n    }\n}\n\nexport default Detail;","import React, {useEffect, useState} from 'react';\nimport {Button} from \"react-bootstrap\";\nimport axios from 'axios';\n\nfunction Search(props) {\n\n    let [result, setResult] = useState();\n    let searchWord = props.searchWord;\n\n    useEffect(() => {\n        axios.get('/api/search', {params : {query : searchWord}})\n            .then(res => setResult(res.data))\n            .catch((error) => {\n                alert('검색결과 데이터를 받아오는 데 실패했습니다.');\n                // console.log(searchWord);\n                console.log(error);\n            });\n    },[searchWord]);\n\n    return (\n        <div>\n            {/* 검색결과가 없는 경우도 처리해야함 */}\n            {result && result.map((book, i) => (\n                <div key={book.itemId}>\n                    <img src={book.thumbnail}/>\n                    {book.title}<br/>\n                    줄거리 : {book.contents}<br/>\n                    {book.authors}/{book.publisher}/{book.dateTime}/{book.translator}/{book.isbn}\n                    <RentButton/>\n                </div>\n            ))} \n        </div>\n    )\n}\n\nfunction RentButton() {\n    let rentStatus = 'return';\n\n    if (rentStatus === 'rentOK') {\n        return <Button variant=\"success\" size=\"lg\">대여하기</Button>\n    } else if (rentStatus === 'return') {\n        return <Button variant=\"dark\" size=\"lg\">반납하기</Button>\n    } else {\n        return <Button variant=\"danger\" size=\"lg\">대여불가</Button>\n    }\n}\n\nexport default Search;","import axios from \"axios\";\nimport React, {useState} from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nlet LoginForm = styled.div`\n    width: 22rem;\n    margin: auto;\n    padding-bottom: 3rem;\n\n    input, button {\n        width: 100%;\n        height: 3rem;\n        margin-bottom: 1rem;\n    }\n    input {\n        border: solid 1px lightgrey;\n        border-radius: 4px;\n        padding: 0.7rem;\n    }\n    h3 {\n        font-weight: bold;\n        text-align: left;\n    }\n    p {\n        text-align: left;\n    }\n`\nlet Signin = styled.span`\n  font-size: 13pt;\n  text-decoration: underline;\n`\nlet Alarm = styled.div`\n    width: 100%;\n    text-align: left;\n    color: red;\n    font-weight: bold;\n    font-size: 13pt;\n   \n`\n\nfunction Login() {\n\n    let [alarm, setAlarm] = useState('')\n    let [account, setAccount] = useState({\n        userId: '',\n        userPw: ''\n    })\n\n    // 아이디 : 영어/숫자 6-12자\n    let idFormat = RegExp(/^[A-Za-z0-9]{6,12}$/);\n    // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n    let passwordFormat = RegExp(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/);\n\n    let onChangeFunc = (e) => {\n        setAccount({\n            ...account, [e.target.name]: e.target.value\n        })\n    }\n\n    let submitFunc = (e) => {\n        e.preventDefault();\n\n        if (!account.userId) { setAlarm('아이디가 입력되지 않았습니다.') }\n        else if (!account.userPw) { setAlarm('비밀번호가 입력되지 않았습니다.') }\n        // 유효성체크\n        else if (!idFormat.test(account.userId) || !passwordFormat.test(account.userPw)) {\n            setAlarm('아이디 또는 비밀번호를 잘못 입력하셨습니다. 입력하신 내용을 다시 확인해주세요.')\n        } else {\n            alert('콘솔창 확인');\n            console.log(account);\n            // axios.post('')\n            // .then((res) => null)\n        }\n    }\n\n    return (\n        <LoginForm>\n            <form onSubmit={submitFunc}>\n                <h3>로그인</h3>\n                <p>Go Book Go Book의 다양한 서비스를 누리세요!</p>\n                <Alarm>{alarm}</Alarm>\n                <input\n                    type=\"text\"\n                    name=\"userId\"\n                    placeholder=\"아이디를 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></input>\n                <input\n                    type=\"password\"\n                    name=\"userPw\"\n                    placeholder=\"비밀번호를 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></input>\n                \n                <Button variant=\"primary\" type=\"submit\" size=\"lg\">로그인</Button>\n                아이디가 없으신가요?&nbsp;&nbsp;&nbsp;\n                <Signin><Link to=\"/signin\">회원가입</Link></Signin>\n            </form>\n        </LoginForm>\n    );\n}\n\nexport default Login;\n","import React, {useState} from \"react\";\nimport { Button,Form } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport axios from \"axios\";\n\nlet SigninForm = styled.div`\n    width: 22rem;\n    margin: auto;\n    padding-bottom: 3rem;\n    text-align: left;\n\n    input, button {\n        width: 100%;\n        height: 3rem;\n        // margin-bottom: 1rem;\n    }\n    button {\n        margin-top: 1rem;\n    }\n    h3 {\n        font-weight: bold;\n    }\n`\nlet GroupStyle = styled.div`\n    margin: 1rem 0;\n`\nlet Alarm = styled.div`\n    width: 100%;\n    text-align: left;\n    color: red;\n    font-weight: bold;   \n`\n\nfunction Signin() {\n\n    let [validated, setValidated] = useState(false);\n    let [nameAlarm, setNameAlarm] = useState('');\n    let [idAlarm, setIdAlarm] = useState('');\n    // let [emailAlarm, setEmailAlarm] = useState('');\n    let [pwAlarm, setPwAlarm] = useState('');\n    let [pwMatchAlarm, setPwMatchAlarm] = useState('');\n    let [account, setAccount] = useState({\n        userName: '',\n        userId: '',\n        userEmail: '',\n        userPw: '',\n        userPwCheck: ''\n    })\n\n    // 아이디 : 영어/숫자 6-12자\n    let idFormat = RegExp(/^[A-Za-z0-9]{6,12}$/);\n    // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n    let passwordFormat = RegExp(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/);\n    // 이름 : 한글 2자이상\n    let nameFormat = RegExp(/^[가-힣]{2,}$/);\n\n    // 이메일 유효성검사는 이미 input type=\"email\"에서 검증되므로 불필요\n    // 이메일 : (이메일아이디 영어/숫자 하나 이상) + @(필수) + (영어 하나이상) + .(특수문자이므로 \\붙임) + (영어 하나이상)\n    // let emailFormat = RegExp(/^[A-Za-z0-9]+@[A-Za-z]+\\.[A-Za-z]+$/);\n\n    let onChangeFunc = (e) => {\n        setAccount({\n            ...account, [e.target.name]: e.target.value\n        })\n    }\n\n\n    let submitFunc = (e) => {\n        e.preventDefault();\n        let form = e.currentTarget;\n        setNameAlarm('');\n        setIdAlarm('');\n        // setEmailAlarm('');\n        setPwAlarm('');\n        setPwMatchAlarm('');\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            setValidated(true);\n        } else if( !nameFormat.test(account.userName) || !idFormat.test(account.userId) || !passwordFormat.test(account.userPw) ) {\n            // || !emailFormat.test(account.useremail) || !passwordFormat.test(account.userpw) ) {\n            \n            if( !nameFormat.test(account.userName) )\n                setNameAlarm('이름의 형식이 올바르지 않습니다.');\n            if( !idFormat.test(account.userId) ) \n                setIdAlarm('아이디의 형식이 올바르지 않습니다.');\n            // if( !emailFormat.test(account.useremail) ) \n            //     setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n            if( !passwordFormat.test(account.userPw) )\n                setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n\n        } else if(account.userPw != account.userPwCheck) {\n            setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n        } else {\n            alert('콘솔창 확인');\n            console.log(account);\n            axios.post('/signinpage',account)\n            .then((res) => null)\n\n        }\n        \n    }\n\n    return (\n        <SigninForm>\n            <div className=\"loginform\">\n                <Form noValidate validated={validated} onSubmit={submitFunc}>\n                    <h3>회원가입</h3>\n\n                    <GroupStyle>\n                        <Form.Group>\n                        <Form.Label>이름</Form.Label>\n                            <Alarm>{nameAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                name=\"userName\"\n                                placeholder=\"ex) 홍길동\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">이름을 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>아이디</Form.Label>\n                            <Alarm>{idAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                name=\"userId\"\n                                placeholder=\"영어/숫자 포함 6-12자를 입력해주세요.\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">아이디를 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>이메일</Form.Label>\n                            {/* <Alarm>{emailAlarm}</Alarm> */}\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                name=\"userEmail\"\n                                placeholder=\"ex) GoBook@naver.com\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">이메일을 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n                    \n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>비밀번호</Form.Label>\n                            <Alarm>{pwAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                name=\"userPw\"\n                                placeholder=\"영어/숫자/특수문자 포함 9-20자를 입력해주세요.\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>비밀번호 확인</Form.Label>\n                            <Alarm>{pwMatchAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                name=\"userPwCheck\"\n                                placeholder=\"확인을 위해 비밀번호를 한번 더 입력해주세요.\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">비밀번호 확인을 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        회원가입하기\n                    </Button>\n                </Form>\n                \n            </div>\n        </SigninForm>\n    );\n}\n\nexport default Signin;","import React from 'react';\nimport {InputGroup, FormControl, Button} from \"react-bootstrap\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction SearchBar(props) {\n\n    let history = useHistory();\n\n    return (\n        <div>\n            <InputGroup className=\"my-5 w-50 mx-auto\">\n                <FormControl\n                    size=\"lg\"\n                    type=\"search\"\n                    placeholder=\"검색을 원하는 책, 저자를 입력해주세요.\"\n                    onKeyDown={(e) => { if(e.key ==='Enter') { props.searchWordChange(e.target.value) } }}\n                    onKeyUp={(e) => { if(e.key ==='Enter') { history.push('/api/search?query=' + props.searchWord) } }}\n                    />\n                <Button \n                    className=\"rounded-1\" \n                    variant=\"outline-light\" \n                    onClick={()=>{ history.push('/search?query=' + props.searchWord) }}>검색</Button>\n            </InputGroup>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport styled from 'styled-components';\n\nlet CartStyle = styled.div`\n  width: 18rem;\n  margin-top: 1rem;\n`\n\nfunction MyrentPage() {\n  return (\n    <CartStyle>\n      <Card>\n        <Card.Img variant=\"top\" src=\"./\"/>\n        <Card.Body>\n          <Card.Title>도서명</Card.Title>\n          <Card.Text>대여일 : </Card.Text>\n          <Card.Text>반납일 : (D-계산값)</Card.Text>\n          <Button variant=\"outline-danger\">반납하기</Button>\n        </Card.Body>\n      </Card>\n    </CartStyle>\n  )\n}\n\nexport default MyrentPage;\n","import React, { useState } from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport MyRentBooks from './MyRentBooks.js'\n\nfunction MyRent() {\n\n    const [radioValue, setRadioValue] = useState(\"1\");\n\n    const radios = [\n        { name: \"현재 대여중인 도서\", value: \"1\" },\n        { name: \"지난 대여 내역\", value: \"2\" },\n      ];\n\n    return (\n        <div>\n            <h2>홍길동님, 반가워요!</h2>\n            <p>현재 대여중인 도서는 0/5 권 입니다.</p>\n            <ButtonGroup>\n                {radios.map((radio, idx) => (\n                <ToggleButton\n                    key={idx}\n                    id={`radio-${idx}`}\n                    type=\"radio\"\n                    variant={idx % 2 ? \"outline-primary\" : \"outline-primary\"}\n                    name=\"radio\"\n                    value={radio.value}\n                    checked={radioValue === radio.value}\n                    onChange={(e) => setRadioValue(e.currentTarget.value)}\n                >\n                {radio.name}\n                </ToggleButton>\n                ))}\n            </ButtonGroup>\n\n            {\n                radioValue == 1\n                ? <MyRentBooks />\n                : null\n            }\n        </div>\n    )\n}\n\nexport default MyRent;","import React, {useState} from \"react\";\nimport { Button,Form } from \"react-bootstrap\";\nimport styled from 'styled-components';\n\nlet InfoForm = styled.div`\n    width: 80%;\n    padding-bottom: 3rem;\n\n    input, button {\n      height: 3rem;\n      // margin-bottom: 1rem;\n    }\n    button {\n      width: 30%;\n      margin-top: 1rem;\n      margin-right: 1rem;\n    }\n`\nlet GroupStyle = styled.div`\n    margin: 1rem 0;\n`\nlet Alarm = styled.div`\n    width: 100%;\n    text-align: left;\n    color: red;\n    font-weight: bold;   \n`\n\nfunction MyInfo(props) {\n\n  let [alarm, setAlarm] = useState('')\n  let [emailAlarm, setEmailAlarm] = useState('');\n  let [pwAlarm, setPwAlarm] = useState('');\n  let [pwMatchAlarm, setPwMatchAlarm] = useState('');\n  let [account, setAccount] = useState({\n      useremail: '',\n      userpw: '',\n      userpwCheck: ''\n  })\n\n  // 이메일 : (이메일아이디 영어/숫자 하나 이상) + @(필수) + (영어 하나이상) + .(특수문자이므로 \\붙임) + (영어 하나이상)\n  let emailFormat = RegExp(/^[A-Za-z0-9]+@[A-Za-z]+\\.[A-Za-z]+$/);\n  // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n  let passwordFormat = RegExp(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/);\n\n  let onChangeFunc = (e) => {\n    setAccount({\n        ...account, [e.target.name]: e.target.value\n    })\n  }\n\n  let submitFunc = (e) => {\n    e.preventDefault();\n    let form = e.currentTarget;\n\n    setAlarm('');\n    setEmailAlarm('');\n    setPwAlarm('');\n    setPwMatchAlarm('');\n\n    // 둘 다 작성하지 않는 경우\n    if ( !account.useremail && !account.userpw ) {\n      setAlarm('수정하실 정보를 작성해주세요.')\n    }\n    // 이메일만 작성하는 경우\n    if ( account.useremail && !account.userpw ) {\n      // 형식확인\n      if(!emailFormat.test(account.useremail) ) {\n        setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n      } else {\n        alert('콘솔창 확인');\n        console.log(account);\n      }\n    }\n    // 비밀번호만 작성하는 경우\n    if ( !account.useremail && account.userpw ) {\n      // 형식확인\n      if( !passwordFormat.test(account.userpw) ) {\n        setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n      // 비밀번호 확인란과 일치여부\n      } else if ( account.userpw != account.userpwCheck) {\n        setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n      } else {\n        alert('콘솔창 확인');\n        console.log(account);\n      }\n    }\n    // 둘 다 작성한 경우\n    if ( account.useremail && account.userpw ) {\n      // 이메일 형식확인\n      if( !emailFormat.test(account.useremail) ) {\n        setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n      } \n      // 비밀번호 형식확인\n      // 이메일, 비밀번호 둘 다 형식에 맞지 않는 경우를 위해 if문을 따로 작성\n      if( !passwordFormat.test(account.userpw) ) {\n        setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n      // 비밀번호 확인란과 일치여부\n      } else if ( account.userpw != account.userpwCheck) {\n        setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n      // 비밀번호 형식/확인란 맞은 상태에서 이메일형식까지 맞으면 결과 넘어감\n      } else if ( emailFormat.test(account.useremail) ) {\n        alert('콘솔창 확인');\n        console.log(account);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>개인정보 수정</h2>\n      <p>고객님의 정보를 정확히 입력해주세요.</p>\n      <Alarm>{alarm}</Alarm>\n      <InfoForm>\n        <Form noValidate onSubmit={submitFunc}>\n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>이메일</Form.Label>\n                <Alarm>{emailAlarm}</Alarm>\n                <Form.Control\n                    required\n                    type=\"email\"\n                    name=\"useremail\"\n                    placeholder=\"ex) GoBook@naver.com\"\n                    onChange={onChangeFunc}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">이메일을 입력해주세요.</Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n          \n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>비밀번호</Form.Label>\n                <Alarm>{pwAlarm}</Alarm>\n                <Form.Control\n                    required\n                    type=\"password\"\n                    name=\"userpw\"\n                    placeholder=\"영어/숫자/특수문자 포함 9-20자를 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n\n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>비밀번호 확인</Form.Label>\n                <Alarm>{pwMatchAlarm}</Alarm>\n                <Form.Control\n                    required\n                    type=\"password\"\n                    name=\"userpwCheck\"\n                    placeholder=\"확인을 위해 비밀번호를 한번 더 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">비밀번호 확인을 입력해주세요.</Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n\n          <Button variant=\"primary\" type=\"submit\">\n              수정\n          </Button>\n          <Button variant=\"outline-danger\" type=\"button\" onClick={() => props.setMenu(0)}>\n              취소\n          </Button>\n        </Form>\n      </InfoForm>\n    </div>\n  );\n}\n\nexport default MyInfo;\n","import React, {useState} from \"react\";\nimport MyRent from \"./MyRent\";\nimport MyInfo from \"./MyInfo.js\"\nimport { Col, Row, ListGroup } from \"react-bootstrap\";\nimport styled from 'styled-components';\n\nlet MyMenu = styled.div`\n  h4 {\n    margin: 0;\n    padding: 0.5rem; \n  }\n`\nlet MyList = styled.div`\n  text-align: left;\n  padding-left: 3rem;\n  border-left: dashed 2px Silver;\n\n  h2 {\n    margin-bottom: 1rem;\n  }\n`\n\nfunction Mypage() {\n  \n  let [menu, setMenu] = useState(0);\n\n  return (\n    <Row>\n      <Col sm={3}>\n      <MyMenu>\n          <h4>마이페이지</h4>\n          <ListGroup.Item action variant=\"light\" onClick={() => setMenu(0)}>\n            나의 대여 관리\n          </ListGroup.Item>\n          <ListGroup.Item action variant=\"light\" onClick={() => setMenu(1)}>\n            개인정보 수정\n          </ListGroup.Item>\n        </MyMenu>\n      </Col>\n\n      <Col sm={9}>\n        <MyList>\n          \n          {\n            menu == 0 \n            ? <MyRent/>\n            : <MyInfo setMenu={setMenu}/>\n          }\n        </MyList>\n      </Col>\n     \n    </Row>\n  );\n}\n\nexport default Mypage;\n","import React, {useState} from \"react\";\nimport {Nav, Navbar, Container} from \"react-bootstrap\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\nimport BestSeller from \"./BestSeller.js\";\nimport NewBooks from \"./NewBooks.js\";\nimport Detail from \"./Detail.js\";\nimport Search from \"./Search.js\";\nimport Login from \"./Login.js\";\nimport Signin from \"./Signin.js\";\nimport SearchBar from \"./SearchBar\";\nimport Mypage from \"./Mypage.js\";\n\n// const GlobalStyle  =  createGlobalStyle`\n//   font-family: 'Pretendard-Medium';\n// `\n\nlet Wrapper = styled.div`\n  width: 70%;\n  margin: auto;\n  padding-top: 3rem;\n  min-height: 100%;   \n`;\nlet UserStyle = styled.div`\n  text-align: right;\n  padding: 2rem;\n  font-size: 13pt;\n  background-color: rgb(13, 202, 240);\n  color: floralwhite;\n  span {\n    margin: 0.5rem;\n  }\n`;\n\nexport let BookContext = React.createContext();\n\nfunction App() {\n  let [books, setBooks] = useState();\n  let getBooks = (booksData) => {\n    setBooks(booksData);\n  };\n\n  let [searchWord, searchWordChange] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      {/* <GlobalStyle/> */}\n      <UserStyle>\n        <div className=\"nav\">\n          <div className=\"titleImg\">\n            <a href=\"/\">\n              {/* <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReIJDl-BNU7poDMxewQcEWm7ZLBeoxSfvVlQ&usqp=CAU\" /> */}\n              <div>Go Book Go Book</div>\n            </a>\n          </div>\n          <div>\n            <Link to=\"/login\">\n              <span>로그인</span>\n            </Link>\n            <span>|</span>\n            <Link to=\"/signin\">\n              <span>회원가입</span>\n            </Link>\n            <span>|</span>\n            <Link to=\"/mypage\">\n              <span>마이페이지&nbsp;</span>\n            </Link>\n          </div>\n        </div>\n\n        <SearchBar\n          searchWord={searchWord}\n          searchWordChange={searchWordChange}\n        />\n      </UserStyle>\n\n      <Navbar bg=\"info\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand className=\"fs-3\">도서</Navbar.Brand>\n          <Nav className=\"me-auto fs-5\">\n            <Nav.Link as={Link} to=\"/api/bestseller\">\n              베스트셀러\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/api/newbook\">\n              신간도서\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Wrapper>\n          <Route exact path=\"/api/bestseller\">\n            <BestSeller getBooks={getBooks} />\n          </Route>\n          <Route path=\"/api/newbook\">\n            <NewBooks getBooks={getBooks} />\n          </Route>\n          <Route path=\"/detail/:isbn\">\n            <BookContext.Provider value={books}>\n              <Detail />\n            </BookContext.Provider>\n          </Route>\n\n          <Route path=\"/api/search\">\n            <Search searchWord={searchWord} />\n          </Route>\n\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signin\">\n            <Signin />\n          </Route>\n          <Route path=\"/mypage\">\n            <Mypage />\n          </Route>\n        </Wrapper>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}