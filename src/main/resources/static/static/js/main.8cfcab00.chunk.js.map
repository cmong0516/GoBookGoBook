{"version":3,"sources":["BestSeller.js","NewBooks.js","App.js","reportWebVitals.js","index.js"],"names":["BestSeller","useState","books","setBooks","useEffect","axios","get","then","res","data","catch","error","alert","console","log","className","map","book","i","BookWrapper","BookImageWrapper","src","coverLargeUrl","title","author","publisher","itemId","NewBooks","Wrapper","styled","div","UserStyle","App","InputGroup","FormControl","size","type","placeholder","Button","variant","Navbar","bg","Container","Brand","Nav","Link","as","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAyCeA,MAnCf,WAEI,MAAwBC,qBAAxB,mBAAKC,EAAL,KAAYC,EAAZ,KAgBA,OAdAC,qBAAU,WACNC,IAAMC,IAAI,mBACLC,MAAK,SAACC,GAIHL,EAASK,EAAIC,SAEdC,OAAM,SAACC,GACNC,MAAM,+GACNC,QAAQC,IAAIH,QAEtB,IAGE,qBAAKI,UAAU,MAAf,SAEKb,GAASA,EAAMc,KAAI,SAACC,EAAMC,GAAP,OAChB,qBAAKH,UAAU,oBAAf,SACI,eAACI,EAAD,WACI,6BAAKD,EAAE,IACP,cAACE,EAAD,UAAkB,qBAAKC,IAAKJ,EAAKK,kBACjC,4BAAIL,EAAKM,QACRN,EAAKO,OAJV,MAIqBP,EAAKQ,cALUR,EAAKS,cCM9CC,I,QAAAA,EA7Bf,WAEI,MAAwB1B,qBAAxB,mBAAKC,EAAL,KAAYC,EAAZ,KAYA,OAVAC,qBAAU,WACNC,IAAMC,IAAI,gBACLC,MAAK,SAACC,GACHL,EAASK,EAAIC,SACdC,OAAM,SAACC,GACNC,MAAM,+GACNC,QAAQC,IAAIH,QAEtB,IAGE,qBAAKI,UAAU,MAAf,SACKb,GAASA,EAAMc,KAAI,SAACC,EAAMC,GAAP,OAChB,qBAAKH,UAAU,oBAAf,SACI,eAACI,EAAD,WACI,cAACC,EAAD,UAAkB,qBAAKC,IAAKJ,EAAKK,kBACjC,4BAAIL,EAAKM,QACRN,EAAKO,OAHV,MAGqBP,EAAKQ,cAJUR,EAAKS,c,gBCHzDE,EAAUC,IAAOC,IAAV,8DAIPC,EAAYF,IAAOC,IAAV,0JAOFX,EAAcU,IAAOC,IAAV,2SAkBXV,EAAmBS,IAAOC,IAAV,6IA0DZE,MA/Cf,WAEI,OACI,sBAAKjB,UAAU,MAAf,UAGI,eAACgB,EAAD,WACI,sDACA,uCACA,4DACA,uCACA,kEACA,eAACE,EAAA,EAAD,CAAYlB,UAAU,oBAAtB,UACI,cAACmB,EAAA,EAAD,CACIC,KAAK,KACLC,KAAK,SACLC,YAAY,yGACZ,aAAW,WAEf,cAACC,EAAA,EAAD,CAAQC,QAAQ,gBAAhB,gCAGR,cAACC,EAAA,EAAD,CAAQC,GAAG,UAAUF,QAAQ,OAA7B,SACI,eAACG,EAAA,EAAD,WACI,cAACF,EAAA,EAAOG,MAAR,CAAc5B,UAAU,OAAxB,0BACA,eAAC6B,EAAA,EAAD,CAAK7B,UAAU,eAAf,UACI,cAAC6B,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,kBAAvB,4CACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,eAAvB,8CAKZ,cAAC,IAAD,UACI,eAACnB,EAAD,WACI,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,kBAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,EAAD,eCrFTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACI,cAAC,EAAD,QAGNC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.8cfcab00.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {BookWrapper} from './App.js'\nimport {BookImageWrapper} from './App.js'\nimport {Card} from \"react-bootstrap\";\n\nfunction BestSeller() {\n\n    let [books, setBooks] = useState()\n    \n    useEffect(() => {\n        axios.get('/api/bestseller')\n            .then((res) => {\n                // console.log(res.data);\n                // console.log(Array.isArray(res.data));\n\n                setBooks(res.data);\n\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div className='row'>\n            \n            {books && books.map((book, i) => (\n                <div className=\"col-lg-3 col-sm-4\" key={book.itemId}>\n                    <BookWrapper>\n                        <h3>{i+1}</h3>\n                        <BookImageWrapper><img src={book.coverLargeUrl}/></BookImageWrapper>\n                        <p>{book.title}</p>\n                        {book.author} / {book.publisher}\n                    </BookWrapper>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default BestSeller;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {BookWrapper} from './App.js'\nimport {BookImageWrapper} from './App.js'\n\nfunction NewBooks() {\n\n    let [books, setBooks] = useState()\n    \n    useEffect(() => {\n        axios.get('/api/newbook')\n            .then((res) => {\n                setBooks(res.data);\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div className='row'>\n            {books && books.map((book, i) => (\n                <div className=\"col-lg-3 col-sm-4\" key={book.itemId}>\n                    <BookWrapper>\n                        <BookImageWrapper><img src={book.coverLargeUrl}/></BookImageWrapper>\n                        <p>{book.title}</p>\n                        {book.author} / {book.publisher}\n                    </BookWrapper>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default NewBooks;","import React from \"react\";\nimport {\n    InputGroup,\n    FormControl,\n    Button,\n    Nav,\n    Navbar,\n    Container,\n} from \"react-bootstrap\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport BestSeller from \"./BestSeller.js\";\nimport NewBooks from \"./NewBooks.js\";\nimport \"./App.css\";\nimport styled from 'styled-components';\n\n// const GlobalStyle  =  createGlobalStyle`\n//   font-family: 'Pretendard-Medium';\n// `\n\nlet Wrapper = styled.div`\n  width : 70%;\n  margin : auto;\n`;\nlet UserStyle = styled.div`\n  text-align: right;\n  padding : 2rem;\n  font-size : 13pt;\n  background-color: hsl(146, 45%, 36%);\n  color: floralwhite;\n`;\nexport let BookWrapper = styled.div`\n  width: 80%;\n  margin-top: 2rem;\n  text-align: left;\n\n  p {\n    font-size: 13pt;\n    font-weight: 600;\n    margin: 0.5rem 0;\n  }\n\n  h3 {\n    color: yellowgreen;\n    text-shadow: 1px 1px 1px darkgreen;\n    font-style: italic;\n    font-weight: bolder;\n  }\n`\nexport let BookImageWrapper = styled.div`\n  width: 12rem;\n  height: 17rem;\n\n  img {\n    width: 100%; \n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n\n            {/* <GlobalStyle/> */}\n            <UserStyle>\n                <span>로그인</span>\n                <span> | </span>\n                <span>회원가입</span>\n                <span> | </span>\n                <span>마이페이지</span>\n                <InputGroup className=\"my-5 w-50 mx-auto\">\n                    <FormControl\n                        size=\"lg\"\n                        type=\"search\"\n                        placeholder=\"검색을 원하는 책, 저자를 입력해주세요.\"\n                        aria-label=\"Search\"\n                    />\n                    <Button variant=\"outline-light\" >검색</Button>\n                </InputGroup>\n            </UserStyle>\n            <Navbar bg=\"success\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand className=\"fs-3\">도서</Navbar.Brand>\n                    <Nav className=\"me-auto fs-5\">\n                        <Nav.Link as={Link} to=\"/api/bestseller\">베스트셀러</Nav.Link>\n                        <Nav.Link as={Link} to=\"/api/newbook\">신간도서</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n\n            <Switch>\n                <Wrapper>\n                    <Route exact path=\"/api/bestseller\">\n                        <BestSeller />\n                    </Route>\n                    <Route path=\"/api/newbook\">\n                        <NewBooks />\n                    </Route>\n                </Wrapper>\n            </Switch>\n        </div>\n    );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}