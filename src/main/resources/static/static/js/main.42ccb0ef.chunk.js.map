{"version":3,"sources":["NewBooks.js","Book.js","BestSeller.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["NewBooksContext","React","createContext","NewBooks","useState","books","setBooks","useEffect","axios","get","then","res","data","catch","error","alert","console","log","className","Provider","value","BookWrapper","styled","div","BookImageWrapper","BookList","props","history","useHistory","map","book","i","onClick","push","isbn","rank","src","coverLargeUrl","title","author","publisher","itemId","Book","bestSeller","useContext","BestSellerContext","newBooks","BestSeller","DetailView","useParams","find","x","Detail","newBook","Wrapper","UserStyle","App","InputGroup","FormControl","size","type","placeholder","Button","variant","Navbar","bg","Container","Brand","Nav","Link","as","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAIWA,EAAkBC,IAAMC,gBAyBpBC,I,IAAAA,EAvBf,WAEI,MAAwBC,qBAAxB,mBAAKC,EAAL,KAAYC,EAAZ,KAYA,OAVAC,qBAAU,WACNC,IAAMC,IAAI,gBACLC,MAAK,SAACC,GACHL,EAASK,EAAIC,SACdC,OAAM,SAACC,GACNC,MAAM,+GACNC,QAAQC,IAAIH,QAEtB,IAGE,qBAAKI,UAAU,MAAf,SACI,cAAClB,EAAgBmB,SAAjB,CAA0BC,MAAOf,EAAjC,SACI,cAAC,EAAD,S,QCjBZgB,EAAcC,IAAOC,IAAV,oUAmBXC,EAAmBF,IAAOC,IAAV,kLA4BpB,SAASE,EAASC,GAEd,IAAIC,EAAUC,cAEd,OACI,qBAAKV,UAAU,MAAf,SACKQ,EAAMrB,OAASqB,EAAMrB,MAAMwB,KAAI,SAACC,EAAMC,GAAP,OAC5B,qBAAKb,UAAU,oBAAsCc,QAAS,WAAML,EAAQM,KAAK,WAAaH,EAAKI,OAAnG,SACI,eAACb,EAAD,WACI,6BAAKS,EAAKK,OACV,cAACX,EAAD,UAAkB,qBAAKY,IAAKN,EAAKO,kBACjC,4BAAIP,EAAKQ,QACRR,EAAKS,OAJV,MAIqBT,EAAKU,cALUV,EAAKW,aAa9CC,MApCf,WAEI,IAAIC,EAAaC,qBAAWC,GACxBC,EAAWF,qBAAW5C,GAE1B,OACI,8BAEQ2C,EACE,cAAClB,EAAD,CAAUpB,MAAOsC,IACjB,cAAClB,EAAD,CAAUpB,MAAOyC,OC3CxBD,EAAoB5C,IAAMC,gBA2BtB6C,MAzBf,WAEI,MAAwB3C,qBAAxB,mBAAKC,EAAL,KAAYC,EAAZ,KAcA,OAZAC,qBAAU,WACNC,IAAMC,IAAI,mBACLC,MAAK,SAACC,GAGHL,EAASK,EAAIC,SACdC,OAAM,SAACC,GACNC,MAAM,+GACNC,QAAQC,IAAIH,QAEtB,IAGE,qBAAKI,UAAU,MAAf,SACI,cAAC2B,EAAkB1B,SAAnB,CAA4BC,MAAOf,EAAnC,SACI,cAAC,EAAD,S,MCHhB,SAAS2C,EAAWtB,GAEhB,IAAMQ,EAASe,cAATf,KAEKR,EAAMrB,OAASqB,EAAMrB,MAAM6C,MAAK,SAAAC,GAAC,OAAIA,EAAEjB,MAAQA,KAC1D,OACI,wBASOkB,I,IAAAA,EA/Bf,WAEI,IAAIT,EAAaC,qBAAWC,GACxBQ,EAAUT,qBAAW5C,GAEzB,OACI,8BAEQ2C,EACE,cAACK,EAAD,CAAY3C,MAAOsC,IACnB,cAACK,EAAD,CAAY3C,MAAOgD,OCKjCC,EAAUhC,IAAOC,IAAV,8DAIPgC,EAAYjC,IAAOC,IAAV,0JA4DEiC,MApDf,WAEI,OACI,sBAAKtC,UAAU,MAAf,UAGI,eAACqC,EAAD,WACI,sDACA,uCACA,4DACA,uCACA,kEACA,eAACE,EAAA,EAAD,CAAYvC,UAAU,oBAAtB,UACI,cAACwC,EAAA,EAAD,CACIC,KAAK,KACLC,KAAK,SACLC,YAAY,yGACZ,aAAW,WAEf,cAACC,EAAA,EAAD,CAAQC,QAAQ,gBAAhB,gCAGR,cAACC,EAAA,EAAD,CAAQC,GAAG,UAAUF,QAAQ,OAA7B,SACI,eAACG,EAAA,EAAD,WACI,cAACF,EAAA,EAAOG,MAAR,CAAcjD,UAAU,OAAxB,0BACA,eAACkD,EAAA,EAAD,CAAKlD,UAAU,eAAf,UACI,cAACkD,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,kBAAvB,4CACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,eAAvB,8CAIlB,cAAC,IAAD,UACE,eAACjB,EAAD,WACE,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,kBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SAEI,cAAC,EAAD,eC9DCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACI,cAAC,EAAD,QAGNC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.42ccb0ef.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Book from './Book.js'\n\nexport let NewBooksContext = React.createContext();\n\nfunction NewBooks() {\n\n    let [books, setBooks] = useState();\n    \n    useEffect(() => {\n        axios.get('/api/newbook')\n            .then((res) => {\n                setBooks(res.data);\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div className='row'>\n            <NewBooksContext.Provider value={books}>\n                <Book />\n            </NewBooksContext.Provider>\n        </div>\n    )\n}\n\nexport default NewBooks;","import React, {useContext} from 'react';\nimport {BestSellerContext} from './BestSeller.js'\nimport {NewBooksContext} from './NewBooks.js'\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nlet BookWrapper = styled.div`\n  width: 80%;\n  margin-top: 2rem;\n  text-align: left;\n  cursor: pointer; \n\n  p {\n    font-size: 13pt;\n    font-weight: 600;\n    margin: 0.5rem 0 0 0;\n  }\n\n  h3 {\n    color: yellowgreen;\n    text-shadow: 1px 1px 1px darkgreen;\n    font-style: italic;\n    font-weight: bolder;\n  }\n`\nlet BookImageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n\n  img {\n    width: 11rem; \n    height: 16rem;\n    object-fit: cover;\n    border: solid 0.1rem darkgreen;\n  }\n`\n\nfunction Book() {\n\n    let bestSeller = useContext(BestSellerContext);\n    let newBooks = useContext(NewBooksContext);\n   \n    return (\n        <div>\n            {\n                bestSeller\n                ? <BookList books={bestSeller}/>\n                : <BookList books={newBooks}/>\n            }\n        </div>\n    )\n}\n\nfunction BookList(props) {\n\n    let history = useHistory();\n\n    return (\n        <div className='row'>\n            {props.books && props.books.map((book, i) => (\n                <div className=\"col-lg-3 col-sm-4\" key={book.itemId} onClick={()=>{ history.push('/detail/' + book.isbn)}}>\n                    <BookWrapper>\n                        <h3>{book.rank}</h3>\n                        <BookImageWrapper><img src={book.coverLargeUrl}/></BookImageWrapper>\n                        <p>{book.title}</p>\n                        {book.author} / {book.publisher}\n                    </BookWrapper>\n                </div>\n            ))} \n        </div>\n    )\n}\n\nexport default Book;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Book from './Book.js'\n\nexport let BestSellerContext = React.createContext();\n\nfunction BestSeller() {\n\n    let [books, setBooks] = useState();\n    \n    useEffect(() => {\n        axios.get('/api/bestseller')\n            .then((res) => {\n                // console.log(res.data);\n                // console.log(Array.isArray(res.data));\n                setBooks(res.data);\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div className='row'>\n            <BestSellerContext.Provider value={books}>\n                <Book />\n            </BestSellerContext.Provider>\n        </div>\n    )\n}\n\nexport default BestSeller;","import React, {useContext} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {BestSellerContext} from './BestSeller.js'\nimport {NewBooksContext} from './NewBooks.js'\nimport \"./App.css\";\n\nfunction Detail() {\n\n    let bestSeller = useContext(BestSellerContext);\n    let newBook = useContext(NewBooksContext);\n    \n    return (\n        <div>\n            {\n                bestSeller\n                ? <DetailView books={bestSeller}/>\n                : <DetailView books={newBook}/>\n            }\n        </div>\n    )\n}\n\nfunction DetailView(props) {\n\n    let { isbn } = useParams();\n\n    let book = props.books && props.books.find(x => x.isbn == isbn);\n    return (\n        <div>\n            {/* <img src={book.coverLargeUrl}/>\n            {book.title}\n            {book.author}\n            {book.publisher} */}\n        </div>\n    )\n}\n\nexport default Detail;","import React from \"react\";\nimport {\n    InputGroup,\n    FormControl,\n    Button,\n    Nav,\n    Navbar,\n    Container,\n} from \"react-bootstrap\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport BestSeller,{BestSellerContext} from \"./BestSeller.js\";\nimport NewBooks from \"./NewBooks.js\";\nimport Detail from \"./Detail.js\"\nimport \"./App.css\";\nimport styled from 'styled-components';\n\n\n// const GlobalStyle  =  createGlobalStyle`\n//   font-family: 'Pretendard-Medium';\n// `\n\nlet Wrapper = styled.div`\n  width : 70%;\n  margin : auto;\n`;\nlet UserStyle = styled.div`\n  text-align: right;\n  padding : 2rem;\n  font-size : 13pt;\n  background-color: hsl(146, 45%, 36%);\n  color: floralwhite;\n`;\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n\n            {/* <GlobalStyle/> */}\n            <UserStyle>\n                <span>로그인</span>\n                <span> | </span>\n                <span>회원가입</span>\n                <span> | </span>\n                <span>마이페이지</span>\n                <InputGroup className=\"my-5 w-50 mx-auto\">\n                    <FormControl\n                        size=\"lg\"\n                        type=\"search\"\n                        placeholder=\"검색을 원하는 책, 저자를 입력해주세요.\"\n                        aria-label=\"Search\"\n                    />\n                    <Button variant=\"outline-light\" >검색</Button>\n                </InputGroup>\n            </UserStyle>\n            <Navbar bg=\"success\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand className=\"fs-3\">도서</Navbar.Brand>\n                    <Nav className=\"me-auto fs-5\">\n                        <Nav.Link as={Link} to=\"/api/bestseller\">베스트셀러</Nav.Link>\n                        <Nav.Link as={Link} to=\"/api/newbook\">신간도서</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n      <Switch>\n        <Wrapper>\n          <Route exact path=\"/api/bestseller\">\n            <BestSeller />\n          </Route>\n          <Route path=\"/api/newbook\">\n            <NewBooks />\n          </Route>\n          <Route path=\"/detail/:isbn\">\n            {/* <BestSellerContext.Provider value={books}> */}\n              <Detail/>\n              {/* <Detail books={books}/> */}\n            {/* </BestSellerContext.Provider> */}\n          </Route>\n        </Wrapper>\n      </Switch>\n    </div>\n  );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}