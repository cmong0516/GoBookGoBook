{"version":3,"sources":["BestSeller.js","NewBooks.js","App.js","reportWebVitals.js","index.js"],"names":["BestSeller","useState","books","setBooks","useEffect","axios","get","then","res","data","catch","error","alert","console","log","className","map","book","i","src","coverLargeUrl","width","title","author","publisher","itemId","NewBooks","Array","isArray","Wrapper","styled","div","UserStyle","App","action","method","for","type","name","id","Navbar","bg","expand","Container","Brand","Toggle","Collapse","Nav","Link","as","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAkCeA,MA/Bf,WAEI,MAAwBC,qBAAxB,mBAAKC,EAAL,KAAYC,EAAZ,KAgBA,OAdAC,qBAAU,WACNC,IAAMC,IAAI,mBACLC,MAAK,SAACC,GAIHL,EAASK,EAAIC,SAEdC,OAAM,SAACC,GACNC,MAAM,+GACNC,QAAQC,IAAIH,QAEtB,IAGE,qBAAKI,UAAU,MAAf,SACKb,GAASA,EAAMc,KAAI,SAACC,EAAMC,GAAP,OAChB,sBAAKH,UAAU,6BAAf,UACI,qBAAKI,IAAKF,EAAKG,cAAeC,MAAM,QACpC,4BAAIJ,EAAKK,QACRL,EAAKM,OAHV,MAGqBN,EAAKO,YAHuBP,EAAKQ,cCUvDC,I,IAAAA,EA/Bf,WAEI,MAAwBzB,qBAAxB,mBAAKC,EAAL,KAAYC,EAAZ,KAgBA,OAdAC,qBAAU,WACNC,IAAMC,IAAI,gBACLC,MAAK,SAACC,GACHK,QAAQC,IAAIN,EAAIC,MAChBI,QAAQC,IAAIa,MAAMC,QAAQpB,EAAIC,OAE9BN,EAASK,EAAIC,SAEdC,OAAM,SAACC,GACNC,MAAM,+GACNC,QAAQC,IAAIH,QAEtB,IAGE,qBAAKI,UAAU,MAAf,SACKb,GAASA,EAAMc,KAAI,SAACC,EAAMC,GAAP,OAChB,sBAAKH,UAAU,6BAAf,UACI,qBAAKI,IAAKF,EAAKG,cAAeC,MAAM,QACpC,4BAAIJ,EAAKK,QACRL,EAAKM,OAHV,MAGqBN,EAAKO,YAHuBP,EAAKQ,c,gBCLlEI,EAAUC,IAAOC,IAAV,8DAIPC,EAAYF,IAAOC,IAAV,qEAkEEE,MA7Df,WAEE,OACE,sBAAKlB,UAAU,MAAf,UAGE,eAACiB,EAAD,WACE,sDACA,uCACA,4DACA,uCACA,qEAWF,8BACA,uBAAME,OAAO,UAAUC,OAAO,OAA9B,UACE,uBAAOC,IAAI,YAAX,sHACA,uBAAOC,KAAK,OAAOC,KAAK,QAAQC,GAAG,mBAGrC,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,2BACA,cAACJ,EAAA,EAAOK,OAAR,CAAe,gBAAc,qBAC7B,cAACL,EAAA,EAAOM,SAAR,CAAiBP,GAAG,mBAApB,SACE,eAACQ,EAAA,EAAD,CAAKhC,UAAU,UAAf,UACE,cAACgC,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,cAAvB,4CAGA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,WAAvB,gDAOR,uBAEA,cAAC,IAAD,UACE,eAACrB,EAAD,WACE,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,eCpEGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACI,cAAC,EAAD,QAGNC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cc06be7a.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nfunction BestSeller() {\n\n    let [books, setBooks] = useState()\n    \n    useEffect(() => {\n        axios.get('/api/bestseller')\n            .then((res) => {\n                // console.log(res.data);\n                // console.log(Array.isArray(res.data));\n\n                setBooks(res.data);\n\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div className='row'>\n            {books && books.map((book, i) => (\n                <div className=\"col-lg-2 col-md-3 col-sm-4\" key={book.itemId}>\n                    <img src={book.coverLargeUrl} width=\"90%\"/>\n                    <p>{book.title}</p>\n                    {book.author} | {book.publisher}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default BestSeller;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nfunction NewBooks() {\n\n    let [books, setBooks] = useState()\n    \n    useEffect(() => {\n        axios.get('/api/newbook')\n            .then((res) => {\n                console.log(res.data);\n                console.log(Array.isArray(res.data));\n\n                setBooks(res.data);\n\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div className='row'>\n            {books && books.map((book, i) => (\n                <div className=\"col-lg-2 col-md-3 col-sm-4\" key={book.itemId}>\n                    <img src={book.coverLargeUrl} width=\"90%\"/>\n                    <p>{book.title}</p>\n                    {book.author} | {book.publisher}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default NewBooks;","import React from \"react\";\nimport {\n  InputGroup,\n  FormControl,\n  Button,\n  Nav,\n  Navbar,\n  Container,\n} from \"react-bootstrap\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport BestSeller from \"./BestSeller.js\";\nimport NewBooks from \"./NewBooks.js\";\nimport \"./App.css\";\nimport styled from 'styled-components';\n\n// const GlobalStyle  =  createGlobalStyle`\n//   font-family: 'Pretendard-Medium';\n// `\n\nlet Wrapper = styled.div`\n  width : 80%;\n  margin : auto;\n`;\nlet UserStyle = styled.div`\n  text-align: right;\n  padding : 20pt;\n`;\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n      {/* <GlobalStyle/> */}\n      <UserStyle>\n        <span>로그인</span>\n        <span> | </span>\n        <span>회원가입</span>\n        <span> | </span>\n        <span>마이페이지</span>\n      </UserStyle>\n      {/*<InputGroup className=\"p-5\">*/}\n      {/*  <FormControl*/}\n      {/*    size=\"lg\"*/}\n      {/*    type=\"search\"*/}\n      {/*    placeholder=\"제목, 저자, 출판사로 검색\"*/}\n      {/*    aria-label=\"Search\"*/}\n      {/*  />*/}\n      {/*  <Button variant=\"outline-secondary\" >검색</Button>*/}\n      {/*</InputGroup>*/}\n      <div>\n      <form action=\"/search\" method=\"POST\">\n        <label for=\"searching\">검색을 원하는 책 , 저자 를 입력해주세요.</label>\n        <input type=\"text\" name=\"query\" id=\"searching\"></input>\n      </form>\n      </div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand>도서</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/bestseller\">\n                베스트셀러\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/newbook\">\n                신간도서\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <hr />\n\n      <Switch>\n        <Wrapper>\n          <Route exact path=\"/bestseller\">\n            <BestSeller />\n          </Route>\n          <Route path=\"/newbook\">\n            <NewBooks />\n          </Route>\n        </Wrapper>\n      </Switch>\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}