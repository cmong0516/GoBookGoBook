{"version":3,"sources":["NewBooks.js","Book.js","BestSeller.js","RentButton.js","Detail.js","Search.js","Login.js","Signin.js","SearchBar.js","MyRentBooks.js","MyRent.js","MyInfo.js","Mypage.js","App.js","reportWebVitals.js","index.js"],"names":["NewBooksContext","React","createContext","CategoryStyle","styled","div","NewBooks","props","useState","books","setBooks","categoryNewbooks","categoryId","axios","get","then","res","data","catch","error","console","log","alert","useEffect","post","className","Col","Nav","variant","Item","Link","onClick","Provider","value","getBooks","BookWrapper","BookImageWrapper","BookList","history","useHistory","map","book","i","push","isbn","rank","src","coverLargeUrl","title","author","publisher","itemId","Book","bestSeller","useContext","BestSellerContext","newBooks","BestSeller","RentButton","userId","localStorage","getItem","rentStatus","setRentStatus","mybook","Button","size","categoryName","coverSmallUrl","customerReviewRank","description","pubDate","DetailView","useParams","find","x","width","translator","Detail","BookContext","Search","SetBookContext","result","setResult","searchWord","params","query","thumbnail","contents","authors","dateTime","LoginForm","Signin","span","Alarm","Login","alarm","setAlarm","userPw","account","setAccount","idFormat","RegExp","passwordFormat","onChangeFunc","e","target","name","onSubmit","preventDefault","test","userName","setItem","JSON","stringify","setIsLogin","type","placeholder","onChange","to","SigninForm","GroupStyle","validated","setValidated","nameAlarm","setNameAlarm","idAlarm","setIdAlarm","pwAlarm","setPwAlarm","pwMatchAlarm","setPwMatchAlarm","userEmail","userPwCheck","nameFormat","Form","noValidate","form","currentTarget","checkValidity","code","Group","Label","Control","required","Feedback","SearchBar","InputGroup","FormControl","onKeyDown","key","searchWordChange","onKeyUp","CartStyle","MyrentPage","Card","Img","Body","Title","Text","MyRent","radioValue","setRadioValue","parse","setRentBooks","ButtonGroup","radio","idx","ToggleButton","id","checked","MyRentBooks","InfoForm","MyInfo","emailAlarm","setEmailAlarm","useremail","userpw","userpwCheck","emailFormat","setMenu","MyMenu","MyList","Mypage","menu","Row","sm","ListGroup","action","Wrapper","UserStyle","App","booksData","href","clear","Navbar","bg","Container","Brand","as","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.102fe5b6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Book from \"./Book.js\";\nimport { Nav, Col } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nexport let NewBooksContext = React.createContext();\n\nlet CategoryStyle = styled.div`\n  text-align: left;\n`;\n\nfunction NewBooks(props) {\n  let [books, setBooks] = useState();\n\n  useEffect(() => {\n    axios\n      .post(\"/api/newbook\")\n      .then((res) => {\n        setBooks(res.data);\n      })\n      .catch((error) => {\n        alert(\"도서 데이터를 받아오는 데 실패했습니다.\");\n        console.log(error);\n      });\n  }, []);\n\n  function categoryNewbooks(categoryId) {\n    axios\n      .get(\"/api/newbook/\" + categoryId)\n      .then((res) => {\n        setBooks(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\"카테고리 신간 데이터를 받을 수 없습니다.\");\n        console.log(error);\n      });\n  }\n\n  return (\n    <div className=\"row\">\n      <Col>\n        <CategoryStyle>\n          <Nav variant=\"tabs\">\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"101\");\n                }}\n              >\n                소설\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"102\");\n                }}\n              >\n                시/에세이\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"103\");\n                }}\n              >\n                예술/대중문화\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"110\");\n                }}\n              >\n                아동\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"117\");\n                }}\n              >\n                경제경영\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"118\");\n                }}\n              >\n                자기계발\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </CategoryStyle>\n\n        <NewBooksContext.Provider value={books}>\n          {props.getBooks(books)}\n          <Book />\n        </NewBooksContext.Provider>\n      </Col>\n    </div>\n  );\n}\n\nexport default NewBooks;\n","import React, {useContext} from 'react';\nimport {BestSellerContext} from './BestSeller.js'\nimport {NewBooksContext} from './NewBooks.js'\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nlet BookWrapper = styled.div`\n  width: 80%;\n  margin-top: 2rem;\n  text-align: left;\n  cursor: pointer; \n\n  p {\n    font-size: 13pt;\n    font-weight: 600;\n    margin: 0.5rem 0 0 0;\n  }\n\n  h3 {\n    color: gold;\n    text-shadow: 2px 2px 1px blue;\n    font-style: italic;\n    font-weight: bolder;\n  }\n`\nlet BookImageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n\n  img {\n    width: 11rem; \n    height: 16rem;\n    object-fit: cover;\n    border: solid 0.1rem darkgreen;\n  }\n`\n\nfunction Book() {\n\n    let bestSeller = useContext(BestSellerContext);\n    let newBooks = useContext(NewBooksContext);\n   \n    return (\n        <div>\n            {\n                bestSeller\n                ? <BookList books={bestSeller}/>\n                : <BookList books={newBooks}/>\n            }\n        </div>\n    )\n}\n\nfunction BookList(props) {\n\n    let history = useHistory();\n\n    return (\n        <div className='row'>\n            {props.books && props.books.map((book, i) => (\n                <div className=\"col-lg-3 col-sm-4\" key={book.itemId} onClick={()=>{ history.push('/detail/' + book.isbn)}}>\n                    <BookWrapper>\n                        <h3>{book.rank}</h3>\n                        <BookImageWrapper><img src={book.coverLargeUrl}/></BookImageWrapper>\n                        <p>{book.title}</p>\n                        {book.author} / {book.publisher}\n                    </BookWrapper>\n                </div>\n            ))} \n        </div>\n    )\n}\n\nexport default Book;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Book from './Book.js'\n\nexport let BestSellerContext = React.createContext();\n\nfunction BestSeller(props) {\n    \n    // 아래 state App.js에서 Context API로 받아오는걸로 바꾸고 getBooks삭제\n    let [books, setBooks] = useState();\n    \n    useEffect(() => {\n        axios.post('/api/bestseller')\n            .then((res) => {\n                // console.log(res.data);\n                // console.log(Array.isArray(res.data));\n                setBooks(res.data);\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div>\n            <BestSellerContext.Provider value={books}>\n                {props.getBooks(books)}\n                <Book />\n            </BestSellerContext.Provider>\n        </div>\n    )\n}\n\nexport default BestSeller;","import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction RentButton(props) {\n  \n    // let userId = JSON.parse(localStorage.getItem('userId'));\n    let userId = localStorage.getItem('userId');\n  \n    let history = useHistory();\n    let [rentStatus, setRentStatus] = useState(\"rent\");\n  \n    // 이미 빌린 책인지 체크\n    \n    // 버튼을 누르지 않고도 detail페이지에 왔을 때 아래 useEffect가 실행(리렌더링)되어야 한다.\n    // 따라서 상위컴포넌트(Detail, Search로부터 props를 받아 리렌더링 되도록...)\n    useEffect(() => {\n      axios.post( \"/rent/info\", {userId: userId} )\n          .then((res) => {\n              // console.log(res.data);\n              res.data && res.data.map((mybook, i) => (\n                // 검색에서 책 하나를 빌리면 하단 책들까지 모두 반납하기 버튼으로 변경되는 문제 해결 필요\n                mybook.title == props.book.title\n                ? setRentStatus(\"return\")\n                : setRentStatus(\"rent\")\n              ))\n          })\n          .catch((error) => {\n              alert(\"빌린도서 리스트를 받아오는 데 실패했습니다.\");\n              console.log(error);\n          });\n    }, [props.book]);\n\n    let rentFunc = () => {\n  \n      // 리렌더링되면 isLogin도 false로 초기화\n      // 이미 로그인상태인데 아래에 걸려버리는 이슈\n      // 로컬스토리지 이용 필요하므로 여기서는 userId를 통해 확인\n      if(!userId) {\n        alert('로그인 후 이용할 수 있습니다.');\n        return history.push(\"/login\");\n      }\n  \n      axios\n        .post(\"/rent/add\", {\n          author: props.book.author,\n          categoryName: props.book.categoryName,\n          coverLargeUrl: props.book.coverLargeUrl,\n          coverSmallUrl: props.book.coverSmallUrl,\n          customerReviewRank: props.book.customerReviewRank,\n          description: props.book.description,\n          isbn: props.book.isbn,\n          pubDate: props.book.pubDate,\n          publisher: props.book.publisher,\n          rank: props.book.rank,\n          title: props.book.title,\n          userId: userId\n        })\n        .then((res) => {\n          setRentStatus(\"return\")\n          alert(\"대여 성공!\");\n          console.log(res);\n        })\n        .catch((error) => {\n          alert(\"대여 통신에 실패했습니다.\");\n          console.log(error);\n        });\n    };\n  \n    // 로그인 안되있는 경우 로그인화면으로?\n    if (rentStatus == \"rent\") {\n      return (\n        <Button variant=\"success\" size=\"lg\" onClick={rentFunc}>\n          대여하기\n        </Button>\n      );\n    } else if (rentStatus == \"return\") {\n      return (\n        <Button variant=\"dark\" size=\"lg\">\n          반납하기\n        </Button>\n      );\n    } else if (rentStatus == \"forbidden\") {\n      return (\n        <Button variant=\"danger\" size=\"lg\">\n          대여불가\n        </Button>\n      );\n    }\n}\n\nexport default RentButton;","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./App.css\";\nimport {BookContext} from \"./App.js\";\nimport RentButton from \"./RentButton.js\"\n\nfunction Detail() {\n  let book = useContext(BookContext);\n\n  return (\n    <div>\n      {\n        book \n        ? <DetailView books={book} />\n        : alert(\"새로고침으로 인해 state가 유지되지 않아 도서데이터 수신에 실패했습니다.\")\n      }\n    </div>\n  );\n}\n\nfunction DetailView(props) {\n\n  let { isbn } = useParams();\n  let book = props.books && props.books.find((x) => x.isbn == isbn);\n\n  return (\n    <div>\n      <img src={book.coverLargeUrl} width=\"300rem\" />\n      {book.title}\n      <br />\n      {book.author}\n      <br />\n      {book.translator}\n      <br />\n      {book.pubDate}\n      <br />\n      {book.publisher}\n      <br />\n      {book.categoryId}\n      <br />\n      {book.categoryName}\n      <br />\n      {book.isbn}\n      <br />\n      {book.customerReviewRank}\n      <br />\n      {book.description}\n      <br />\n      <RentButton book={book} />\n    </div>\n  );\n}\n\nexport default Detail;\n","import React, {useEffect, useState, useContext} from 'react';\nimport axios from 'axios';\nimport RentButton from \"./RentButton.js\"\nimport {BookContext, SetBookContext} from \"./App.js\";\n\nfunction Search(props) {\n\n    let books = useContext(BookContext);\n    let setBooks = useContext(SetBookContext);\n\n    let [result, setResult] = useState();\n    let searchWord = props.searchWord;\n    let userId = localStorage.getItem('userId');\n\n    useEffect(() => {\n        axios.get('/api/search', {params : {query : searchWord}})\n        .then(res => {\n            setResult(res.data);\n            console.log(res.data);\n        })\n        .catch(error => {\n            alert('검색결과 데이터를 받아오는 데 실패했습니다.');\n            // console.log(searchWord);\n            console.log(error);\n        });\n    },[searchWord]);\n\n    return (\n        <div>\n            {/* 검색결과가 없는 경우도 처리해야함 */}\n            {result && result.map((book, i) => (\n                <div key={book.itemId}>\n                    <img src={book.thumbnail}/>\n                    {book.title}<br/>\n                    줄거리 : {book.contents}<br/>\n                    {book.authors}/{book.publisher}/{book.dateTime}/{book.translator}/{book.isbn}\n                    {() => setBooks({\n                        author: book.authors,\n                        categoryName: book.categoryName,\n                        coverLargeUrl: book.coverLargeUrl,\n                        coverSmallUrl: book.thumbnail,\n                        customerReviewRank: book.customerReviewRank,\n                        description: book.contents,\n                        isbn: book.isbn,\n                        pubDate: book.dateTime,\n                        publisher: book.publisher,\n                        rank: book.rank,\n                        title: book.title,\n                        userId: userId\n                    })}\n                    <RentButton book={books} />\n                </div>\n            ))} \n        </div>\n    )\n}\n\nexport default Search;","import axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nlet LoginForm = styled.div`\n  width: 22rem;\n  margin: auto;\n  padding-bottom: 3rem;\n\n  input,\n  button {\n    width: 100%;\n    height: 3rem;\n    margin-bottom: 1rem;\n  }\n  input {\n    border: solid 1px lightgrey;\n    border-radius: 4px;\n    padding: 0.7rem;\n  }\n  h3 {\n    font-weight: bold;\n    text-align: left;\n  }\n  p {\n    text-align: left;\n  }\n`;\nlet Signin = styled.span`\n  font-size: 13pt;\n  text-decoration: underline;\n`;\nlet Alarm = styled.div`\n  width: 100%;\n  text-align: left;\n  color: red;\n  font-weight: bold;\n  font-size: 13pt;\n`;\n\nfunction Login(props) {\n    let history = useHistory();\n\n    let [alarm, setAlarm] = useState(\"\");\n    let [account, setAccount] = useState({\n        userId: \"\",\n        userPw: \"\",\n    });\n\n    // 아이디 : 영어/숫자 6-12자\n    let idFormat = RegExp(/^[A-Za-z0-9]{6,12}$/);\n    // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n    let passwordFormat = RegExp(\n        /^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/\n    );\n\n    let onChangeFunc = (e) => {\n        setAccount({\n        ...account,\n        [e.target.name]: e.target.value,\n        });\n    };\n\n    let submitFunc = (e) => {\n        e.preventDefault();\n\n        if (!account.userId) { setAlarm('아이디가 입력되지 않았습니다.') }\n        else if (!account.userPw) { setAlarm('비밀번호가 입력되지 않았습니다.') }\n        else if (!idFormat.test(account.userId) || !passwordFormat.test(account.userPw)) {\n            setAlarm('아이디 또는 비밀번호를 잘못 입력하셨습니다. 입력하신 내용을 다시 확인해주세요.')\n        } else {\n            axios.post('/login', {\n                    userId:account.userId,\n                    userPw:account.userPw\n                })\n            .then(res => {\n                if(res) {\n                    console.log(res);\n                    alert(res.data.userName + '님, 로그인되었습니다🐢');\n                    localStorage.setItem('userName', JSON.stringify(res.data.userName));\n                    // localStorage.setItem('userId', JSON.stringify(res.data.userId));\n                    localStorage.setItem('userId', res.data.userId);\n                    props.setIsLogin(true)\n                     // 리렌더링을 위해 상위컴포넌트로부터 받은 state변경\n                    history.push(\"/\");\n                } else {\n                    setAlarm('아이디 또는 비밀번호를 잘못 입력하셨습니다.')\n                }\n            })\n            .catch(error => {\n                alert('통신실패! 에러명 : ' + error);\n            });\n        }\n    }\n\n    return (\n        <LoginForm>\n            <form onSubmit={submitFunc}>\n                <h3>로그인</h3>\n                <p>Go Book Go Book의 다양한 서비스를 누리세요!</p>\n                <Alarm>{alarm}</Alarm>\n                <input\n                    type=\"text\"\n                    name=\"userId\"\n                    placeholder=\"아이디를 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></input>\n                <input\n                    type=\"password\"\n                    name=\"userPw\"\n                    placeholder=\"비밀번호를 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></input>\n                \n                <Button variant=\"primary\" type=\"submit\" size=\"lg\">로그인</Button>\n                아이디가 없으신가요?&nbsp;&nbsp;&nbsp;\n                <Signin><Link to=\"/signin\">회원가입</Link></Signin>\n            </form>\n        </LoginForm>\n    );\n}\n\nexport default Login;\n","import React, {useState} from \"react\";\nimport { Button,Form } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport axios from \"axios\";\n\nlet SigninForm = styled.div`\n    width: 22rem;\n    margin: auto;\n    padding-bottom: 3rem;\n    text-align: left;\n    input, button {\n        width: 100%;\n        height: 3rem;\n        // margin-bottom: 1rem;\n    }\n    button {\n        margin-top: 1rem;\n    }\n    h3 {\n        font-weight: bold;\n    }\n`\nlet GroupStyle = styled.div`\n    margin: 1rem 0;\n`\nlet Alarm = styled.div`\n    width: 100%;\n    text-align: left;\n    color: red;\n    font-weight: bold;   \n`\n\nfunction Signin() {\n\n    let history = useHistory();\n\n    let [validated, setValidated] = useState(false);\n    let [nameAlarm, setNameAlarm] = useState('');\n    let [idAlarm, setIdAlarm] = useState('');\n    // let [emailAlarm, setEmailAlarm] = useState('');\n    let [pwAlarm, setPwAlarm] = useState('');\n    let [pwMatchAlarm, setPwMatchAlarm] = useState('');\n    let [account, setAccount] = useState({\n        userName: '',\n        userId: '',\n        userEmail: '',\n        userPw: '',\n        userPwCheck: ''\n    })\n\n    // 아이디 : 영어/숫자 6-12자\n    let idFormat = RegExp(/^[A-Za-z0-9]{6,12}$/);\n    // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n    let passwordFormat = RegExp(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/);\n    // 이름 : 한글 2자이상\n    let nameFormat = RegExp(/^[가-힣]{2,}$/);\n\n    // 이메일 유효성검사는 이미 input type=\"email\"에서 검증되므로 불필요\n    // 이메일 : (이메일아이디 영어/숫자 하나 이상) + @(필수) + (영어 하나이상) + .(특수문자이므로 \\붙임) + (영어 하나이상)\n    // let emailFormat = RegExp(/^[A-Za-z0-9]+@[A-Za-z]+\\.[A-Za-z]+$/);\n\n    let onChangeFunc = (e) => {\n        setAccount({\n            ...account, [e.target.name]: e.target.value\n        })\n    }\n    let submitFunc = (e) => {\n        e.preventDefault();\n        let form = e.currentTarget;\n        setNameAlarm('');\n        setIdAlarm('');\n        // setEmailAlarm('');\n        setPwAlarm('');\n        setPwMatchAlarm('');\n\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            setValidated(true);\n        } else if( !nameFormat.test(account.userName) || !idFormat.test(account.userId) || !passwordFormat.test(account.userPw) ) {\n            // || !emailFormat.test(account.useremail) || !passwordFormat.test(account.userpw) ) {\n\n            if( !nameFormat.test(account.userName) )\n                setNameAlarm('이름의 형식이 올바르지 않습니다.');\n            if( !idFormat.test(account.userId) )\n                setIdAlarm('아이디의 형식이 올바르지 않습니다.');\n            // if( !emailFormat.test(account.useremail) )\n            //     setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n            if( !passwordFormat.test(account.userPw) )\n                setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n\n        } else if(account.userPw != account.userPwCheck) {\n            setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n        } else {\n            console.log(account);\n            axios.post('/signin', {\n                    userId: account.userId,\n                    userPw: account.userPw,\n                    userName: account.userName,\n                    userEmail: account.userEmail\n                })\n            .then(res => {\n                if (res.data) {\n                    alert('회원가입이 완료되었습니다😇');\n                    history.push(\"/login\");\n                } else {\n                    console.log(res.data.code)\n                    alert('이미 가입된 정보입니다😰');\n                    history.push(\"/login\");\n                }\n            })\n            .catch(error => {\n                alert('통신실패! 에러명 : ' + error);\n                console.log(error);\n            });\n        }\n\n    }\n\n    return (\n        <SigninForm>\n            <div className=\"loginform\">\n                <Form noValidate validated={validated} onSubmit={submitFunc}>\n                    <h3>회원가입</h3>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>이름</Form.Label>\n                            <Alarm>{nameAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                name=\"userName\"\n                                placeholder=\"ex) 홍길동\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">이름을 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>아이디</Form.Label>\n                            <Alarm>{idAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                name=\"userId\"\n                                placeholder=\"영어/숫자 포함 6-12자를 입력해주세요.\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">아이디를 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>이메일</Form.Label>\n                            {/* <Alarm>{emailAlarm}</Alarm> */}\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                name=\"userEmail\"\n                                placeholder=\"ex) GoBook@naver.com\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">이메일을 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>비밀번호</Form.Label>\n                            <Alarm>{pwAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                name=\"userPw\"\n                                placeholder=\"영어/숫자/특수문자 포함 9-20자를 입력해주세요.\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>비밀번호 확인</Form.Label>\n                            <Alarm>{pwMatchAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                name=\"userPwCheck\"\n                                placeholder=\"확인을 위해 비밀번호를 한번 더 입력해주세요.\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">비밀번호 확인을 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        회원가입하기\n                    </Button>\n                </Form>\n\n            </div>\n        </SigninForm>\n    );\n}\n\nexport default Signin;","import React from 'react';\nimport {InputGroup, FormControl, Button} from \"react-bootstrap\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction SearchBar(props) {\n\n    let history = useHistory();\n\n    return (\n        <div>\n            <InputGroup className=\"my-5 w-50 mx-auto\">\n                <FormControl\n                    size=\"lg\"\n                    type=\"search\"\n                    placeholder=\"검색을 원하는 책, 저자를 입력해주세요.\"\n                    onKeyDown={(e) => { if(e.key =='Enter') { props.searchWordChange(e.target.value) } }}\n                    onKeyUp={(e) => { if(e.key =='Enter') { history.push('/api/search?query=' + props.searchWord) } }}\n                />\n                <Button \n                    className=\"rounded-1\" \n                    variant=\"outline-light\" \n                    onClick={()=>{ history.push('/search?query=' + props.searchWord) }}>검색</Button>\n            </InputGroup>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nlet CartStyle = styled.div`\n  width: 18rem;\n  margin-top: 1rem;\n`;\n\nfunction MyrentPage(props) {\n  return (\n    <CartStyle>\n      <Card>\n        <Card.Img variant=\"top\" src=\"./\" />\n        <Card.Body>\n          <Card.Title>도서명</Card.Title>\n          <Card.Text>대여일 : </Card.Text>\n          <Card.Text>반납일 : (D-계산값)</Card.Text>\n          <Button variant=\"outline-danger\">반납하기</Button>\n        </Card.Body>\n      </Card>\n    </CartStyle>\n  );\n}\n\nexport default MyrentPage;\n","import React, { useEffect, useState } from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport MyRentBooks from \"./MyRentBooks.js\";\nimport axios from \"axios\";\n\nfunction MyRent() {\n  const [radioValue, setRadioValue] = useState(\"1\");\n  let userName = JSON.parse(localStorage.getItem(\"userName\"));\n  // let userId = JSON.parse(localStorage.getItem('userId'));\n  let userId = localStorage.getItem(\"userId\");\n  let [rentBooks, setRentBooks] = useState();\n\n  const radios = [\n    { name: \"현재 대여중인 도서\", value: \"1\" },\n    { name: \"지난 대여 내역\", value: \"2\" },\n  ];\n  // const radios = [\n  //     { name: \"현재 대여중인 도서\", value: \"1\" },\n  //     { name: \"지난 대여 내역\", value: \"2\" },\n  //   ];\n  useEffect(() => {\n    axios\n      .post(\"/rent/info\", { userId: userId })\n      .then((res) => {\n        setRentBooks(res.data);\n      })\n      .catch((error) => {\n        alert(\"도서 데이터를 받아오는 데 실패했습니다.\");\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>{userName}님, 반가워요!</h2>\n      <p>현재 대여중인 도서는 0/5 권 입니다.</p>\n      <ButtonGroup>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            id={`radio-${idx}`}\n            type=\"radio\"\n            variant={idx % 2 ? \"outline-primary\" : \"outline-primary\"}\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue == radio.value}\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n\n      {radioValue == 1 ? <MyRentBooks /> : null}\n    </div>\n  );\n}\n\nexport default MyRent;\n","import React, {useState} from \"react\";\nimport { Button,Form } from \"react-bootstrap\";\nimport styled from 'styled-components';\n\nlet InfoForm = styled.div`\n    width: 80%;\n    padding-bottom: 3rem;\n\n    input, button {\n      height: 3rem;\n      // margin-bottom: 1rem;\n    }\n    button {\n      width: 30%;\n      margin-top: 1rem;\n      margin-right: 1rem;\n    }\n`\nlet GroupStyle = styled.div`\n    margin: 1rem 0;\n`\nlet Alarm = styled.div`\n    width: 100%;\n    text-align: left;\n    color: red;\n    font-weight: bold;   \n`\n\nfunction MyInfo(props) {\n\n  let [alarm, setAlarm] = useState('')\n  let [emailAlarm, setEmailAlarm] = useState('');\n  let [pwAlarm, setPwAlarm] = useState('');\n  let [pwMatchAlarm, setPwMatchAlarm] = useState('');\n  let [account, setAccount] = useState({\n      useremail: '',\n      userpw: '',\n      userpwCheck: ''\n  })\n\n  // 이메일 : (이메일아이디 영어/숫자 하나 이상) + @(필수) + (영어 하나이상) + .(특수문자이므로 \\붙임) + (영어 하나이상)\n  let emailFormat = RegExp(/^[A-Za-z0-9]+@[A-Za-z]+\\.[A-Za-z]+$/);\n  // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n  let passwordFormat = RegExp(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/);\n\n  let onChangeFunc = (e) => {\n    setAccount({\n        ...account, [e.target.name]: e.target.value\n    })\n  }\n\n  let submitFunc = (e) => {\n    e.preventDefault();\n    let form = e.currentTarget;\n\n    setAlarm('');\n    setEmailAlarm('');\n    setPwAlarm('');\n    setPwMatchAlarm('');\n\n    // 둘 다 작성하지 않는 경우\n    if ( !account.useremail && !account.userpw ) {\n      setAlarm('수정하실 정보를 작성해주세요.')\n    }\n    // 이메일만 작성하는 경우\n    if ( account.useremail && !account.userpw ) {\n      // 형식확인\n      if(!emailFormat.test(account.useremail) ) {\n        setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n      } else {\n        alert('콘솔창 확인');\n        console.log(account);\n      }\n    }\n    // 비밀번호만 작성하는 경우\n    if ( !account.useremail && account.userpw ) {\n      // 형식확인\n      if( !passwordFormat.test(account.userpw) ) {\n        setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n      // 비밀번호 확인란과 일치여부\n      } else if ( account.userpw != account.userpwCheck) {\n        setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n      } else {\n        alert('콘솔창 확인');\n        console.log(account);\n      }\n    }\n    // 둘 다 작성한 경우\n    if ( account.useremail && account.userpw ) {\n      // 이메일 형식확인\n      if( !emailFormat.test(account.useremail) ) {\n        setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n      } \n      // 비밀번호 형식확인\n      // 이메일, 비밀번호 둘 다 형식에 맞지 않는 경우를 위해 if문을 따로 작성\n      if( !passwordFormat.test(account.userpw) ) {\n        setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n      // 비밀번호 확인란과 일치여부\n      } else if ( account.userpw != account.userpwCheck) {\n        setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n      // 비밀번호 형식/확인란 맞은 상태에서 이메일형식까지 맞으면 결과 넘어감\n      } else if ( emailFormat.test(account.useremail) ) {\n        alert('콘솔창 확인');\n        console.log(account);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>개인정보 수정</h2>\n      <p>고객님의 정보를 정확히 입력해주세요.</p>\n      <Alarm>{alarm}</Alarm>\n      <InfoForm>\n        <Form noValidate onSubmit={submitFunc}>\n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>이메일</Form.Label>\n                <Alarm>{emailAlarm}</Alarm>\n                <Form.Control\n                    required\n                    type=\"email\"\n                    name=\"useremail\"\n                    placeholder=\"ex) GoBook@naver.com\"\n                    onChange={onChangeFunc}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">이메일을 입력해주세요.</Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n          \n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>비밀번호</Form.Label>\n                <Alarm>{pwAlarm}</Alarm>\n                <Form.Control\n                    required\n                    type=\"password\"\n                    name=\"userpw\"\n                    placeholder=\"영어/숫자/특수문자 포함 9-20자를 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n\n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>비밀번호 확인</Form.Label>\n                <Alarm>{pwMatchAlarm}</Alarm>\n                <Form.Control\n                    required\n                    type=\"password\"\n                    name=\"userpwCheck\"\n                    placeholder=\"확인을 위해 비밀번호를 한번 더 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">비밀번호 확인을 입력해주세요.</Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n\n          <Button variant=\"primary\" type=\"submit\">\n              수정\n          </Button>\n          <Button variant=\"outline-danger\" type=\"button\" onClick={() => props.setMenu(0)}>\n              취소\n          </Button>\n        </Form>\n      </InfoForm>\n    </div>\n  );\n}\n\nexport default MyInfo;\n","import React, {useState} from \"react\";\nimport MyRent from \"./MyRent\";\nimport MyInfo from \"./MyInfo.js\"\nimport { Col, Row, ListGroup } from \"react-bootstrap\";\nimport styled from 'styled-components';\n\nlet MyMenu = styled.div`\n  h4 {\n    margin: 0;\n    padding: 0.5rem; \n  }\n`\nlet MyList = styled.div`\n  text-align: left;\n  padding-left: 3rem;\n  border-left: dashed 2px Silver;\n\n  h2 {\n    margin-bottom: 1rem;\n  }\n`\n\nfunction Mypage() {\n  \n  let [menu, setMenu] = useState(0);\n\n  return (\n    <Row>\n      <Col sm={3}>\n      <MyMenu>\n          <h4>마이페이지</h4>\n          <ListGroup.Item action variant=\"light\" onClick={() => setMenu(0)}>\n            나의 대여 관리\n          </ListGroup.Item>\n          <ListGroup.Item action variant=\"light\" onClick={() => setMenu(1)}>\n            개인정보 수정\n          </ListGroup.Item>\n        </MyMenu>\n      </Col>\n\n      <Col sm={9}>\n        <MyList>\n          \n          {\n            menu === 0 \n            ? <MyRent/>\n            : <MyInfo setMenu={setMenu}/>\n          }\n        </MyList>\n      </Col>\n     \n    </Row>\n  );\n}\n\nexport default Mypage;\n","import React, { useState } from \"react\";\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport BestSeller from \"./BestSeller.js\";\nimport NewBooks from \"./NewBooks.js\";\nimport Detail from \"./Detail.js\";\nimport Search from \"./Search.js\";\nimport Login from \"./Login.js\";\nimport Signin from \"./Signin.js\";\nimport SearchBar from \"./SearchBar\";\nimport Mypage from \"./Mypage.js\";\n\n// const GlobalStyle  =  createGlobalStyle`\n//   font-family: 'Pretendard-Medium';\n// `\n\nlet Wrapper = styled.div`\n  width: 70%;\n  margin: auto;\n  padding-top: 3rem;\n  min-height: 100%;\n`;\nlet UserStyle = styled.div`\n  text-align: right;\n  padding: 2rem;\n  font-size: 13pt;\n  background-color: rgb(13, 202, 240);\n  color: floralwhite;\n  span {\n    margin: 0.5rem;\n  }\n`;\n\nexport let BookContext = React.createContext();\nexport let SetBookContext = React.createContext();\n\nfunction App() {\n\n  let userId = localStorage.getItem('userId');\n  let [isLogin, setIsLogin] = useState();\n  let [books, setBooks] = useState();\n  let getBooks = (booksData) => {\n    setBooks(booksData);\n  };\n\n  let [searchWord, searchWordChange] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      {/* <GlobalStyle/> */}\n      <UserStyle>\n        <div className=\"nav\">\n          <div className=\"titleImg\">\n            <a href=\"/\">\n              {/* <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReIJDl-BNU7poDMxewQcEWm7ZLBeoxSfvVlQ&usqp=CAU\" /> */}\n              <div>Go Book Go Book</div>\n            </a>\n          </div>\n          <div>\n            {\n              userId\n              ? (<div>\n                  <Link to=\"/\">\n                    <span\n                      onClick={() => {\n                        localStorage.clear();\n                        setIsLogin(false); // 얘를 주석처리하면 로그아웃 눌러도 로그인으로 돌아오지 않음\n                      }}\n                    >\n                      로그아웃\n                    </span>\n                  </Link>\n                  <span>|</span>\n                  <Link to=\"/mypage\">\n                    <span>마이페이지&nbsp;</span>\n                  </Link>\n                </div>) \n              : (<div>\n                  <Link to=\"/login\">\n                    <span>로그인</span>\n                  </Link>\n                  <span>|</span>\n                  <Link to=\"/signin\">\n                    <span>회원가입</span>\n                  </Link>\n                </div>)\n            }\n          </div>\n        </div>\n\n        <SearchBar\n          searchWord={searchWord}\n          searchWordChange={searchWordChange}\n        />\n      </UserStyle>\n\n      <Navbar bg=\"info\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand className=\"fs-3\">도서</Navbar.Brand>\n          <Nav className=\"me-auto fs-5\">\n            <Nav.Link as={Link} to=\"/api/bestseller\">\n              베스트셀러\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/api/newbook\">\n              신간도서\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n      <Switch>\n        <Wrapper>\n          <Route exact path=\"/api/bestseller\">\n            <BestSeller getBooks={getBooks} />\n          </Route>\n          <Route exact path=\"/api/newbook\">\n            <NewBooks getBooks={getBooks} />\n          </Route>\n          <Route path=\"/detail/:isbn\">\n            <BookContext.Provider value={books}>\n              <Detail />\n            </BookContext.Provider>\n          </Route>\n\n          <Route path=\"/api/search\">\n            <BookContext.Provider value={books}>\n            <SetBookContext.Provider value={setBooks}>\n              <Search searchWord={searchWord} />\n            </SetBookContext.Provider>\n            </BookContext.Provider>\n          </Route>\n\n          <Route path=\"/login\">\n            <Login setIsLogin={setIsLogin}/>\n          </Route>\n          <Route path=\"/signin\">\n            <Signin />\n          </Route>\n          <Route path=\"/mypage\">\n            <Mypage />\n          </Route>\n        </Wrapper>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}