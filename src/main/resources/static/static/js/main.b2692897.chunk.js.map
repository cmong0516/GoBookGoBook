{"version":3,"sources":["NewBooks.js","Book.js","BestSeller.js","RentButton.js","Detail.js","Search.js","Login.js","Signin.js","SearchBar.js","MyRentBooks.js","MyRent.js","MyInfo.js","Mypage.js","App.js","reportWebVitals.js","index.js"],"names":["NewBooksContext","React","createContext","CategoryStyle","styled","div","NewBooks","books","useContext","BookContext","setBooks","SetBookContext","categoryNewbooks","categoryId","axios","get","then","res","data","catch","error","console","log","alert","useEffect","post","className","Col","Nav","variant","Item","Link","onClick","Provider","value","BookWrapper","BookImageWrapper","BookList","props","history","useHistory","map","book","i","push","isbn","rank","src","coverLargeUrl","title","author","publisher","itemId","Book","bestSeller","BestSellerContext","newBooks","BestSeller","RentButton","userId","localStorage","getItem","useState","rentStatus","setRentStatus","myBook","setMyBook","booksNum","setBooksNum","setDuedate","DueDateContext","today","Date","duedate","setDate","getDate","dateString","getFullYear","getMonth","slice","mybooks","state","filter","x","length","Button","size","categoryName","coverSmallUrl","customerReviewRank","description","pubDate","rentId","DetailView","useParams","find","width","translator","Detail","Search","result","setResult","searchWord","params","query","thumbnail","contents","authors","dateTime","LoginForm","Signin","span","Alarm","Login","alarm","setAlarm","userPw","account","setAccount","idFormat","RegExp","passwordFormat","onChangeFunc","e","target","name","onSubmit","preventDefault","test","userName","setItem","userEmail","setIsLogin","type","placeholder","onChange","to","SigninForm","GroupStyle","validated","setValidated","nameAlarm","setNameAlarm","idAlarm","setIdAlarm","pwAlarm","setPwAlarm","pwMatchAlarm","setPwMatchAlarm","userPwCheck","nameFormat","Form","noValidate","form","currentTarget","checkValidity","code","Group","Label","Control","required","Feedback","SearchBar","InputGroup","FormControl","onKeyDown","key","searchWordChange","onKeyUp","CartStyle","MyRentBooks","dueDate","rentBook","rentBooks","item","arr","findIndex","b","Row","Card","Img","Body","Title","Text","rentDate","setReturnBook","MyRent","radioValue","setRadioValue","returnCheck","setReturnCheck","nowRent","setNowRent","returnBook","ButtonGroup","radio","idx","ToggleButton","id","checked","InfoForm","MyInfo","myuserName","myuserId","myuserEmail","emailAlarm","setEmailAlarm","userpwCheck","emailFormat","editUser","updateAjax","put","disabled","readOnly","setMenu","delete","clear","MyMenu","MyList","Mypage","menu","sm","ListGroup","action","Wrapper","UserStyle","App","href","Navbar","bg","Container","Brand","as","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2692897.chunk.js","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport Book from \"./Book.js\";\nimport { Nav, Col } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport {BookContext, SetBookContext} from \"./App.js\";\n\nexport let NewBooksContext = React.createContext();\n\nlet CategoryStyle = styled.div`\n  text-align: left;\n`;\n\nfunction NewBooks() {\n  \n  let books = useContext(BookContext);\n  let setBooks = useContext(SetBookContext);\n\n  useEffect(() => {\n    axios\n      .post(\"/api/newbook\")\n      .then((res) => {\n        setBooks(res.data);\n      })\n      .catch((error) => {\n        alert(\"도서 데이터를 받아오는 데 실패했습니다.\");\n        console.log(error);\n      });\n  }, []);\n\n  function categoryNewbooks(categoryId) {\n    axios\n      .get(\"/api/newbook/\" + categoryId)\n      .then((res) => {\n        setBooks(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\"카테고리별 신간 데이터를 받을 수 없습니다.\");\n      });\n  }\n\n  return (\n    <div className=\"row\">\n      <Col>\n        <CategoryStyle>\n          <Nav variant=\"tabs\">\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"101\");\n                }}\n              >\n                소설\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"102\");\n                }}\n              >\n                시/에세이\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"103\");\n                }}\n              >\n                예술/대중문화\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"110\");\n                }}\n              >\n                아동\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"117\");\n                }}\n              >\n                경제경영\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"118\");\n                }}\n              >\n                자기계발\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </CategoryStyle>\n\n        <NewBooksContext.Provider value={books}>\n          <Book />\n        </NewBooksContext.Provider>\n      </Col>\n    </div>\n  );\n}\n\nexport default NewBooks;\n","import React, {useContext} from 'react';\nimport {BestSellerContext} from './BestSeller.js'\nimport {NewBooksContext} from './NewBooks.js'\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nlet BookWrapper = styled.div`\n  width: 80%;\n  margin-top: 2rem;\n  text-align: left;\n  cursor: pointer; \n\n  p {\n    font-size: 13pt;\n    font-weight: 600;\n    margin: 0.5rem 0 0 0;\n  }\n\n  h3 {\n    color: gold;\n    text-shadow: 2px 2px 1px blue;\n    font-style: italic;\n    font-weight: bolder;\n  }\n`\nlet BookImageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n\n  img {\n    width: 11rem; \n    height: 16rem;\n    object-fit: cover;\n    border: solid 0.1rem darkgreen;\n  }\n`\n\nfunction Book() {\n\n    let bestSeller = useContext(BestSellerContext);\n    let newBooks = useContext(NewBooksContext);\n   \n    return (\n        <div>\n            {\n                bestSeller\n                ? <BookList books={bestSeller}/>\n                : <BookList books={newBooks}/>\n            }\n        </div>\n    )\n}\n\nfunction BookList(props) {\n\n    let history = useHistory();\n\n    return (\n        <div className='row'>\n            {props.books && props.books.map((book, i) => (\n                <div className=\"col-lg-3 col-sm-4\" key={book.itemId} onClick={()=>{ history.push('/detail/' + book.isbn)}}>\n                    <BookWrapper>\n                        <h3>{book.rank}</h3>\n                        <BookImageWrapper><img src={book.coverLargeUrl}/></BookImageWrapper>\n                        <p>{book.title}</p>\n                        {book.author} / {book.publisher}\n                    </BookWrapper>\n                </div>\n            ))} \n        </div>\n    )\n}\n\nexport default Book;","import React, {useEffect, useContext} from 'react';\nimport axios from 'axios';\nimport Book from './Book.js'\nimport {BookContext, SetBookContext} from \"./App.js\";\n\nexport let BestSellerContext = React.createContext();\n\nfunction BestSeller() {\n    \n    let books = useContext(BookContext);\n    let setBooks = useContext(SetBookContext);\n    \n    useEffect(() => {\n        axios.post('/api/bestseller')\n            .then((res) => {\n                // console.log(res.data);\n                // console.log(Array.isArray(res.data));\n                setBooks(res.data);\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div>\n            <BestSellerContext.Provider value={books}>\n                <Book />\n            </BestSellerContext.Provider>\n        </div>\n    )\n}\n\nexport default BestSeller;","import React, { useContext, useEffect, useState } from \"react\";\nimport { DueDateContext } from \"./App.js\"\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction RentButton(props) {\n  \n    let userId = localStorage.getItem('userId');\n  \n    // myBook은 전역state로 관리??\n    let history = useHistory();\n    let [rentStatus, setRentStatus] = useState(\"rent\");\n    let [myBook, setMyBook] = useState();\n    let [booksNum, setBooksNum] = useState(0);\n\n  // 반납예정일\n  let setDuedate = useContext(DueDateContext);\n  let today = new Date();\n  let duedate = new Date(today.setDate(today.getDate()+7))\n  let year = duedate.getFullYear();\n  let month = ('0' + (duedate.getMonth() + 1)).slice(-2);\n  let day = ('0' + duedate.getDate()).slice(-2);\n  let dateString = year + '-' + month  + '-' + day;\n\n    // 이미 빌린 책인지 체크\n    useEffect(() => {\n      axios.post( \"/rent/info\", {userId: userId} )\n          .then((res) => {\n\n            res.data.map((mybooks) => {\n              if (mybooks.state == true) {\n                setBooksNum(++booksNum)\n              }\n            })\n\n            // 반납 시 서버에 줄 대여책정보 (한번더 빌리는 경우 state가 true인 데이터로 주기)\n            setMyBook( res.data\n              .filter((x) => x.title == props.book.title) \n              .filter((x) => x.state == true) );\n\n            // 빌렸던 DB테이블에 도서명이 있고\n            // 그중에서 state가 true인 것만 반납하기 버튼 보이기\n            // 해당하지 않는 값은 null인줄 알았으나 콘솔찍어보니 빈배열이어서 .length로 빈배열판단\n            if ( res.data\n              .filter(x => x.title == props.book.title)\n              .filter(x => x.state==true)\n              .length !== 0 ) {\n              \n                setRentStatus(\"return\");\n           \n              } else {\n              booksNum == 5\n              ? setRentStatus(\"forbidden\")\n              : setRentStatus(\"rent\")\n            }\n          })\n          .catch((error) => {\n              alert(\"빌린도서 리스트를 받아오는 데 실패했습니다.\");\n              console.log(error);\n          });\n    }, [rentStatus]);\n\n    // function으로 따로 빼기\n    let rentFunc = () => {\n  \n      // 리렌더링되면 isLogin도 false로 초기화\n      // 이미 로그인상태인데 if(!isLogin)에 걸려버리는 이슈\n      // 로컬스토리지 이용 필요하므로 여기서는 userId를 통해 확인\n      if(!userId) {\n        alert('로그인 후 이용할 수 있습니다.');\n        return history.push(\"/login\");\n      }\n  \n      axios\n        .post(\"/rent/add\", {\n          author: props.book.author,\n          categoryName: props.book.categoryName,\n          coverLargeUrl: props.book.coverLargeUrl,\n          coverSmallUrl: props.book.coverSmallUrl,\n          customerReviewRank: props.book.customerReviewRank,\n          description: props.book.description,\n          isbn: props.book.isbn,\n          pubDate: props.book.pubDate,\n          publisher: props.book.publisher,\n          rank: props.book.rank,\n          title: props.book.title,\n          userId: userId\n        })\n        .then((res) => {\n          setRentStatus(\"return\")\n          alert(\"대여 성공!\");\n          setDuedate(dateString);\n        })\n        .catch((error) => {\n          alert(\"대여 통신에 실패했습니다.\");\n          console.log(error);\n        });\n    };\n\n    // function으로 따로 빼기\n    let returnFunc = () => {\n\n      axios.post(\"/rent/return\", {\n          rentId : myBook[0].rentId\n        })\n        .then((res) => {\n          setRentStatus(\"rent\");\n          alert(\"반납하셨습니다.\");\n        })\n        .catch((error) => {\n          alert(\"반납 서버와의 통신에 실패했습니다.\")\n          console.log(error);\n        });\n    }\n  \n    if (rentStatus == \"rent\") {\n      return (\n        <Button variant=\"success\" size=\"lg\" onClick={rentFunc}>\n          대여하기\n        </Button>\n      );\n    } else if (rentStatus == \"return\") {\n      return (\n        <Button variant=\"dark\" size=\"lg\" onClick={returnFunc}>\n          반납하기\n        </Button>\n      );\n    } else if (rentStatus == \"forbidden\") {\n      return (\n        <Button variant=\"danger\" size=\"lg\">\n          대여불가\n        </Button>\n      );\n    }\n}\n\nexport default RentButton;","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./App.css\";\nimport {BookContext} from \"./App.js\";\nimport RentButton from \"./RentButton.js\"\n\nfunction Detail() {\n  let book = useContext(BookContext);\n\n  return (\n    <div>\n      {\n        book \n        ? <DetailView books={book} />\n        : alert(\"새로고침으로 인해 state가 유지되지 않아 도서데이터 수신에 실패했습니다.\")\n      }\n    </div>\n  );\n}\n\nfunction DetailView(props) {\n\n  let { isbn } = useParams();\n  let book = props.books && props.books.find((x) => x.isbn == isbn);\n\n  return (\n    <div>\n      <img src={book.coverLargeUrl} width=\"300rem\" />\n      {book.title}\n      <br />\n      {book.author}\n      <br />\n      {book.translator}\n      <br />\n      {book.pubDate}\n      <br />\n      {book.publisher}\n      <br />\n      {book.categoryId}\n      <br />\n      {book.categoryName}\n      <br />\n      {book.isbn}\n      <br />\n      {book.customerReviewRank}\n      <br />\n      {book.description}\n      <br />\n      <RentButton book={book} />\n    </div>\n  );\n}\n\nexport default Detail;\n","import React, {useEffect, useState, useContext} from 'react';\nimport axios from 'axios';\nimport RentButton from \"./RentButton.js\"\n\nfunction Search(props) {\n\n    let [result, setResult] = useState();\n    let searchWord = props.searchWord;\n    let userId = localStorage.getItem('userId');\n\n    useEffect(() => {\n        axios.get('/api/search', {params : {query : searchWord}})\n        .then(res => {\n            setResult(res.data);\n            // console.log(res.data);\n        })\n        .catch(error => {\n            alert('검색결과 데이터를 받아오는 데 실패했습니다.');\n            console.log(error);\n        });\n    },[searchWord]);\n\n    return (\n        <div>\n            {/* 검색결과가 없는 경우도 처리해야함 */}\n            {result && result.map((book, i) => (\n                <div key={book.itemId}>\n                    <img src={book.thumbnail}/>\n                    {book.title}<br/>\n                    줄거리 : {book.contents}<br/>\n                    {book.authors}/{book.publisher}/{book.dateTime}/{book.translator}/{book.isbn}\n                    \n                    {/* books state를 만들어 버튼에 넣으면 이미 books값을 가져오기 전에 RentButton으로 넘어가버려서 undefined가 출력되는 것으로 추정\n                    {() => setBooks({\n                        author: book.authors,\n                        categoryName: book.categoryName,\n                        coverLargeUrl: book.coverLargeUrl,\n                        coverSmallUrl: book.thumbnail,\n                        customerReviewRank: book.customerReviewRank,\n                        description: book.contents,\n                        isbn: book.isbn,\n                        pubDate: book.dateTime,\n                        publisher: book.publisher,\n                        rank: book.rank,\n                        // title: book.title,\n                        title: \"체크\",\n                        userId: userId\n                    })} \n                    \n                    <RentButton book={books} />*/}\n                    \n                    <RentButton book={{\n                        author: book.authors,\n                        categoryName: book.categoryName,\n                        coverLargeUrl: book.coverLargeUrl,\n                        coverSmallUrl: book.thumbnail,\n                        customerReviewRank: book.customerReviewRank,\n                        description: book.contents,\n                        isbn: book.isbn,\n                        pubDate: book.dateTime,\n                        publisher: book.publisher,\n                        rank: book.rank,\n                        title: book.title,\n                        userId: userId\n                    }} />\n                    \n                </div>\n            ))} \n        </div>\n    )\n}\n\nexport default Search;","import axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nlet LoginForm = styled.div`\n  width: 22rem;\n  margin: auto;\n  padding-bottom: 3rem;\n\n  input,\n  button {\n    width: 100%;\n    height: 3rem;\n    margin-bottom: 1rem;\n  }\n  input {\n    border: solid 1px lightgrey;\n    border-radius: 4px;\n    padding: 0.7rem;\n  }\n  h3 {\n    font-weight: bold;\n    text-align: left;\n  }\n  p {\n    text-align: left;\n  }\n`;\nlet Signin = styled.span`\n  font-size: 13pt;\n  text-decoration: underline;\n`;\nlet Alarm = styled.div`\n  width: 100%;\n  text-align: left;\n  color: red;\n  font-weight: bold;\n  font-size: 13pt;\n`;\n\nfunction Login(props) {\n    let history = useHistory();\n\n    let [alarm, setAlarm] = useState(\"\");\n    let [account, setAccount] = useState({\n        userId: \"\",\n        userPw: \"\",\n    });\n\n    // 아이디 : 영어/숫자 6-12자\n    let idFormat = RegExp(/^[A-Za-z0-9]{6,12}$/);\n    // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n    let passwordFormat = RegExp(\n        /^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/\n    );\n\n    let onChangeFunc = (e) => {\n        setAccount({\n        ...account,\n        [e.target.name]: e.target.value,\n        });\n    };\n\n    let submitFunc = (e) => {\n        e.preventDefault();\n\n        if (!account.userId) { setAlarm('아이디가 입력되지 않았습니다.') }\n        else if (!account.userPw) { setAlarm('비밀번호가 입력되지 않았습니다.') }\n        else if (!idFormat.test(account.userId) || !passwordFormat.test(account.userPw)) {\n            setAlarm('아이디 또는 비밀번호를 잘못 입력하셨습니다. 입력하신 내용을 다시 확인해주세요.')\n        } else {\n            axios.post('/login', {\n                    userId:account.userId,\n                    userPw:account.userPw\n                })\n            .then(res => {\n                if(res) {\n                    console.log(res);\n                    \n                    if (res.data.userName) {\n                        alert(res.data.userName + '님, 로그인되었습니다🐢');\n                        localStorage.setItem('userName', res.data.userName);\n                        // localStorage.setItem('userId', JSON.stringify(res.data.userId));\n                        localStorage.setItem('userId', res.data.userId);\n                        localStorage.setItem('userEmail', res.data.userEmail);\n                        props.setIsLogin(true)\n                        // 리렌더링을 위해 상위컴포넌트로부터 받은 state변경\n                        history.push(\"/\"); \n                    } else {\n                        setAlarm('아이디 또는 비밀번호를 잘못 입력하셨습니다.')\n                    }\n                }\n            })\n            .catch(error => {\n                alert('통신실패! 에러명 : ' + error);\n            });\n        }\n    }\n\n    return (\n        <LoginForm>\n            <form onSubmit={submitFunc}>\n                <h3>로그인</h3>\n                <p>Go Book Go Book의 다양한 서비스를 누리세요!</p>\n                <Alarm>{alarm}</Alarm>\n                <input\n                    type=\"text\"\n                    name=\"userId\"\n                    placeholder=\"아이디를 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></input>\n                <input\n                    type=\"password\"\n                    name=\"userPw\"\n                    placeholder=\"비밀번호를 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></input>\n                \n                <Button variant=\"primary\" type=\"submit\" size=\"lg\">로그인</Button>\n                아이디가 없으신가요?&nbsp;&nbsp;&nbsp;\n                <Signin><Link to=\"/signin\">회원가입</Link></Signin>\n            </form>\n        </LoginForm>\n    );\n}\n\nexport default Login;\n","import React, {useState} from \"react\";\nimport { Button,Form } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport axios from \"axios\";\n\nlet SigninForm = styled.div`\n    width: 22rem;\n    margin: auto;\n    padding-bottom: 3rem;\n    text-align: left;\n    input, button {\n        width: 100%;\n        height: 3rem;\n        // margin-bottom: 1rem;\n    }\n    button {\n        margin-top: 1rem;\n    }\n    h3 {\n        font-weight: bold;\n    }\n`\nlet GroupStyle = styled.div`\n    margin: 1rem 0;\n`\nlet Alarm = styled.div`\n    width: 100%;\n    text-align: left;\n    color: red;\n    font-weight: bold;   \n`\n\nfunction Signin() {\n\n    let history = useHistory();\n\n    let [validated, setValidated] = useState(false);\n    let [nameAlarm, setNameAlarm] = useState('');\n    let [idAlarm, setIdAlarm] = useState('');\n    // let [emailAlarm, setEmailAlarm] = useState('');\n    let [pwAlarm, setPwAlarm] = useState('');\n    let [pwMatchAlarm, setPwMatchAlarm] = useState('');\n    let [account, setAccount] = useState({\n        userName: '',\n        userId: '',\n        userEmail: '',\n        userPw: '',\n        userPwCheck: ''\n    })\n\n    // 아이디 : 영어/숫자 6-12자\n    let idFormat = RegExp(/^[A-Za-z0-9]{6,12}$/);\n    // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n    let passwordFormat = RegExp(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/);\n    // 이름 : 한글 2자이상\n    let nameFormat = RegExp(/^[가-힣]{2,}$/);\n\n    // 이메일 유효성검사는 이미 input type=\"email\"에서 검증되므로 불필요\n    // 이메일 : (이메일아이디 영어/숫자 하나 이상) + @(필수) + (영어 하나이상) + .(특수문자이므로 \\붙임) + (영어 하나이상)\n    // let emailFormat = RegExp(/^[A-Za-z0-9]+@[A-Za-z]+\\.[A-Za-z]+$/);\n\n    let onChangeFunc = (e) => {\n        setAccount({\n            ...account, [e.target.name]: e.target.value\n        })\n    }\n    let submitFunc = (e) => {\n        e.preventDefault();\n        let form = e.currentTarget;\n        setNameAlarm('');\n        setIdAlarm('');\n        // setEmailAlarm('');\n        setPwAlarm('');\n        setPwMatchAlarm('');\n\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            setValidated(true);\n        } else if( !nameFormat.test(account.userName) || !idFormat.test(account.userId) || !passwordFormat.test(account.userPw) ) {\n            // || !emailFormat.test(account.useremail) || !passwordFormat.test(account.userpw) ) {\n\n            if( !nameFormat.test(account.userName) )\n                setNameAlarm('이름의 형식이 올바르지 않습니다.');\n            if( !idFormat.test(account.userId) )\n                setIdAlarm('아이디의 형식이 올바르지 않습니다.');\n            // if( !emailFormat.test(account.useremail) )\n            //     setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n            if( !passwordFormat.test(account.userPw) )\n                setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n\n        } else if(account.userPw != account.userPwCheck) {\n            setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n        } else {\n            console.log(account);\n            axios.post('/signin', {\n                    userId: account.userId,\n                    userPw: account.userPw,\n                    userName: account.userName,\n                    userEmail: account.userEmail\n                })\n            .then(res => {\n                if (res.data) {\n                    alert('회원가입이 완료되었습니다😇');\n                    history.push(\"/login\");\n                } else {\n                    console.log(res.data.code)\n                    alert('이미 가입된 정보입니다😰');\n                    history.push(\"/login\");\n                }\n            })\n            .catch(error => {\n                alert('통신실패! 에러명 : ' + error);\n                console.log(error);\n            });\n        }\n\n    }\n\n    return (\n        <SigninForm>\n            <div className=\"loginform\">\n                <Form noValidate validated={validated} onSubmit={submitFunc}>\n                    <h3>회원가입</h3>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>이름</Form.Label>\n                            <Alarm>{nameAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                name=\"userName\"\n                                placeholder=\"ex) 홍길동\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">이름을 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>아이디</Form.Label>\n                            <Alarm>{idAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                name=\"userId\"\n                                placeholder=\"영어/숫자 포함 6-12자를 입력해주세요.\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">아이디를 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>이메일</Form.Label>\n                            {/* <Alarm>{emailAlarm}</Alarm> */}\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                name=\"userEmail\"\n                                placeholder=\"ex) GoBook@naver.com\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">이메일을 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>비밀번호</Form.Label>\n                            <Alarm>{pwAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                name=\"userPw\"\n                                placeholder=\"영어/숫자/특수문자 포함 9-20자를 입력해주세요.\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <GroupStyle>\n                        <Form.Group>\n                            <Form.Label>비밀번호 확인</Form.Label>\n                            <Alarm>{pwMatchAlarm}</Alarm>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                name=\"userPwCheck\"\n                                placeholder=\"확인을 위해 비밀번호를 한번 더 입력해주세요.\"\n                                onChange={onChangeFunc}\n                            ></Form.Control>\n                            <Form.Control.Feedback type=\"invalid\">비밀번호 확인을 입력해주세요.</Form.Control.Feedback>\n                        </Form.Group>\n                    </GroupStyle>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        회원가입하기\n                    </Button>\n                </Form>\n\n            </div>\n        </SigninForm>\n    );\n}\n\nexport default Signin;","import React from 'react';\nimport {InputGroup, FormControl, Button} from \"react-bootstrap\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction SearchBar(props) {\n\n    let history = useHistory();\n\n    return (\n        <div>\n            <InputGroup className=\"my-5 w-50 mx-auto\">\n                <FormControl\n                    size=\"lg\"\n                    type=\"search\"\n                    placeholder=\"검색을 원하는 책, 저자를 입력해주세요.\"\n                    onKeyDown={(e) => { if(e.key =='Enter') { props.searchWordChange(e.target.value) }}}\n                    onKeyUp={(e) => { if(e.key =='Enter') { history.push('/api/search?query=' + props.searchWord) } }}\n                />\n                <Button \n                    className=\"rounded-1\" \n                    variant=\"outline-light\" \n                    // searchWord 바로 가져올 수 있도록 수정... \n                    onClick={()=>{ history.push('/api/search?query=' + props.searchWord) }}>검색</Button>\n            </InputGroup>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React, { useContext } from \"react\";\nimport { DueDateContext } from \"./App.js\"\nimport { Card, Button, Row } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nlet CartStyle = styled.div`\n  width: 250px;\n  margin-top: 1rem;\n`;\n\nfunction MyRentBooks(props) {\n\n  let dueDate = useContext(DueDateContext);\n\n  let rentBooks = props.rentBooks;\n\n  // 이미 2번이상 빌려본 책은 지난 대여내역에서 한번만 나오도록 중복제거\n  let rentBook = rentBooks.filter(\n    (item, i, arr) => i === arr.findIndex(b => (item.title === b.title))\n  );\n  \n  let returnFunc = (rentId) => {\n\n    axios.post(\"/rent/return\", {\n      rentId: rentId,\n    })\n    .then((res) => {\n      alert(\"반납하셨습니다.\");\n      props.setReturnBook(true);\n    })\n    .catch((error) => {\n      alert(\"반납 서버와의 통신에 실패했습니다.\")\n      console.log(error);\n    });\n  }\n\n  return (\n    <Row>\n      {\n        // rentBook && rentBook.map( book => <CardComp book={book} /> )\n        rentBook && rentBook.map( book => \n          <CartStyle>\n            <Card key={book.rentId}>\n              {\n                book.coverLargeUrl\n                ? <Card.Img variant=\"top\" src={book.coverLargeUrl} />\n                : <Card.Img variant=\"top\" src={book.coverSmallUrl} />\n              }\n              <Card.Body>\n                <Card.Title>{book.title}</Card.Title>\n                <Card.Text>대여일 : {book.rentDate}</Card.Text>\n                <Card.Text>반납예정일 : {dueDate}</Card.Text>\n                {\n                  book.state == true \n                  ? <Button variant=\"outline-danger\" onClick={() => returnFunc(book.rentId)}>\n                      반납하기\n                    </Button>\n                  : null\n                }\n              </Card.Body>\n            </Card>\n          </CartStyle>\n        )\n      }\n    </Row>\n  )\n  \n}\n\n// function returnFunc(rentId, props) {\n\n//   let history = useHistory();\n\n//   axios.post(\"/rent/return\", {\n//       rentId: rentId,\n//     })\n//     .then((res) => {\n//       alert(\"반납하셨습니다.\");\n//       props?.setReturnCheck(...1);\n//       history.push(\"/mypage\");\n//     })\n//     .catch((error) => {\n//       alert(\"반납 서버와의 통신에 실패했습니다.\")\n//       console.log(error);\n//     });\n// }\n\n// function CardComp({ book }) {\n\n//   return (\n//     <CartStyle>\n//       <Card key={book.rentId}>\n//         {\n//           book.coverLargeUrl\n//           ? <BookImg>\n//               <Card.Img variant=\"top\" src={book.coverLargeUrl} />\n//             </BookImg>\n//           : \n//             <BookImg>\n//               <Card.Img variant=\"top\" src={book.coverSmallUrl} />\n//             </BookImg>\n//         }\n//         <Card.Body>\n//           <Card.Title>{book.title}</Card.Title>\n//           <Card.Text>대여일 : {book.rentDate}</Card.Text>\n//           <Card.Text>반납일 : (D-계산값)</Card.Text>\n//           {\n//             book.state == true \n//             ? <Button variant=\"outline-danger\" onClick={() => returnFunc(book.rentId)}>\n//                 반납하기\n//               </Button>\n//             : null\n//           }\n//         </Card.Body>\n//       </Card>\n//     </CartStyle>\n//   );\n// }\n\nexport default MyRentBooks;\n","import React, { useEffect, useState } from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport MyRentBooks from \"./MyRentBooks.js\";\nimport axios from \"axios\";\n\nfunction MyRent() {\n\n  const [radioValue, setRadioValue] = useState(\"1\");\n  let userName = localStorage.getItem(\"userName\");\n  // let userId = JSON.parse(localStorage.getItem('userId'));\n  let userId = localStorage.getItem(\"userId\");\n  let [booksNum, setBooksNum] = useState(0);\n  let [returnCheck, setReturnCheck] = useState(false);\n\n  let [nowRent, setNowRent] = useState([]);\n  let [returnBook, setReturnBook] = useState([]);\n  // 일반 배열은 useEffect에서 push한 값이 사라지고 초기화된 상태로 return으로 들어감\n  // let nowRent = [];\n  // let returnBook = [];\n\n  const radios = [\n    { name: \"현재 대여중인 도서\", value: \"1\" },\n    { name: \"지난 대여 내역\", value: \"2\" },\n  ];\n\n  useEffect(() => {\n    axios.post(\"/rent/info\", { userId: userId })\n      .then((res) => {\n        console.log(returnCheck)\n        // booksNum은 RentButton.js에서 갖고오기\n        setNowRent(res.data.filter(x => x.state == true))\n        setReturnBook(res.data.filter(x => x.state == false))\n\n        res.data.map((myBook) => {\n          if (myBook.state == true) {\n            setBooksNum(++booksNum);\n          }\n        });\n      })\n      .catch((error) => {\n        alert(\"도서 데이터를 받아오는 데 실패했습니다.\");\n        console.log(error);\n      });\n    // console.log(returnCheck);\n  }, [returnCheck]);\n\n  \n  return (\n    <div>\n      <h2>{userName}님, 반가워요!</h2>\n      {/* 에러 : <p>현재 대여중인 도서는 {rentBooks.length}/5 권 입니다.</p> */}\n      <p>현재 대여중인 도서는 {booksNum}/5 권 입니다.</p>\n      <ButtonGroup>\n        {\n          radios.map((radio, idx) => (\n            <ToggleButton\n              key={idx}\n              id={`radio-${idx}`}\n              type=\"radio\"\n              variant={idx % 2 ? \"outline-primary\" : \"outline-primary\"}\n              name=\"radio\"\n              value={radio.value}\n              checked={radioValue == radio.value}\n              onChange={(e) => setRadioValue(e.currentTarget.value)}\n            >\n              {radio.name}\n            </ToggleButton>\n          ))\n        }\n      </ButtonGroup>\n\n      {\n        radioValue == 1 \n        ? <MyRentBooks rentBooks={nowRent} setReturnCheck={setReturnCheck}/>\n        : <MyRentBooks rentBooks={returnBook}/>\n      }\n    </div>\n  );\n}\n\nexport default MyRent;\n","import React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport { Button,Form } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nlet InfoForm = styled.div`\n    width: 80%;\n    padding-bottom: 3rem;\n\n    input, button {\n      height: 3rem;\n      // margin-bottom: 1rem;\n    }\n    button {\n      width: 30%;\n      margin-top: 1rem;\n      margin-right: 1rem;\n    }\n`\nlet GroupStyle = styled.div`\n    margin: 1rem 0;\n`\nlet Alarm = styled.div`\n    width: 100%;\n    text-align: left;\n    color: red;\n    font-weight: bold;   \n`\n\nfunction MyInfo(props) {\n\n  let history = useHistory();\n\n  let myuserName = localStorage.getItem('userName');\n  let myuserId = localStorage.getItem('userId');\n  let myuserEmail = localStorage.getItem('userEmail');\n\n  let [alarm, setAlarm] = useState('')\n  let [emailAlarm, setEmailAlarm] = useState('');\n  let [pwAlarm, setPwAlarm] = useState('');\n  let [pwMatchAlarm, setPwMatchAlarm] = useState('');\n  let [account, setAccount] = useState({\n      userId:'',\n      userEmail: '',\n      userPw: '',\n      userpwCheck: ''\n  })\n\n  // 이메일 : (이메일아이디 영어/숫자 하나 이상) + @(필수) + (영어 하나이상) + .(특수문자이므로 \\붙임) + (영어 하나이상)\n  let emailFormat = RegExp(/^[A-Za-z0-9]+@[A-Za-z]+\\.[A-Za-z]+$/);\n  // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n  let passwordFormat = RegExp(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/);\n\n  let onChangeFunc = (e) => {\n    setAccount({\n        ...account, [e.target.name]: e.target.value\n    })\n  }\n\n  let editUser = (e) => {\n    // e.preventDefault();\n    let form = e.currentTarget;\n\n    setAlarm('');\n    setEmailAlarm('');\n    setPwAlarm('');\n    setPwMatchAlarm('');\n\n    // 둘 다 작성하지 않는 경우\n    if ( !account.userEmail && !account.userPw ) {\n      setAlarm('수정하실 정보를 작성해주세요.')\n    }\n    // 이메일만 작성하는 경우\n    if ( account.userEmail && !account.userPw ) {\n      // 형식확인\n      if(!emailFormat.test(account.userEmail) ) {\n        setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n      } else {\n        updateAjax();\n      }\n    }\n    // 비밀번호만 작성하는 경우\n    if ( !account.userEmail && account.userPw ) {\n      // 형식확인\n      if( !passwordFormat.test(account.userPw) ) {\n        setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n      // 비밀번호 확인란과 일치여부\n      } else if ( account.userPw != account.userpwCheck) {\n        setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n      } else {\n        updateAjax();\n      }\n    }\n    // 둘 다 작성한 경우\n    if ( account.userEmail && account.userPw ) {\n      // 이메일 형식확인\n      if( !emailFormat.test(account.userEmail) ) {\n        setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n      } \n      // 비밀번호 형식확인\n      // 이메일, 비밀번호 둘 다 형식에 맞지 않는 경우를 위해 if문을 따로 작성\n      if( !passwordFormat.test(account.userPw) ) {\n        setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n      // 비밀번호 확인란과 일치여부\n      } else if ( account.userPw != account.userpwCheck) {\n        setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n      // 비밀번호 형식/확인란 맞은 상태에서 이메일형식까지 맞으면 결과 넘어감\n      } else if ( emailFormat.test(account.userEmail) ) {\n        updateAjax();\n      }\n    }\n  }\n\n  let updateAjax = () => {\n    axios\n      .put(\"/mypage\", {\n        userId: myuserId,\n        userPw: account.userPw,\n        userEmail: account.userEmail,\n      })\n      .then((res) => {\n        alert(\"개인정보 수정이 완료되었습니다.\")\n        localStorage.setItem('userEmail', account.userEmail);\n        history.push(\"/\");\n        console.log(res);\n      })\n      .catch((error) => {\n        alert(\"개인정보 수정에 실패했습니다.\");\n        console.log(error);\n      });\n  }\n\n  let deleteUser = () => {\n    axios\n      .delete(\"/delete\", {\n        userId: myuserId,\n      })\n      .then((res) => {\n        console.log(res);\n        localStorage.clear();\n        alert(\"탈퇴에 성공하셨습니다🙂\");\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        alert(\"회원 탈퇴에 실패하셨습니다.\");\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <h2>개인정보 수정</h2>\n      <p>고객님의 정보를 정확히 입력해주세요.</p>\n      <Alarm>{alarm}</Alarm>\n      <InfoForm>\n        <Form noValidate onSubmit={editUser}>\n        <GroupStyle>\n            <Form.Group>\n                <Form.Label>이름</Form.Label>\n                <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder={myuserName}\n                    onChange={onChangeFunc}\n                    disabled\n                    readOnly\n                ></Form.Control>\n            </Form.Group>\n          </GroupStyle>\n\n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>아이디</Form.Label>\n                <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder={myuserId}\n                    onChange={onChangeFunc}\n                    disabled\n                    readOnly\n                ></Form.Control>\n            </Form.Group>\n          </GroupStyle>\n\n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>이메일</Form.Label>\n                <Alarm>{emailAlarm}</Alarm>\n                <Form.Control\n                    required\n                    type=\"email\"\n                    name=\"userEmail\"\n                    placeholder={myuserEmail}\n                    onChange={onChangeFunc}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">이메일을 입력해주세요.</Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n          \n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>비밀번호</Form.Label>\n                <Alarm>{pwAlarm}</Alarm>\n                <Form.Control\n                    required\n                    type=\"password\"\n                    name=\"userPw\"\n                    placeholder=\"영어/숫자/특수문자 포함 9-20자를 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n\n          <GroupStyle>\n            <Form.Group>\n                <Form.Label>비밀번호 확인</Form.Label>\n                <Alarm>{pwMatchAlarm}</Alarm>\n                <Form.Control\n                    required\n                    type=\"password\"\n                    name=\"userpwCheck\"\n                    placeholder=\"확인을 위해 비밀번호를 한번 더 입력해주세요.\"\n                    onChange={onChangeFunc}\n                ></Form.Control>\n                <Form.Control.Feedback type=\"invalid\">비밀번호 확인을 입력해주세요.</Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n\n          <Button variant=\"primary\" type=\"button\" onClick={() => editUser(myuserId)}>\n            수정\n          </Button>\n          <Button variant=\"outline-warning\" type=\"button\" onClick={() => props.setMenu(0)}>\n            취소\n          </Button>\n          <Button variant=\"outline-danger\" type=\"button\" onClick={() => deleteUser(myuserId)}>\n            회원 탈퇴\n          </Button>\n         \n        </Form>\n      </InfoForm>\n    </div>\n  );\n}\n\nexport default MyInfo;\n","import React, {useState} from \"react\";\nimport MyRent from \"./MyRent\";\nimport MyInfo from \"./MyInfo.js\"\nimport { Col, Row, ListGroup } from \"react-bootstrap\";\nimport styled from 'styled-components';\n\nlet MyMenu = styled.div`\n  h4 {\n    margin: 0;\n    padding: 0.5rem; \n  }\n`\nlet MyList = styled.div`\n  text-align: left;\n  padding-left: 3rem;\n  border-left: dashed 2px Silver;\n\n  h2 {\n    margin-bottom: 1rem;\n  }\n`\n\nfunction Mypage() {\n  \n  let [menu, setMenu] = useState(0);\n\n  return (\n    <Row>\n      <Col sm={3}>\n      <MyMenu>\n          <h4>마이페이지</h4>\n          <ListGroup.Item action variant=\"light\" onClick={() => setMenu(0)}>\n            나의 대여 관리\n          </ListGroup.Item>\n          <ListGroup.Item action variant=\"light\" onClick={() => setMenu(1)}>\n            개인정보 수정\n          </ListGroup.Item>\n        </MyMenu>\n      </Col>\n\n      <Col sm={9}>\n        <MyList>\n          \n          {\n            menu === 0 \n            ? <MyRent/>\n            : <MyInfo setMenu={setMenu}/>\n          }\n        </MyList>\n      </Col>\n     \n    </Row>\n  );\n}\n\nexport default Mypage;\n","import React, { useState } from \"react\";\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport BestSeller from \"./BestSeller.js\";\nimport NewBooks from \"./NewBooks.js\";\nimport Detail from \"./Detail.js\";\nimport Search from \"./Search.js\";\nimport Login from \"./Login.js\";\nimport Signin from \"./Signin.js\";\nimport SearchBar from \"./SearchBar\";\nimport Mypage from \"./Mypage.js\";\n\n// const GlobalStyle  =  createGlobalStyle`\n//   font-family: 'Pretendard-Medium';\n// `\n\nlet Wrapper = styled.div`\n  width: 70%;\n  margin: auto;\n  padding-top: 3rem;\n  min-height: 100%;\n`;\nlet UserStyle = styled.div`\n  text-align: right;\n  padding: 2rem;\n  font-size: 13pt;\n  background-color: rgb(13, 202, 240);\n  color: floralwhite;\n  span {\n    margin: 0.5rem;\n  }\n`;\n\nexport let BookContext = React.createContext();\nexport let SetBookContext = React.createContext();\nexport let DueDateContext = React.createContext();\n\nfunction App() {\n\n  let userId = localStorage.getItem('userId');\n  let [isLogin, setIsLogin] = useState();\n  let [books, setBooks] = useState();\n  let [searchWord, searchWordChange] = useState(\"\");\n  let [dueDate, setDuedate] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      {/* <GlobalStyle/> */}\n      <UserStyle>\n        <div className=\"nav\">\n          <div className=\"titleImg\">\n            <a href=\"/\">\n              {/* <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReIJDl-BNU7poDMxewQcEWm7ZLBeoxSfvVlQ&usqp=CAU\" /> */}\n              <div>Go Book Go Book</div>\n            </a>\n          </div>\n          <div>\n            {\n              userId\n              ? (<div>\n                  <Link to=\"/\">\n                    <span onClick={() => {\n                        localStorage.clear();\n                        setIsLogin(false); // 얘를 주석처리하면 로그아웃 눌러도 로그인으로 돌아오지 않음\n                    }}>\n                      로그아웃\n                    </span>\n                  </Link>\n                  <span>|</span>\n                  <Link to=\"/mypage\">\n                    <span>마이페이지&nbsp;</span>\n                  </Link>\n                </div>) \n              : (<div>\n                  <Link to=\"/login\">\n                    <span>로그인</span>\n                  </Link>\n                  <span>|</span>\n                  <Link to=\"/signin\">\n                    <span>회원가입</span>\n                  </Link>\n                </div>)\n            }\n          </div>\n        </div>\n\n        <SearchBar\n          searchWord={searchWord}\n          searchWordChange={searchWordChange}\n        />\n      </UserStyle>\n\n      <Navbar bg=\"info\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand className=\"fs-3\">도서</Navbar.Brand>\n          <Nav className=\"me-auto fs-5\">\n            <Nav.Link as={Link} to=\"/api/bestseller\">\n              베스트셀러\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/api/newbook\">\n              신간도서\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n      <Switch>\n        <Wrapper>\n          <Route exact path=\"/api/bestseller\">\n            <BookContext.Provider value={books}>\n            <SetBookContext.Provider value={setBooks}>\n             <BestSeller />\n            </SetBookContext.Provider>\n            </BookContext.Provider>\n          </Route>\n          <Route exact path=\"/api/newbook\">\n          <BookContext.Provider value={books}>\n            <SetBookContext.Provider value={setBooks}>\n              <NewBooks />\n            </SetBookContext.Provider>\n            </BookContext.Provider>\n          </Route>\n          <Route path=\"/detail/:isbn\">\n            <BookContext.Provider value={books}>\n              <DueDateContext.Provider value={setDuedate}>\n                <Detail />\n              </DueDateContext.Provider>\n            </BookContext.Provider>\n          </Route>\n\n          <Route path=\"/api/search\">\n            <Search searchWord={searchWord} />\n          </Route>\n\n          <Route path=\"/login\">\n            <Login setIsLogin={setIsLogin}/>\n          </Route>\n          <Route path=\"/signin\">\n            <Signin />\n          </Route>\n          <Route path=\"/mypage\">\n            <DueDateContext.Provider value={dueDate}>\n              <Mypage />\n            </DueDateContext.Provider>\n          </Route>\n        </Wrapper>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}