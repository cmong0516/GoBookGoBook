{"version":3,"sources":["BestSeller.js","NewBooks.js","App.js","reportWebVitals.js","index.js"],"names":["BestSeller","useState","books","setBooks","useEffect","axios","get","then","res","data","catch","error","alert","console","log","className","map","book","i","src","coverLargeUrl","width","title","author","publisher","itemId","NewBooks","Array","isArray","Wrapper","styled","div","UserStyle","App","InputGroup","FormControl","size","type","placeholder","Button","variant","Navbar","bg","Container","Brand","Nav","Link","as","to","action","method","for","name","id","expand","Toggle","Collapse","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11e406fc.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nfunction BestSeller() {\n\n    let [books, setBooks] = useState()\n    \n    useEffect(() => {\n        axios.get('/api/bestseller')\n            .then((res) => {\n                // console.log(res.data);\n                // console.log(Array.isArray(res.data));\n\n                setBooks(res.data);\n\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div className='row'>\n            {books && books.map((book, i) => (\n                <div className=\"col-lg-2 col-md-3 col-sm-4\" key={book.itemId}>\n                    <img src={book.coverLargeUrl} width=\"90%\"/>\n                    <p>{book.title}</p>\n                    {book.author} | {book.publisher}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default BestSeller;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nfunction NewBooks() {\n\n    let [books, setBooks] = useState()\n    \n    useEffect(() => {\n        axios.get('/api/newbook')\n            .then((res) => {\n                console.log(res.data);\n                console.log(Array.isArray(res.data));\n\n                setBooks(res.data);\n\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div className='row'>\n            {books && books.map((book, i) => (\n                <div className=\"col-lg-2 col-md-3 col-sm-4\" key={book.itemId}>\n                    <img src={book.coverLargeUrl} width=\"90%\"/>\n                    <p>{book.title}</p>\n                    {book.author} | {book.publisher}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default NewBooks;","import React from \"react\";\nimport {\n  InputGroup,\n  FormControl,\n  Button,\n  Nav,\n  Navbar,\n  Container,\n} from \"react-bootstrap\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport BestSeller from \"./BestSeller.js\";\nimport NewBooks from \"./NewBooks.js\";\nimport \"./App.css\";\nimport styled from 'styled-components';\n\n// const GlobalStyle  =  createGlobalStyle`\n//   font-family: 'Pretendard-Medium';\n// `\n\nlet Wrapper = styled.div`\n  width : 80%;\n  margin : auto;\n`;\nlet UserStyle = styled.div`\n  text-align: right;\n  padding : 20pt;\n  font-size : 13pt;\n  background-color: hsl(146, 45%, 36%);\n  color: floralwhite;\n`;\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n      {/* <GlobalStyle/> */}\n\n        <UserStyle>\n          <span>로그인</span>\n          <span> | </span>\n          <span>회원가입</span>\n          <span> | </span>\n          <span>마이페이지</span>\n          <InputGroup className=\"my-5 w-50 mx-auto\">\n            <FormControl\n                size=\"lg\"\n                type=\"search\"\n                placeholder=\"검색을 원하는 책, 저자를 입력해주세요.\"\n                aria-label=\"Search\"\n            />\n            <Button variant=\"outline-light\" >검색</Button>\n          </InputGroup>\n        </UserStyle>\n        <Navbar bg=\"success\" variant=\"dark\">\n          <Container>\n            <Navbar.Brand className=\"fs-3\">도서</Navbar.Brand>\n            <Nav className=\"me-auto fs-5\">\n              <Nav.Link as={Link} to=\"/bestseller\">베스트셀러</Nav.Link>\n              <Nav.Link as={Link} to=\"/newbook\">신간도서</Nav.Link>\n            </Nav>\n          </Container>\n        </Navbar>\n      <UserStyle>\n        <span>로그인</span>\n        <span> | </span>\n        <span>회원가입</span>\n        <span> | </span>\n        <span>마이페이지</span>\n      </UserStyle>\n      {/*<InputGroup className=\"p-5\">*/}\n      {/*  <FormControl*/}\n      {/*    size=\"lg\"*/}\n      {/*    type=\"search\"*/}\n      {/*    placeholder=\"제목, 저자, 출판사로 검색\"*/}\n      {/*    aria-label=\"Search\"*/}\n      {/*  />*/}\n      {/*  <Button variant=\"outline-secondary\" >검색</Button>*/}\n      {/*</InputGroup>*/}\n      <div>\n      <form action=\"/kakao/search\" method=\"GET\">\n        <label for=\"searching\">검색을 원하는 책 , 저자 를 입력해주세요.</label>\n        <input type=\"text\" name=\"query\" id=\"searching\"></input>\n          <button type=\"submit\">검색</button>\n      </form>\n      </div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand>도서</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/bestseller\">\n                베스트셀러\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/newbook\">\n                신간도서\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <hr />\n        <Switch>\n          <Wrapper>\n            <Route exact path=\"/bestseller\">\n              <BestSeller />\n            </Route>\n            <Route path=\"/newbook\">\n              <NewBooks />\n            </Route>\n          </Wrapper>\n        </Switch>\n      </div>\n  );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}