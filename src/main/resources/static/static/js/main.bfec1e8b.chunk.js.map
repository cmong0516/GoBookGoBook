{"version":3,"sources":["book/NewBooks.js","book/Book.js","book/BestSeller.js","book/PaginationCustom.js","book/ReviewList.js","book/ReviewAdd.js","book/Review.js","book/RentButton.js","book/Detail.js","book/Search.js","user/Login.js","user/Signin.js","book/SearchBar.js","mypage/MyRentBooks.js","mypage/MyRent.js","mypage/MyReview.js","mypage/MyInfo.js","mypage/Mypage.js","user/Goodbye.js","user/AllUser.js","user/AllRent.js","user/Admin.js","Footer.js","user/FindId.js","user/FindPassword.js","user/FindMyInfo.js","App.js","reportWebVitals.js","index.js"],"names":["NewBooksContext","React","createContext","CategoryStyle","styled","div","NewBooks","books","useContext","BookContext","setBooks","SetBookContext","categoryNewbooks","categoryId","axios","get","then","res","data","catch","error","console","log","alert","useEffect","post","className","Col","Nav","variant","Item","Link","onClick","Provider","value","BookWrapper","BookImageWrapper","BookList","props","history","useHistory","Row","map","book","i","push","isbn","rank","src","coverLargeUrl","title","author","publisher","itemId","Book","bestSeller","BestSellerContext","newBooks","BestSeller","PaginationCustom","reviewsNum","setNowPage","items","pages","Math","ceil","number","Pagination","CardWrapper","ReviewList","userId","localStorage","getItem","useState","reviewList","setReviewList","reviews","slice","reverse","nowPage","LastIndex","FirstIndex","nowPageReviews","stateCheck","length","review","Card","Body","CloseButton","style","float","window","confirm","reviewId","setStateCheck","deleteReview","Text","content","Footer","pubDate","substr","ReviewAdd","myreview","setMyReview","Title","placeholder","name","onChange","e","target","ListGroup","ListGroupItem","Button","Review","Tabs","defaultActiveKey","Tab","eventKey","RentButton","rentStatus","setRentStatus","myBook","setMyBook","booksNum","mybooks","state","filter","x","size","categoryName","coverSmallUrl","customerReviewRank","description","rentId","BookView","DetailWrapper","DetailView","useParams","find","sm","Header","Badge","bg","text","Img","translator","Detail","Search","searchWord","show","setShow","handleClose","handleShow","params","query","xs","md","dateTime","Offcanvas","placement","onHide","closeButton","LoginForm","Signin","span","Alarm","Login","alarm","setAlarm","userPw","account","setAccount","idFormat","RegExp","passwordFormat","onChangeFunc","onSubmit","preventDefault","test","userName","setItem","userEmail","setIsLogin","type","to","Wrapper","GroupStyle","validated","setValidated","nameAlarm","setNameAlarm","idAlarm","setIdAlarm","pwAlarm","setPwAlarm","pwMatchAlarm","setPwMatchAlarm","userPwCheck","nameFormat","Form","noValidate","form","currentTarget","checkValidity","code","Group","Label","Control","required","Feedback","SearchBar","word","setWord","InputGroup","FormControl","onKeyUp","key","searchWordChange","CardStyle","dueDate","rentDate","date","Date","setDate","getDate","getFullYear","String","Number","getMonth","MyRentBooks","rentBook","rentBooks","item","arr","findIndex","b","setReturnCheck","MyRent","radioValue","setRadioValue","setBooksNum","returnCheck","nowRent","setNowRent","returnBook","setReturnBook","ButtonGroup","radio","idx","ToggleButton","id","checked","MyReview","myReviews","setMyReviews","myReviewsRev","myReview","Subtitle","InfoForm","MyInfo","myuserName","myuserId","myuserEmail","emailAlarm","setEmailAlarm","userpwCheck","emailFormat","editUser","updateAjax","put","disabled","readOnly","setMenu","delete","clear","deleteUser","MyMenu","MyList","Mypage","menu","action","Goodbye","url","playing","Styledth1","td","Styledth2","AllUser","users","setUsers","Table","user","AllRent","rent","setRent","hover","Admin","FindId","userid","setUserid","Modal","FindPassword","setUserEmail","setCode","backdrop","keyboard","controlId","autoFocus","FindMyInfo","UserStyle","App","Navbar","Container","Brand","as","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfec1e8b.chunk.js","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport Book from \"./Book.js\";\nimport { Nav, Col } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport {BookContext, SetBookContext} from \"../App.js\";\n\nexport let NewBooksContext = React.createContext();\n\nlet CategoryStyle = styled.div`\n  text-align: left;\n`;\n\nfunction NewBooks() {\n  \n  let books = useContext(BookContext);\n  let setBooks = useContext(SetBookContext);\n\n  useEffect(() => {\n    axios.post(\"/api/newbook\")\n      .then((res) => {\n        setBooks(res.data);\n      })\n      .catch((error) => {\n        alert(\"도서 데이터를 받아오는 데 실패했습니다.\");\n        console.log(error);\n      });\n  }, []);\n\n  function categoryNewbooks(categoryId) {\n    axios\n      .get(\"/api/newbook/\" + categoryId)\n      .then((res) => {\n        setBooks(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\"카테고리별 신간 데이터를 받을 수 없습니다.\");\n      });\n  }\n\n  return (\n    <div className=\"row\">\n      <Col>\n        <CategoryStyle>\n          <Nav variant=\"tabs\">\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"101\");\n                }}\n              >\n                소설\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"102\");\n                }}\n              >\n                시/에세이\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"103\");\n                }}\n              >\n                예술/대중문화\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"110\");\n                }}\n              >\n                아동\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"117\");\n                }}\n              >\n                경제경영\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"118\");\n                }}\n              >\n                자기계발\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"122\");\n                }}\n              >\n                컴퓨터/인터넷\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                onClick={() => {\n                  categoryNewbooks(\"123\");\n                }}\n              >\n                자격서/수험서\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </CategoryStyle>\n\n        <NewBooksContext.Provider value={books}>\n          <Book />\n        </NewBooksContext.Provider>\n      </Col>\n    </div>\n  );\n}\n\nexport default NewBooks;\n","import React, { useContext } from \"react\";\nimport { BestSellerContext } from \"./BestSeller.js\";\nimport { NewBooksContext } from \"./NewBooks.js\";\nimport { useHistory } from \"react-router-dom\";\nimport {Row} from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nlet BookWrapper = styled.div`\n  width: 80%;\n  margin-top: 2rem;\n  text-align: left;\n  cursor: pointer;\n\n  p {\n    font-size: 13pt;\n    font-weight: 600;\n    margin: 0.5rem 0 0 0;\n  }\n\n  h3 {\n    color: gold;\n    text-shadow: 2px 2px 1px blue;\n    font-style: italic;\n    font-weight: bolder;\n  }\n`;\nlet BookImageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n\n  img {\n    width: 11rem;\n    height: 16rem;\n    object-fit: cover;\n    border: solid 0.1rem darkgreen;\n  }\n`;\n\nfunction Book() {\n  let bestSeller = useContext(BestSellerContext);\n  let newBooks = useContext(NewBooksContext);\n\n  return (\n    <div>\n      {bestSeller ? (\n        <BookList books={bestSeller} />\n      ) : (\n        <BookList books={newBooks} />\n      )}\n    </div>\n  );\n}\n\nfunction BookList(props) {\n  let history = useHistory();\n\n  return (\n    <Row>\n      {props.books &&\n        props.books.map((book, i) => (\n          <div\n            className=\"col-lg-3 col-sm-4\"\n            key={book.itemId}\n            onClick={() => {\n              history.push(\"/detail/\" + book.isbn);\n            }}\n          >\n            <BookWrapper>\n              <h3>{book.rank}</h3>\n              <BookImageWrapper>\n                <img src={book.coverLargeUrl} />\n              </BookImageWrapper>\n              <p>{book.title}</p>\n              {book.author} / {book.publisher}\n            </BookWrapper>\n          </div>\n        ))}\n    </Row>\n  );\n}\n\nexport default Book;\n","import React, {useEffect, useContext} from 'react';\nimport axios from 'axios';\nimport Book from './Book.js'\nimport {BookContext, SetBookContext} from \"../App.js\";\n\nexport let BestSellerContext = React.createContext();\n\nfunction BestSeller() {\n    \n    let books = useContext(BookContext);\n    let setBooks = useContext(SetBookContext);\n    \n    useEffect(() => {\n        axios.post('/api/bestseller')\n            .then((res) => {\n                // console.log(res.data);\n                // console.log(Array.isArray(res.data));\n                setBooks(res.data);\n            }).catch((error) => {\n                alert('도서 데이터를 받아오는 데 실패했습니다.');\n                console.log(error);\n            });\n    },[]);\n\n    return (\n        <div>\n            <BestSellerContext.Provider value={books}>\n                <Book />\n            </BestSellerContext.Provider>\n        </div>\n    )\n}\n\nexport default BestSeller;","import React from 'react';\nimport { Pagination } from \"react-bootstrap\";\n\nfunction PaginationCustom({ reviewsNum, setNowPage }) {\n\n    let items = [];\n    let pages = Math.ceil(reviewsNum / 4);\n    for (let number = 1; number <= pages; number++) {\n        items.push(\n            <Pagination.Item key={number} onClick={() => setNowPage(number)}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n\n    return (\n        <div>\n            <Pagination className=\"pagination justify-content-center\">{items}</Pagination>\n        </div>\n    )\n}\n\nexport default PaginationCustom;\n","import React, { useState, useEffect } from \"react\";\nimport {Card,CloseButton} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport PaginationCustom from \"./PaginationCustom\";\n\nlet CardWrapper = styled.div`\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n`\n\n// book은 context API로 갖고오기\nfunction ReviewList(props) {\n  \n    let userId = localStorage.getItem(\"userId\");\n    let [reviewList, setReviewList] = useState([]);\n    // 리뷰 최근작성순으로 나오도록 reverse\n    let reviews = reviewList.slice(0).reverse();\n    let [nowPage, setNowPage] = useState(1);\n\n    let LastIndex = nowPage * 4;\n    let FirstIndex = LastIndex - 4;\n    let nowPageReviews = reviews.slice(FirstIndex, LastIndex);\n    \n    // 리뷰 불러오기\n    useEffect(() => {\n        axios.post(\"/review/findbybook\", {\n                isbn: props.book.isbn,\n            })\n            .then((res) => {\n                console.log(res.data);\n                setReviewList(res.data);\n            })\n            .catch((error) => {\n                alert(\"리뷰 조회에 실패했습니다.\");\n                console.log(error);\n            });\n    }, [props.stateCheck]);\n\n    // 리뷰 삭제\n    let deleteReview = (review) => {\n\n        if (window.confirm(\"회원님의 리뷰를 정말로 삭제하실건가요?\")) {\n            axios.post(\"/review/delete\", {\n                    reviewId: review.reviewId,\n                })\n                .then((res) => {\n                    alert(\"리뷰가 삭제되었습니다.\");\n                    props.setStateCheck(!props.stateCheck);\n                })\n                .catch((error) => {\n                    alert(\"리뷰 삭제에 실패했습니다.\");\n                    console.log(error);\n                });\n        } else {\n            return false;\n        }\n    };\n\n  return (\n    <div>\n      {\n        reviews.length == 0\n          ? <div>아직 리뷰가 없습니다.<br />첫 리뷰의 주인공이 되어보세요!</div>\n          : null\n      }\n      {nowPageReviews &&\n        nowPageReviews.map((review, i) => (\n          <CardWrapper>\n            <Card>\n              <Card.Body>\n                {\n                  userId == review.userId\n                    ? <CloseButton\n                      style={{ float: \"right\" }} onClick={() => deleteReview(review)} />\n                    : null\n                }\n                <Card.Text>\n                  {review.content}\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer className=\"text-muted\">\n                {review.userId}&nbsp;\n                ({review.pubDate.substr(0, 4)}.\n                {review.pubDate.substr(5, 2)}.\n                {review.pubDate.substr(8, 2)})\n              </Card.Footer>\n            </Card>\n          </CardWrapper>\n        ))}\n\n      <PaginationCustom reviewsNum={reviews.length} setNowPage={setNowPage} />\n    </div>\n  );\n}\n\nexport default ReviewList;\n","import React, {useState} from \"react\";\nimport {\n    Card,\n    ListGroup,\n    ListGroupItem,\n    Button\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n// book은 context API로 갖고오기\nfunction ReviewAdd(props) {\n\n    let [myreview, setMyReview] = useState('');\n    let book = props.book;\n    let userId = localStorage.getItem(\"userId\");\n\n    // 리뷰 추가\n    let addReview = () => {\n        axios\n            .post(\"/review/add\", {\n                userId: userId,\n                title: book.title,\n                content: myreview,\n                isbn: book.isbn,\n            })\n            .then((res) => {\n                alert(\"리뷰 등록 성공!\");\n                props.setStateCheck(!props.stateCheck)\n            })\n            .catch((error) => {\n                alert(\"리뷰 등록에 실패했습니다.\");\n                console.log(error);\n            });\n    };\n\n    return (\n        <div>\n            <Card>\n                <Card.Body>\n                    <Card.Title>{book.title}</Card.Title>\n                    <Card.Text>\n                        <textarea\n                            placeholder=\"책에 대한 자유로운 의견을 남겨주세요\"\n                            name=\"content\"\n                            onChange={(e) => { setMyReview(e.target.value) }}\n                        ></textarea>\n                    </Card.Text>\n                </Card.Body>\n                <ListGroup className=\"list-group-flush\">\n                    <ListGroupItem>\n                        <Button variant=\"outline-primary\" onClick={() => addReview()}>\n                            리뷰등록\n                        </Button>\n                    </ListGroupItem>\n                </ListGroup>\n            </Card>\n        </div>\n    );\n}\n\nexport default ReviewAdd;","import React, { useState } from \"react\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport ReviewList from \"./ReviewList.js\";\nimport ReviewAdd from \"./ReviewAdd.js\";\n\nfunction Review(props) {\n\n    let [stateCheck, setStateCheck] = useState(false);\n    let book = props.book;\n    \n  return (\n    <div>\n      <Tabs\n        defaultActiveKey=\"reviewinfo\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"reviewinfo\" title=\"리뷰보기\">\n          <ReviewList\n            book={book}\n            stateCheck={stateCheck}\n            setStateCheck={setStateCheck}\n          />\n        </Tab>\n\n        <Tab eventKey=\"reviewadd\" title=\"리뷰작성\">\n          <ReviewAdd\n            book={book}\n            stateCheck={stateCheck}\n            setStateCheck={setStateCheck}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default Review;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport \"../App.css\";\nimport axios from \"axios\";\n\nfunction RentButton(props) {\n  let userId = localStorage.getItem(\"userId\");\n\n  // myBook은 전역state로 관리??\n  let history = useHistory();\n  let [rentStatus, setRentStatus] = useState(\"rent\");\n  let [myBook, setMyBook] = useState();\n\n  useEffect(() => {\n    axios\n      .post(\"/rent/info\", { userId: userId })\n      .then((res) => {\n        let booksNum = 0;\n\n        res.data.map((mybooks) => {\n          if (mybooks.state == true) {\n            booksNum++;\n          }\n        });\n\n        // 반납 시 서버에 줄 대여책정보 (한번더 빌리는 경우 state가 true인 데이터로 주기)\n        setMyBook(\n          res.data\n            .filter((x) => x.title == props.book.title)\n            .filter((x) => x.state == true)\n        );\n\n        // 해당하지 않는 값은 null인줄 알았으나 콘솔찍어보니 빈배열이어서 .length로 빈배열판단\n        if (\n          res.data\n            .filter((x) => x.title == props.book.title)\n            .filter((x) => x.state == true).length !== 0\n        ) {\n          setRentStatus(\"return\");\n        } else {\n          booksNum >= 5 ? setRentStatus(\"forbidden\") : setRentStatus(\"rent\");\n        }\n      })\n      .catch((error) => {\n        alert(\"빌린도서 리스트를 받아오는 데 실패했습니다.\");\n        console.log(error);\n      });\n  }, [props.stateCheck]);\n\n  // function으로 따로 빼기\n  let rentFunc = () => {\n    if (!userId) {\n      alert(\"로그인 후 이용할 수 있습니다.\");\n      return history.push(\"/login\");\n    }\n\n    axios\n      .post(\"/rent/add\", {\n        author: props.book.author,\n        categoryName: props.book.categoryName,\n        coverLargeUrl: props.book.coverLargeUrl,\n        coverSmallUrl: props.book.coverSmallUrl,\n        customerReviewRank: props.book.customerReviewRank,\n        description: props.book.description,\n        isbn: props.book.isbn,\n        pubDate: props.book.pubDate,\n        publisher: props.book.publisher,\n        rank: props.book.rank,\n        title: props.book.title,\n        userId: userId,\n      })\n      .then((res) => {\n        props.setStateCheck(!props.stateCheck);\n        alert(\"대여 성공!\");\n      })\n      .catch((error) => {\n        alert(\"대여 통신에 실패했습니다.\");\n        console.log(error);\n      });\n  };\n\n  // function으로 따로 빼기\n  let returnFunc = () => {\n    axios\n      .post(\"/rent/return\", {\n        rentId: myBook[0].rentId,\n      })\n      .then((res) => {\n        alert(\"반납하셨습니다.\");\n        props.setStateCheck(!props.stateCheck);\n      })\n      .catch((error) => {\n        alert(\"반납 서버와의 통신에 실패했습니다.\");\n        console.log(error);\n      });\n  };\n\n  if (rentStatus == \"rent\") {\n    return (\n      <Button variant=\"success\" size=\"lg\" onClick={rentFunc}>\n        대여하기\n      </Button>\n    );\n  } else if (rentStatus == \"return\") {\n    return (\n      <Button variant=\"dark\" size=\"lg\" onClick={returnFunc}>\n        반납하기\n      </Button>\n    );\n  } else if (rentStatus == \"forbidden\") {\n    return (\n      <Button variant=\"danger\" size=\"lg\">\n        대여불가\n      </Button>\n    );\n  }\n}\n\nexport default RentButton;\n","import React, { useContext, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n  Badge,\n} from \"react-bootstrap\";\nimport \"../App.css\";\nimport { BookContext } from \"../App.js\";\nimport Review from \"./Review.js\";\nimport RentButton from \"./RentButton.js\";\nimport styled from \"styled-components\";\n\nlet BookView = styled.div`\n  display: grid;\n  justify-items: center;\n  margin-bottom: 10vh;\n  margin-top: 2vh;\n  h4 {\n    margin-bottom: 0;\n  }\n`;\n\nlet DetailWrapper = styled.div`\n  text-align: left;\n  span {\n    color: grey;\n  }\n  p {\n    margin: 0;\n  }\n`;\n\nfunction Detail() {\n  let book = useContext(BookContext);\n\n  return (\n    <div>\n      {book ? (\n        <DetailView books={book} />\n      ) : (\n        alert(\n          \"새로고침으로 인해 state가 유지되지 않아 도서데이터 수신에 실패했습니다.\"\n        )\n      )}\n    </div>\n  );\n}\n\n// 화면단 구성\nfunction DetailView(props) {\n  let { isbn } = useParams();\n  let book = props.books && props.books.find((x) => x.isbn == isbn);\n  let userId = localStorage.getItem(\"userId\");\n  let [stateCheck, setStateCheck] = useState(false);\n\n  return (\n    <BookView>\n      <Row>\n        <Col sm={3}>\n          <Card>\n            {book.rank\n             ? <Card.Header>\n                <h4>\n                  <Badge bg=\"light\" text=\"dark\">\n                    베스트셀러 {book.rank}위 🏆\n                  </Badge>\n                </h4>\n              </Card.Header>\n             : null\n            }\n            <Card.Img variant=\"top\" src={book.coverLargeUrl} />\n            {\n              userId != \"admin0\"\n                ? <RentButton\n                  book={book}\n                  stateCheck={stateCheck}\n                  setStateCheck={setStateCheck}\n                  className=\"detailrent\"\n                />\n                : null\n            }\n          </Card>\n          <br />\n        </Col>\n\n        <Col sm={5}>\n          <DetailWrapper>\n            <h3>{book.title}</h3>\n            <br />\n            <p>\n              <span>카테고리</span> {book.categoryName}({book.categoryId})\n              <br />\n              <span>isbn</span> {book.isbn}\n            </p>\n            <br />\n            <Card>\n              <ListGroup className=\"list-group-flush\">\n                <ListGroupItem>저자: {book.author}</ListGroupItem>\n                <ListGroupItem>\n                  번역가:\n                  {book.translator ? book.translator : \" -\"}\n                </ListGroupItem>\n                <ListGroupItem>\n                  출간일: {book.pubDate}\n                </ListGroupItem>\n                <ListGroupItem>출판사: {book.publisher}</ListGroupItem>\n                {\n                  book.customerReviewRank == 0\n                    ? null\n                    : <Card.Footer className=\"text-muted\">\n                      평점 : {book.customerReviewRank}\n                    </Card.Footer>\n                }\n              </ListGroup>\n              <Card.Body>\n                <Card.Text>{book.description}</Card.Text>\n              </Card.Body>\n            </Card>\n          </DetailWrapper>\n        </Col>\n        <Col sm={4}>\n          <Review book={book} />\n        </Col>\n      </Row>\n    </BookView>\n  );\n}\n\nexport default Detail;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport RentButton from \"./RentButton.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Card, Badge, Button, Offcanvas } from \"react-bootstrap\";\nimport { BookContext, SetBookContext } from \"../App.js\";\nimport Review from \"./Review.js\";\n\nfunction Search(props) {\n\n  let history = useHistory();\n  let books = useContext(BookContext);\n  let setBooks = useContext(SetBookContext);\n  // 대여상태에 따른 전체 책 하나하나의 버튼상태 업데이트를 위한 state\n  let [stateCheck, setStateCheck] = useState(false);\n  let searchWord = props.searchWord;\n  let userId = localStorage.getItem(\"userId\");\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/search\", { params: { query: searchWord } })\n      .then((res) => {\n        console.log(res.data)\n        setBooks(res.data);\n        if (res.data.length == 0) {\n          alert(\"검색결과가 없습니다🤔\");\n        }\n      })\n      .catch((error) => {\n        alert(\"검색결과 데이터를 받아오는 데 실패했습니다.\");\n        console.log(error);\n      });\n  }, [searchWord, stateCheck]);\n\n  return (\n  \n    <Row xs={1} md={4} className=\"g-4\">\n      {books &&\n        books.map((book, i) => (\n          <Col>\n            <Card className=\"searchcard\" onClick={() => {\n              // alert(book.isbn);\n              history.push(\"/detail/\" + book.isbn);\n            }}>\n              <Badge bg=\"primary\">\n                {searchWord} 검색 결과 No.{i + 1}\n              </Badge>\n              <Card.Img\n                variant=\"top\"\n                src={book.coverLargeUrl}\n                className=\"cardImg\"\n              />\n              <Card.Body>\n                <Card.Title>{book.title}...</Card.Title>\n                <Card.Text>{book.author}</Card.Text>\n                <Card.Text>{book.publisher}</Card.Text>\n                {/* <Card.Text>{book.contents.substr(0, 60)}...</Card.Text> */}\n                <Card.Text>{book.description}...</Card.Text>\n              </Card.Body>\n            </Card>\n            {\n              userId != \"admin0\"\n                ?\n                <RentButton\n                  book={{\n                    author: book.author,\n                    categoryName: '',\n                    coverLargeUrl: book.coverLargeUrl,\n                    coverSmallUrl: book.coverLargeUrl,\n                    customerReviewRank: '',\n                    description: book.description,\n                    isbn: book.isbn,\n                    pubDate: book.dateTime,\n                    publisher: book.publisher,\n                    rank: '',\n                    title: book.title,\n                    userId: userId,\n                  }}\n                  stateCheck={stateCheck}\n                  setStateCheck={setStateCheck}\n                />\n                : null\n            }\n            <Button variant=\"primary\" onClick={handleShow}>\n              Launch\n            </Button>\n\n            <Offcanvas show={show} placement={'end'} onHide={handleClose}>\n              <Offcanvas.Header closeButton>\n                <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n              </Offcanvas.Header>\n              <Offcanvas.Body>\n                Some text as placeholder. In real life you can have the elements you\n                have chosen. Like, text, images, lists, etc.\n              </Offcanvas.Body>\n            </Offcanvas>\n            {/* <Review book={book}/> */}\n          </Col>\n        ))}\n    </Row>\n  );\n}\n\nexport default Search;\n","import axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nlet LoginForm = styled.div`\n  width: 22rem;\n  margin: auto;\n  padding-top : 8vh;\n  padding-bottom: 10vh;\n\n  input,\n  button {\n    width: 100%;\n    height: 3rem;\n    margin-bottom: 1rem;\n  }\n  input {\n    border: solid 1px lightgrey;\n    border-radius: 4px;\n    padding: 0.7rem;\n  }\n  h3 {\n    font-weight: bold;\n    text-align: left;\n  }\n  p {\n    text-align: left;\n  }\n`;\nlet Signin = styled.span`\n  text-decoration: underline;\n`;\nlet Alarm = styled.div`\n  width: 100%;\n  text-align: left;\n  color: red;\n  font-weight: bold;\n  font-size: 13pt;\n`;\n\nfunction Login(props) {\n  let history = useHistory();\n\n  let [alarm, setAlarm] = useState(\"\");\n  let [account, setAccount] = useState({\n    userId: \"\",\n    userPw: \"\",\n  });\n\n  // 아이디 : 영어/숫자 6-12자\n  let idFormat = RegExp(/^[A-Za-z0-9]{6,12}$/);\n  // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n  let passwordFormat = RegExp(\n    /^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/\n  );\n\n  let onChangeFunc = (e) => {\n    setAccount({\n      ...account,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  let submitFunc = (e) => {\n    e.preventDefault();\n\n    if (!account.userId) {\n      setAlarm(\"아이디가 입력되지 않았습니다.\");\n    } else if (!account.userPw) {\n      setAlarm(\"비밀번호가 입력되지 않았습ㄹ니다.\");\n    } else if (\n      !idFormat.test(account.userId) ||\n      !passwordFormat.test(account.userPw)\n    ) {\n      setAlarm(\n        \"아이디 또는 비밀번호의 형식이 올바르지 않습니다.\"\n      );\n    } else {\n      axios\n        .post(\"/login\", {\n          userId: account.userId,\n          userPw: account.userPw,\n        })\n        .then((res) => {\n          if (res) {\n            console.log(res);\n\n            if (res.data.userName) {\n              alert(res.data.userName + \"님, 로그인되었습니다🐢\");\n              localStorage.setItem(\"userName\", res.data.userName);\n              // localStorage.setItem('userId', JSON.stringify(res.data.userId));\n              localStorage.setItem(\"userId\", account.userId);\n              localStorage.setItem(\"userEmail\", res.data.userEmail);\n              props.setIsLogin(true);\n              // 리렌더링을 위해 상위컴포넌트로부터 받은 state변경\n              history.push(\"/\");\n            } else {\n              setAlarm(\"아이디 또는 비밀번호를 잘못 입력하셨습니다.\");\n            }\n          }\n        })\n        .catch((error) => {\n          alert(\"통신실패! 에러명 : \" + error);\n        });\n    }\n  };\n\n  return (\n    <LoginForm>\n      <form onSubmit={submitFunc}>\n        <h3>로그인</h3>\n        <p>Go Book Go Book의 다양한 서비스를 누리세요!</p>\n        <Alarm>{alarm}</Alarm>\n        <input\n          type=\"text\"\n          name=\"userId\"\n          placeholder=\"아이디를 입력해주세요.\"\n          onChange={onChangeFunc}\n        ></input>\n        <input\n          type=\"password\"\n          name=\"userPw\"\n          placeholder=\"비밀번호를 입력해주세요.\"\n          onChange={onChangeFunc}\n        ></input>\n        <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n          로그인\n        </Button>\n        아이디를 잊으셨나요?&nbsp;&nbsp;&nbsp;\n        <Signin>\n          <Link to=\"/findmyinfo\">내정보찾기</Link>\n        </Signin>\n        <span>&nbsp; | &nbsp;</span>\n        <Signin>\n          <Link to=\"/signin\">회원가입</Link>\n        </Signin>\n      </form>\n    </LoginForm>\n  );\n}\n\nexport default Login;\n","import React, {useState} from \"react\";\nimport { Button,Form } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport axios from \"axios\";\n\nlet Wrapper = styled.div`\n    width: 22rem;\n    margin: auto;\n    padding-bottom: 3rem;\n    text-align: left;\n    input, button {\n        width: 100%;\n        height: 3rem;\n        // margin-bottom: 1rem;\n    }\n    button {\n        margin-top: 1rem;\n    }\n    h3 {\n        font-weight: bold;\n    }\n`\nlet GroupStyle = styled.div`\n    margin: 1rem 0;\n`\nlet Alarm = styled.div`\n    width: 100%;\n    text-align: left;\n    color: red;\n    font-weight: bold;   \n`\n\nfunction Signin() {\n\n    let history = useHistory();\n\n    let [validated, setValidated] = useState(false);\n    let [nameAlarm, setNameAlarm] = useState('');\n    let [idAlarm, setIdAlarm] = useState('');\n    // let [emailAlarm, setEmailAlarm] = useState('');\n    let [pwAlarm, setPwAlarm] = useState('');\n    let [pwMatchAlarm, setPwMatchAlarm] = useState('');\n    let [account, setAccount] = useState({\n        userName: '',\n        userId: '',\n        userEmail: '',\n        userPw: '',\n        userPwCheck: ''\n    })\n\n    // 아이디 : 영어/숫자 6-12자\n    let idFormat = RegExp(/^[A-Za-z0-9]{6,12}$/);\n    // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n    let passwordFormat = RegExp(/^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/);\n    // 이름 : 한글 2자이상\n    let nameFormat = RegExp(/^[가-힣]{2,}$/);\n\n    // 이메일 유효성검사는 이미 input type=\"email\"에서 검증되므로 불필요\n    // 이메일 : (이메일아이디 영어/숫자 하나 이상) + @(필수) + (영어 하나이상) + .(특수문자이므로 \\붙임) + (영어 하나이상)\n    // let emailFormat = RegExp(/^[A-Za-z0-9]+@[A-Za-z]+\\.[A-Za-z]+$/);\n\n    let onChangeFunc = (e) => {\n        setAccount({\n            ...account, [e.target.name]: e.target.value\n        })\n    }\n    let submitFunc = (e) => {\n        e.preventDefault();\n        let form = e.currentTarget;\n        setNameAlarm('');\n        setIdAlarm('');\n        // setEmailAlarm('');\n        setPwAlarm('');\n        setPwMatchAlarm('');\n\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            setValidated(true);\n        } else if (!nameFormat.test(account.userName) || !idFormat.test(account.userId) || !passwordFormat.test(account.userPw)) {\n            // || !emailFormat.test(account.useremail) || !passwordFormat.test(account.userpw) ) {\n\n            if (!nameFormat.test(account.userName))\n                setNameAlarm('이름의 형식이 올바르지 않습니다.');\n            if (!idFormat.test(account.userId))\n                setIdAlarm('아이디의 형식이 올바르지 않습니다.');\n            // if( !emailFormat.test(account.useremail) )\n            //     setEmailAlarm('이메일의 형식이 올바르지 않습니다.');\n            if (!passwordFormat.test(account.userPw))\n                setPwAlarm('비밀번호의 형식이 올바르지 않습니다.');\n\n        } else if (account.userPw != account.userPwCheck) {\n            setPwMatchAlarm('비밀번호가 일치하지 않습니다.');\n        } else {\n            console.log(account);\n            axios.post('/signin', {\n                userId: account.userId,\n                userPw: account.userPw,\n                userName: account.userName,\n                userEmail: account.userEmail\n            })\n                .then(res => {\n                    if (res.data) {\n                        alert('회원가입이 완료되었습니다😇');\n                        history.push(\"/login\");\n                    } else {\n                        console.log(res.data.code)\n                        alert('이미 가입된 정보입니다😰');\n                        history.push(\"/login\");\n                    }\n                })\n                .catch(error => {\n                    alert('통신실패! 에러명 : ' + error);\n                    console.log(error);\n                });\n        }\n\n    }\n\n    return (\n        <Wrapper>\n            <Form noValidate validated={validated} onSubmit={submitFunc}>\n                <h3>회원가입</h3>\n\n                <GroupStyle>\n                    <Form.Group>\n                        <Form.Label>이름</Form.Label>\n                        <Alarm>{nameAlarm}</Alarm>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            name=\"userName\"\n                            placeholder=\"ex) 홍길동\"\n                            onChange={onChangeFunc}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">이름을 입력해주세요.</Form.Control.Feedback>\n                    </Form.Group>\n                </GroupStyle>\n\n                <GroupStyle>\n                    <Form.Group>\n                        <Form.Label>아이디</Form.Label>\n                        <Alarm>{idAlarm}</Alarm>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            name=\"userId\"\n                            placeholder=\"영어/숫자 포함 6-12자를 입력해주세요.\"\n                            onChange={onChangeFunc}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">아이디를 입력해주세요.</Form.Control.Feedback>\n                    </Form.Group>\n                </GroupStyle>\n\n                <GroupStyle>\n                    <Form.Group>\n                        <Form.Label>이메일</Form.Label>\n                        {/* <Alarm>{emailAlarm}</Alarm> */}\n                        <Form.Control\n                            required\n                            type=\"email\"\n                            name=\"userEmail\"\n                            placeholder=\"ex) GoBook@naver.com\"\n                            onChange={onChangeFunc}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">이메일을 입력해주세요.</Form.Control.Feedback>\n                    </Form.Group>\n                </GroupStyle>\n\n                <GroupStyle>\n                    <Form.Group>\n                        <Form.Label>비밀번호</Form.Label>\n                        <Alarm>{pwAlarm}</Alarm>\n                        <Form.Control\n                            required\n                            type=\"password\"\n                            name=\"userPw\"\n                            placeholder=\"영어/숫자/특수문자 포함 9-20자를 입력해주세요.\"\n                            onChange={onChangeFunc}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\n                    </Form.Group>\n                </GroupStyle>\n\n                <GroupStyle>\n                    <Form.Group>\n                        <Form.Label>비밀번호 확인</Form.Label>\n                        <Alarm>{pwMatchAlarm}</Alarm>\n                        <Form.Control\n                            required\n                            type=\"password\"\n                            name=\"userPwCheck\"\n                            placeholder=\"확인을 위해 비밀번호를 한번 더 입력해주세요.\"\n                            onChange={onChangeFunc}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">비밀번호 확인을 입력해주세요.</Form.Control.Feedback>\n                    </Form.Group>\n                </GroupStyle>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    회원가입하기\n                </Button>\n            </Form>\n\n        </Wrapper>\n    );\n}\n\nexport default Signin;","import React,{useState} from 'react';\nimport {InputGroup, FormControl, Button} from \"react-bootstrap\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction SearchBar(props) {\n\n    let history = useHistory();\n    let [word, setWord] = useState(\"\");\n\n    return (\n        <div>\n            <InputGroup className=\"my-5 w-50 mx-auto\">\n                <FormControl\n                    size=\"lg\"\n                    type=\"search\"\n                    placeholder=\"검색을 원하는 책, 저자를 입력해주세요.\"\n                    onChange={(e) => setWord(e.target.value)}\n                    onKeyUp ={(e) => { if(e.key =='Enter') {  \n                        props.searchWordChange(e.target.value); \n                        history.push('/api/search?query=' + e.target.value) } \n                        // props.searchWord를 쓸거라면 setState의 특성때문에 \n                        // onKeyDown, onKeyUp으로 setState와 push를 나눠서 사용해야 (예전코드처럼)\n                    }}\n                />\n                \n                <Button \n                    className=\"rounded-1\" \n                    variant=\"outline-light\" \n                    \n                    onClick={()=>{ \n                        props.searchWordChange(word); \n                        history.push('/api/search?query=' + word) }}>검색</Button>\n            </InputGroup>\n            \n        </div>\n    )\n}\n\nexport default SearchBar;","import React from \"react\";\nimport { Card, Button, Row } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nlet CardStyle = styled.div`\n  width: 33%;\n  max-width: 240px;\n  min-width: 210px;\n  margin-top: 1rem;\n`;\n\nfunction MyRentBooks(props) {\n\n  let rentBooks = props.rentBooks;\n\n  // 이미 2번이상 빌려본 책은 지난 대여내역에서 한번만 나오도록 중복제거\n  let rentBook = rentBooks.filter(\n    (item, i, arr) => i === arr.findIndex(b => (item.title === b.title))\n  );\n  \n  let returnFunc = (rentId) => {\n\n    axios.post(\"/rent/return\", {\n      rentId: rentId,\n    })\n    .then((res) => {\n      alert(\"반납하셨습니다.\");\n      props.setReturnCheck(true);\n    })\n    .catch((error) => {\n      alert(\"반납 서버와의 통신에 실패했습니다.\")\n      console.log(error);\n    });\n  }\n\n  return (\n    <Row>\n      {\n        // rentBook && rentBook.map( book => <CardComp book={book} /> )\n        rentBook && rentBook.map( book => \n          <CardStyle>\n            <Card key={book.rentId}>\n              {\n                book.coverLargeUrl\n                ? <Card.Img variant=\"top\" src={book.coverLargeUrl} />\n                : <Card.Img variant=\"top\" src={book.coverSmallUrl} />\n              }\n              <Card.Body>\n                <Card.Title>{book.title}</Card.Title>\n                <Card.Text>대여일 : {book.rentDate}</Card.Text>\n                <Card.Text>반납예정일 : {dueDate(book.rentDate)}</Card.Text>\n                {\n                  book.state == true \n                  ? <Button variant=\"outline-danger\" onClick={() => returnFunc(book.rentId)}>\n                      반납하기\n                    </Button>\n                  : null\n                }\n              </Card.Body>\n            </Card>\n          </CardStyle>\n        )\n      }\n    </Row>\n  )\n  \n}\n\nfunction dueDate(rentDate) {\n\n  let date = new Date(rentDate);\n  date.setDate(date.getDate() + 7);\n\n  let duedate = date.getFullYear() + '-' + String(Number(date.getMonth()) + 1) + '-' + date.getDate();\n\n  return duedate;\n}\n\n// function returnFunc(rentId, props) {\n\n//   let history = useHistory();\n\n//   axios.post(\"/rent/return\", {\n//       rentId: rentId,\n//     })\n//     .then((res) => {\n//       alert(\"반납하셨습니다.\");\n//       props?.setReturnCheck(...1);\n//       history.push(\"/mypage\");\n//     })\n//     .catch((error) => {\n//       alert(\"반납 서버와의 통신에 실패했습니다.\")\n//       console.log(error);\n//     });\n// }\n\n// function CardComp({ book }) {\n\n//   return (\n//     <CartStyle>\n//       <Card key={book.rentId}>\n//         {\n//           book.coverLargeUrl\n//           ? <BookImg>\n//               <Card.Img variant=\"top\" src={book.coverLargeUrl} />\n//             </BookImg>\n//           : \n//             <BookImg>\n//               <Card.Img variant=\"top\" src={book.coverSmallUrl} />\n//             </BookImg>\n//         }\n//         <Card.Body>\n//           <Card.Title>{book.title}</Card.Title>\n//           <Card.Text>대여일 : {book.rentDate}</Card.Text>\n//           <Card.Text>반납일 : (D-계산값)</Card.Text>\n//           {\n//             book.state == true \n//             ? <Button variant=\"outline-danger\" onClick={() => returnFunc(book.rentId)}>\n//                 반납하기\n//               </Button>\n//             : null\n//           }\n//         </Card.Body>\n//       </Card>\n//     </CartStyle>\n//   );\n// }\n\nexport default MyRentBooks;\n","import React, { useEffect, useState } from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport MyRentBooks from \"./MyRentBooks.js\";\nimport axios from \"axios\";\n\nfunction MyRent() {\n  const [radioValue, setRadioValue] = useState(\"1\");\n  let userName = localStorage.getItem(\"userName\");\n  // let userId = JSON.parse(localStorage.getItem('userId'));\n  let userId = localStorage.getItem(\"userId\");\n  let [booksNum, setBooksNum] = useState(0);\n  let [returnCheck, setReturnCheck] = useState(false);\n\n  let [nowRent, setNowRent] = useState([]);\n  let [returnBook, setReturnBook] = useState([]);\n  // 일반 배열은 useEffect에서 push한 값이 사라지고 초기화된 상태로 return으로 들어감\n  // let nowRent = [];\n  // let returnBook = [];\n\n  const radios = [\n    { name: \"현재 대여중인 도서\", value: \"1\" },\n    { name: \"지난 대여 내역\", value: \"2\" },\n  ];\n\n  useEffect(() => {\n    axios\n      .post(\"/rent/info\", { userId: userId })\n      .then((res) => {\n        console.log(returnCheck);\n        // booksNum은 RentButton.js에서 갖고오기\n        setNowRent(res.data.filter((x) => x.state == true));\n        setReturnBook(res.data.filter((x) => x.state == false));\n\n        res.data.map((myBook) => {\n          if (myBook.state == true) {\n            setBooksNum(++booksNum);\n          }\n        });\n      })\n      .catch((error) => {\n        alert(\"도서 데이터를 받아오는 데 실패했습니다.\");\n        console.log(error);\n      });\n    // console.log(returnCheck);\n  }, [returnCheck]);\n\n  return (\n    <div>\n      <h2>{userName}님, 반가워요!</h2>\n      {/* 에러 : <p>현재 대여중인 도서는 {rentBooks.length}/5 권 입니다.</p> */}\n      <p>현재 대여중인 도서는 {booksNum}/5 권 입니다.</p>\n      <ButtonGroup>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            id={`radio-${idx}`}\n            type=\"radio\"\n            variant={idx % 2 ? \"outline-primary\" : \"outline-primary\"}\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue == radio.value}\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n\n      {\n        radioValue == 1\n          ? <MyRentBooks rentBooks={nowRent} setReturnCheck={setReturnCheck} />\n          : <MyRentBooks rentBooks={returnBook} />\n      }\n    </div>\n  );\n}\n\nexport default MyRent;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, CloseButton, Row } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport PaginationCustom from \"../book/PaginationCustom\";\n\nlet CardStyle = styled.div`\n    padding: 1vh;\n`;\n\nfunction MyReview() {\n\n    let userId = localStorage.getItem(\"userId\");\n    let [stateCheck, setStateCheck] = useState(false);\n    let [myReviews, setMyReviews] = useState([]);\n    // 리뷰 최근작성순으로 나오도록 reverse\n    let myReviewsRev = myReviews.slice(0).reverse();\n    let [nowPage, setNowPage] = useState(1);\n\n    let LastIndex = nowPage * 4;\n    let FirstIndex = LastIndex - 4;\n    let nowPageReviews = myReviewsRev.slice(FirstIndex, LastIndex);\n    \n    useEffect(() => {\n        axios.post(\"/review/infobyuser\", {\n            userId: userId\n            })\n            .then((res) => {\n                setMyReviews(res.data);\n            })\n            .catch((error) => {\n                alert(\"리뷰 조회에 실패했습니다.\");\n                console.log(error);\n            });\n    }, [stateCheck]);\n\n    let deleteReview = (reviewId) => {\n\n        if (window.confirm(\"회원님의 리뷰를 정말로 삭제하실건가요?\")) {\n            axios.post(\"/review/delete\", {\n                reviewId: reviewId,\n            })\n                .then((res) => {\n                    alert(\"리뷰가 삭제되었습니다.\");\n                    setStateCheck(!stateCheck);\n                })\n                .catch((error) => {\n                    alert(\"리뷰 삭제에 실패했습니다.\");\n                    console.log(error);\n                });\n        } else {\n            return false;\n        }\n    }\n\n    return (\n        <div>\n            {\n                nowPageReviews && nowPageReviews.map(myReview => (\n                    <CardStyle>\n                        <Card>\n                            <Card.Body>\n                                <CloseButton\n                                    style={{ float: \"right\" }}\n                                    onClick={() => deleteReview(myReview.reviewId)} />\n                                <Card.Title>{myReview.title}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">{myReview.pubDate}</Card.Subtitle>\n                                <Card.Text>{myReview.content}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </CardStyle>\n                ))\n            }\n            <PaginationCustom reviewsNum={myReviews.length} setNowPage={setNowPage} />\n        </div>\n    )\n}\n\nexport default MyReview;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nlet InfoForm = styled.div`\n  width: 80%;\n  padding-bottom: 3rem;\n\n  input,\n  button {\n    height: 3rem;\n    // margin-bottom: 1rem;\n  }\n  button {\n    width: 30%;\n    margin-top: 1rem;\n    margin-right: 1rem;\n  }\n`;\nlet GroupStyle = styled.div`\n  margin: 1rem 0;\n`;\nlet Alarm = styled.div`\n  width: 100%;\n  text-align: left;\n  color: red;\n  font-weight: bold;\n`;\n\nfunction MyInfo(props) {\n  let history = useHistory();\n\n  let myuserName = localStorage.getItem(\"userName\");\n  let myuserId = localStorage.getItem(\"userId\");\n  let myuserEmail = localStorage.getItem(\"userEmail\");\n\n  let [alarm, setAlarm] = useState(\"\");\n  let [emailAlarm, setEmailAlarm] = useState(\"\");\n  let [pwAlarm, setPwAlarm] = useState(\"\");\n  let [pwMatchAlarm, setPwMatchAlarm] = useState(\"\");\n  let [account, setAccount] = useState({\n    userId: \"\",\n    userEmail: \"\",\n    userPw: \"\",\n    userpwCheck: \"\",\n  });\n\n  // 이메일 : (이메일아이디 영어/숫자 하나 이상) + @(필수) + (영어 하나이상) + .(특수문자이므로 \\붙임) + (영어 하나이상)\n  let emailFormat = RegExp(/^[A-Za-z0-9]+@[A-Za-z]+\\.[A-Za-z]+$/);\n  // 비밀번호 : 영어/숫자/특수문자(각 최소 1개씩) 조합 9-20자\n  let passwordFormat = RegExp(\n    /^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[~`!@#$%\\^&*()-+=])[A-Za-z0-9~`!@#$%\\^&*()-+=]{9,20}$/\n  );\n\n  let onChangeFunc = (e) => {\n    setAccount({\n      ...account,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  let editUser = (e) => {\n    // e.preventDefault();\n    let form = e.currentTarget;\n\n    setAlarm(\"\");\n    setEmailAlarm(\"\");\n    setPwAlarm(\"\");\n    setPwMatchAlarm(\"\");\n\n    // 둘 다 작성하지 않는 경우\n    if (!account.userEmail && !account.userPw) {\n      setAlarm(\"수정하실 정보를 작성해주세요.\");\n    }\n    // 이메일만 작성하는 경우\n    if (account.userEmail && !account.userPw) {\n      // 형식확인\n      if (!emailFormat.test(account.userEmail)) {\n        setEmailAlarm(\"이메일의 형식이 올바르지 않습니다.\");\n      } else {\n        updateAjax();\n      }\n    }\n    // 비밀번호만 작성하는 경우\n    if (!account.userEmail && account.userPw) {\n      // 형식확인\n      if (!passwordFormat.test(account.userPw)) {\n        setPwAlarm(\"비밀번호의 형식이 올바르지 않습니다.\");\n        // 비밀번호 확인란과 일치여부\n      } else if (account.userPw != account.userpwCheck) {\n        setPwMatchAlarm(\"비밀번호가 일치하지 않습니다.\");\n      } else {\n        updateAjax();\n      }\n    }\n    // 둘 다 작성한 경우\n    if (account.userEmail && account.userPw) {\n      // 이메일 형식확인\n      if (!emailFormat.test(account.userEmail)) {\n        setEmailAlarm(\"이메일의 형식이 올바르지 않습니다.\");\n      }\n      // 비밀번호 형식확인\n      // 이메일, 비밀번호 둘 다 형식에 맞지 않는 경우를 위해 if문을 따로 작성\n      if (!passwordFormat.test(account.userPw)) {\n        setPwAlarm(\"비밀번호의 형식이 올바르지 않습니다.\");\n        // 비밀번호 확인란과 일치여부\n      } else if (account.userPw != account.userpwCheck) {\n        setPwMatchAlarm(\"비밀번호가 일치하지 않습니다.\");\n        // 비밀번호 형식/확인란 맞은 상태에서 이메일형식까지 맞으면 결과 넘어감\n      } else if (emailFormat.test(account.userEmail)) {\n        updateAjax();\n      }\n    }\n  };\n\n  let updateAjax = () => {\n    axios\n      .put(\"/mypage\", {\n        userId: myuserId,\n        userPw: account.userPw,\n        userEmail: account.userEmail,\n      })\n      .then((res) => {\n        alert(\"개인정보 수정이 완료되었습니다.\");\n        localStorage.setItem(\"userEmail\", account.userEmail);\n        history.push(\"/\");\n        console.log(res);\n      })\n      .catch((error) => {\n        alert(\"개인정보 수정에 실패했습니다.\");\n        console.log(error);\n      });\n  };\n\n  let deleteUser = () => {\n    console.log(myuserId);\n    if (window.confirm(\"정말로... 탈퇴하실건가요?\")) {\n      axios\n        .delete(\"/delete\", {\n          data: { userId: myuserId },\n        })\n        .then((res) => {\n          console.log(res);\n          localStorage.clear();\n          alert(\"탈퇴에 성공하셨습니다🙂\");\n          history.push(\"/goodbye\");\n        })\n        .catch((error) => {\n          alert(\"회원 탈퇴에 실패하셨습니다.\");\n          console.log(error);\n        });\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <div>\n      <h2>개인정보 수정</h2>\n      <p>고객님의 정보를 정확히 입력해주세요.</p>\n      <Alarm>{alarm}</Alarm>\n      <InfoForm>\n        <Form noValidate onSubmit={editUser}>\n          <GroupStyle>\n            <Form.Group>\n              <Form.Label>이름</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder={myuserName}\n                onChange={onChangeFunc}\n                disabled\n                readOnly\n              ></Form.Control>\n            </Form.Group>\n          </GroupStyle>\n\n          <GroupStyle>\n            <Form.Group>\n              <Form.Label>아이디</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder={myuserId}\n                onChange={onChangeFunc}\n                disabled\n                readOnly\n              ></Form.Control>\n            </Form.Group>\n          </GroupStyle>\n\n          <GroupStyle>\n            <Form.Group>\n              <Form.Label>이메일</Form.Label>\n              <Alarm>{emailAlarm}</Alarm>\n              <Form.Control\n                required\n                type=\"email\"\n                name=\"userEmail\"\n                placeholder={myuserEmail}\n                onChange={onChangeFunc}\n              ></Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                이메일을 입력해주세요.\n              </Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n\n          <GroupStyle>\n            <Form.Group>\n              <Form.Label>비밀번호</Form.Label>\n              <Alarm>{pwAlarm}</Alarm>\n              <Form.Control\n                required\n                type=\"password\"\n                name=\"userPw\"\n                placeholder=\"영어/숫자/특수문자 포함 9-20자를 입력해주세요.\"\n                onChange={onChangeFunc}\n              ></Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                비밀번호를 입력해주세요.\n              </Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n\n          <GroupStyle>\n            <Form.Group>\n              <Form.Label>비밀번호 확인</Form.Label>\n              <Alarm>{pwMatchAlarm}</Alarm>\n              <Form.Control\n                required\n                type=\"password\"\n                name=\"userpwCheck\"\n                placeholder=\"확인을 위해 비밀번호를 한번 더 입력해주세요.\"\n                onChange={onChangeFunc}\n              ></Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                비밀번호 확인을 입력해주세요.\n              </Form.Control.Feedback>\n            </Form.Group>\n          </GroupStyle>\n\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            onClick={() => editUser(myuserId)}\n          >\n            수정\n          </Button>\n          <Button\n            variant=\"outline-warning\"\n            type=\"button\"\n            onClick={() => props.setMenu(0)}\n          >\n            취소\n          </Button>\n          <Button\n            variant=\"outline-danger\"\n            type=\"button\"\n            onClick={() => deleteUser(myuserId)}\n          >\n            회원 탈퇴\n          </Button>\n        </Form>\n      </InfoForm>\n    </div>\n  );\n}\n\nexport default MyInfo;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport MyRent from \"./MyRent.js\";\nimport MyReview from \"./MyReview.js\";\nimport MyInfo from \"./MyInfo.js\";\nimport { Col, Row, ListGroup } from \"react-bootstrap\";\nimport styled from 'styled-components';\n\nlet MyMenu = styled.div`\n  h4 {\n    margin: 0;\n    padding: 0.5rem; \n  }\n`\nlet MyList = styled.div`\n  text-align: left;\n  padding-left: 3rem;\n  border-left: dashed 2px Silver;\n\n  h2 {\n    margin-bottom: 1rem;\n  }\n`\n\nfunction Mypage() {\n  \n  let [menu, setMenu] = useState(0);\n\n  // 로그인하지 않은 경우 url입력 시 출입불가\n  let history = useHistory();\n  let userId = localStorage.getItem('userId');\n\n  return (\n    <Row>\n      {\n        !userId\n          ? history.push(\"/login\")\n          : null\n      }\n      <Col sm={3}>\n      <MyMenu>\n          <h4>마이페이지</h4>\n          <ListGroup.Item action variant=\"light\" onClick={() => setMenu(0)}>\n            나의 대여 관리\n          </ListGroup.Item>\n          <ListGroup.Item action variant=\"light\" onClick={() => setMenu(1)}>\n            나의 리뷰 관리\n          </ListGroup.Item>\n          <ListGroup.Item action variant=\"light\" onClick={() => setMenu(2)}>\n            개인정보 수정\n          </ListGroup.Item>\n        </MyMenu>\n      </Col>\n\n      <Col sm={9}>\n        <MyList>\n          {\n            {\n              0: <MyRent />,\n              1: <MyReview />,\n              2: <MyInfo setMenu={setMenu} />\n            } [menu]\n          }\n        </MyList>\n      </Col>\n     \n    </Row>\n  );\n}\n\nexport default Mypage;\n","import ReactPlayer from \"react-player\";\n\nfunction Goodbye(props) {\n\n  props.setIsLogin(true)\n  \n  let goodbye = `It's been a long day without you, my friend\n    And I'll tell you all about it when I see you again\n    We've come a long way from where we began\n    Oh, I'll tell you all about it when I see you again\n    When I see you again\n    Damn, who knew?\n    All the planes we flew, good things we been through\n    That I'd be standing right here talking to you\n    'Bout another path, I know we loved to hit the road and laugh\n    But something told me that it wouldn't last\n    Had to switch up, look at things different, see the bigger picture\n    Those were the days, hard work forever pays\n    Now I see you in a better place (see you in a better place)\n    Uh\n    How can we not talk about family when family's all that we got?\n    Everything I went through, you were standing there by my side\n    And now you gon' be with me for the last ride\n    It's been a long day without you, my friend\n    And I'll tell you all about it when I see you again (I'll see you again)\n    We've come a long way (yeah, we came a long way)\n    From where we began (you know we started)\n    Oh, I'll tell you all about it when I see you again (I'll tell you)\n    When I see you again\n    First, you both go out your way and the vibe is feeling strong\n    And what's small turned to a friendship, a friendship turned to a bond\n    And that bond will never be broken, the love will never get lost\n    (The love will never get lost)\n    And when brotherhood come first, then the line will never be crossed\n    Established it on our own when that line had to be drawn\n    And that line is what we reached, so remember me when I'm gone\n    (Remember me when I'm gone)\n    How can we not talk about family when family's all that we got?\n    Everything I went through you were standing there by my side\n    And now you gon' be with me for the last ride\n    So let the light guide your way, yeah\n    Hold every memory as you go\n    And every road you take\n    Will always lead you home, home\n    It's been a long day without you, my friend\n    And I'll tell you all about it when I see you again\n    We've come a long way from where we began\n    Oh, I'll tell you all about it when I see you again\n    When I see you again\n    When I see you again (yeah, uh)\n    See you again (yeah, yeah, yeah)\n    When I see you again`;\n  return (\n    <div className=\"goodbye\">\n      <div>\n        <ReactPlayer\n          url=\"https://www.youtube.com/watch?v=RgKAFK5djSk\"\n          playing\n        />\n      </div>\n      <div>\n        <br></br>\n        {goodbye}\n        <hr></hr>\n      </div>\n    </div>\n  );\n}\n\nexport default Goodbye;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Table, FormControl } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nlet Styledth1 = styled.td`\n  width: 4vw;\n`\nlet Styledth2 = styled.td`\n  width: 6vw;\n`\n\nfunction AllUser() {\n  let [users, setUsers] = useState([]);\n\n  let [account, setAccount] = useState({\n    userEmail: \"\",\n    userPw: \"\",\n  });\n\n  let onChangeFunc = (e) => {\n    setAccount({\n      ...account,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .post(\"/all\")\n      .then((res) => {\n        setUsers(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  let updateAjax = (user) => {\n    axios\n      .put(\"/mypage\", {\n        userId: user.userId,\n        userPw: account.userPw,\n        userEmail: account.userEmail,\n      })\n      .then((res) => {\n        alert(\"개인정보 수정이 완료되었습니다.\");\n        console.log(res);\n      })\n      .catch((error) => {\n        alert(\"개인정보 수정에 실패했습니다.\");\n        console.log(error);\n      });\n  };\n\n  let deleteUser = (user) => {\n    if (window.confirm(user.userName + \"님을 탈퇴시키시겠습니까?\")) {\n      axios\n        .delete(\"/delete\", {\n          data: { userId: user.userId },\n        })\n        .then((res) => {\n          alert(user.userName + \"님이 성공적으로 탈퇴되었습니다.\");\n        })\n        .catch((error) => {\n          alert(user.userName + \"님의 회원 탈퇴에 실패하셨습니다.\");\n          console.log(error);\n        });\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <div>\n      <h3>전체 회원관리</h3>\n      <Table>\n        <thead>\n          <tr>\n            <th>No</th>\n            <th>아이디</th>\n            <th>이름</th>\n            <th>이메일</th>\n            <th>비밀번호</th>\n            <th>회원정보 변경</th>\n            <th>회원삭제</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users &&\n            users.map((user, i) => (\n              <tr>\n                <Styledth1>{user.id}</Styledth1>\n                <td>{user.userId}</td>\n                <Styledth1>{user.userName}</Styledth1>\n                <td>\n                  <FormControl \n                    placeholder={user.userEmail}\n                    name=\"userEmail\"\n                    onChange={onChangeFunc}\n                  ></FormControl>\n                </td>\n                <td>\n                  <FormControl \n                    placeholder=\"PassWord\"\n                    name=\"userPw\"\n                    onChange={onChangeFunc}\n                  ></FormControl>\n                </td>\n                <Styledth2>\n                  <Button\n                    variant=\"outline-info\"\n                    size=\"sm\"\n                    onClick={() => updateAjax(user)}\n                  >\n                    EditUser\n                  </Button>\n                </Styledth2>\n                <Styledth2>\n                  {user.userId == \"admin0\" ? null : (\n                    <Button\n                      variant=\"outline-danger\"\n                      size=\"sm\"\n                      onClick={() => deleteUser(user)}\n                      type=\"submit\"\n                    >\n                      회원삭제\n                    </Button>\n                  )}\n                </Styledth2>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default AllUser;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nlet Styledth1 = styled.td`\n  width: 4vw;\n`\nlet Styledth2 = styled.td`\n  width: 6vw;\n`\n\nfunction AllRent() {\n\n  let [rent, setRent] = useState([]);\n  let [stateCheck, setStateCheck] = useState(false);\n\n  useEffect(() => {\n    axios.post(\"/rent/infoall\")\n      .then((res) => {\n        console.log(res);\n        setRent(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [stateCheck]);\n\n  // let rentFunc = (rent) => {\n\n  //   axios.post(\"/rent/add\", {\n  //       author: rent.author,\n  //       categoryName: rent.categoryName,\n  //       coverLargeUrl: rent.coverLargeUrl,\n  //       coverSmallUrl: rent.coverSmallUrl,\n  //       customerReviewRank: rent.customerReviewRank,\n  //       description: rent.description,\n  //       isbn: rent.isbn,\n  //       pubDate: rent.pubDate,\n  //       publisher: rent.publisher,\n  //       rank: rent.rank,\n  //       title: rent.title,\n  //       userId: rent.userId\n  //     })\n  //     .then((res) => {\n  //       alert(\"대여 성공!\");\n  //       setStateCheck(!stateCheck);\n  //     })\n  //     .catch((error) => {\n  //         alert(\"대여 통신에 실패했습니다.\");\n  //         console.log(error);\n  //     });\n  // };\n\n  let returnFunc = (rentId) => {\n\n    axios.post(\"/rent/return\", {\n      rentId: rentId,\n    })\n    .then((res) => {\n      alert(\"반납하셨습니다.\");\n      setStateCheck(!stateCheck);\n    })\n    .catch((error) => {\n      alert(\"반납 서버와의 통신에 실패했습니다.\")\n      console.log(error);\n    });\n  }\n\n  return (\n    <div>\n      <h3>전체 대여관리</h3>\n      <Table hover>\n        <thead>\n          <tr>\n            <th>대여번호</th>\n            <th>아이디</th>\n            <th>도서명</th>\n            <th>대여일</th>\n            <th>대여상태</th>\n            <th>대여/반납</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rent && rent.slice(0).reverse().map((rent, i) => (\n            <tr>\n              <Styledth1>{rent.rentId}</Styledth1>\n              <Styledth2>{rent.userId}</Styledth2>\n              <td>{rent.title}</td>\n              <Styledth2>{rent.rentDate}</Styledth2>\n              <Styledth1>{rent.state == true ? \"대여중\" : \"반납완료\"}</Styledth1>\n              <Styledth2>\n                {\n                  rent.state == true\n                    ? <Button variant=\"outline-info\" size=\"sm\" onClick={() => returnFunc(rent.rentId)}>\n                      반납하기\n                    </Button>\n                    : null\n                    //   <Button variant=\"outline-success\" size=\"sm\" onClick={() => rentFunc(rent)}>\n                    //   대여하기\n                    // </Button>\n                }\n              </Styledth2>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default AllRent;","import React, { useState } from \"react\";\nimport { Col, Row, ListGroup } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport AllUser from \"./AllUser.js\";\nimport AllRent from \"./AllRent.js\";\n\nlet MyMenu = styled.div`\n  h4 {\n    margin: 0;\n    padding: 0.5rem;\n  }\n`;\nlet MyList = styled.div`\n  padding-left: 3rem;\n  border-left: dashed 2px Silver;\n\n  h3 {\n    text-align: left;\n    margin-bottom: 1rem;\n  }\n`;\n\nfunction Admin() {\n  let [menu, setMenu] = useState(0);\n\n  return (\n    <div>\n      <Row>\n        <Col sm={3}>\n          <MyMenu>\n            <h4>관리자페이지</h4>\n            <ListGroup.Item action variant=\"light\" onClick={() => setMenu(0)}>\n              전체 회원 관리\n            </ListGroup.Item>\n            <ListGroup.Item action variant=\"light\" onClick={() => setMenu(1)}>\n              전체 대여 관리\n            </ListGroup.Item>\n          </MyMenu>\n        </Col>\n        <Col sm={9}>\n          <MyList>{menu === 0 ? <AllUser /> : <AllRent />}</MyList>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Admin;\n\n// function AllUser() {\n//   let [users, setUsers] = useState([]);\n\n//   useEffect(() => {\n//     axios\n//       .post(\"/all\")\n//       .then((res) => {\n//         res && setUsers(res.data);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h3>전체 회원관리</h3>\n//       <Table striped hover>\n//         <thead>\n//           <tr>\n//             <th>#</th>\n//             <th>UserId</th>\n//             <th>UserName</th>\n//             <th>UserEmail</th>\n//             <th>비밀번호 변경</th>\n//             <th>회원탈퇴</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users &&\n//             users.map((user, index) => (\n//               <tr>\n//                 <td>{user?.id}</td>\n//                 <td>{user?.userId}</td>\n//                 <td>{user?.userName}</td>\n//                 <td>{user?.userEmail}</td>\n//                 <td>\n//                   <Button variant=\"outline-info\" size=\"sm\">\n//                     초기화\n//                   </Button>\n//                 </td>\n//                 <td>\n//                   <Button variant=\"outline-danger\" size=\"sm\">\n//                     회원 탈퇴\n//                   </Button>\n//                 </td>\n//               </tr>\n//             ))}\n//         </tbody>\n//       </Table>\n//     </div>\n//   );\n// }\n\n// function AllRent() {\n//   let [rent, setRent] = useState([]);\n//   useEffect(() => {\n//     axios\n//       .post(\"/rent/infoall\")\n//       .then((res) => {\n//         res && setRent(res.data);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h3>전체 대여관리</h3>\n//       <Table striped hover>\n//         <thead>\n//           <tr>\n//             <th>RentId</th>\n//             <th>UserId</th>\n//             <th>BookTitle</th>\n//             <th>RentDate</th>\n//             <th>반납상태</th>\n//             <th>#</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {rent &&\n//             rent.map((rent) => (\n//               <tr>\n//                 <td>{rent?.rentId}</td>\n//                 <td>{rent?.userId}</td>\n//                 <td>{rent?.title}</td>\n//                 <td>{rent?.rentDate}</td>\n//                 <td>{rent?.state == true ? \"대여중\" : \"반납완료\"}</td>\n//                 <td>\n//                   {rent.state == true ? (\n//                     <Button variant=\"outline-info\" size=\"sm\">\n//                       반납하기\n//                     </Button>\n//                   ) : (\n//                     <Button variant=\"outline-success\" size=\"sm\">\n//                       대여하기\n//                     </Button>\n//                   )}\n//                 </td>\n//               </tr>\n//             ))}\n//         </tbody>\n//       </Table>\n//     </div>\n//   );\n// }\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nlet Wrapper = styled.div`\n  background-color: rgb(42, 46, 46);\n  color: Gray;\n  margin-top: 6rem;\n  padding: 1rem 11rem;\n  text-align: left;\n  span {\n    color: DarkGrey;\n  }\n`;\n\nfunction Footer() {\n  return (\n    <Wrapper>\n      <span>\n        서비스 이용약관 | 개인정보 처리방침 | 회사 안내\n        <br />\n        고객센터 : 1544-9001, 평일 08:00 ~ 20:00 (점심시간 12:00 ~ 13:00)\n        <br />\n        광고문의 : ad@gobook.com\n        <br />\n      </span>\n      <br />\n      주식회사 꼬북꼬북 | 대표 7조 | 서울특별시 강남구 테헤란로 212 (역삼동\n      718-5번지)\n      <br />\n      사업자 등록 번호 104-81-53114\n      <br />© 2021 by GoBook,Inc. All rights reserved.\n    </Wrapper>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport axios from \"axios\";\n\nlet Wrapper = styled.div`\n    width: 22rem;\n    margin: auto;\n`\nlet GroupStyle = styled.div`\n    margin: 1rem 0;\n`\nlet Alarm = styled.div`\n    width: 100%;\n    text-align: left;\n    color: red;\n    font-weight: bold;   \n`\n\nfunction FindId() {\n\n    // 로그인하지 않은 경우 url입력 시 출입불가\n    let history = useHistory();\n    let [validated, setValidated] = useState(false);\n    const [show, setShow] = useState(false);\n    let [nameAlarm, setNameAlarm] = useState('');\n    let [account, setAccount] = useState({\n        userName: '',\n        userEmail: '',\n    });\n    let [userid, setUserid] = useState('');\n\n    // 이름 : 한글 2자이상\n    let nameFormat = RegExp(/^[가-힣]{2,}$/);\n\n    const handleClose = () => setShow(false);\n\n    let onChangeFunc = (e) => {\n        setAccount({\n            ...account, [e.target.name]: e.target.value\n        })\n    }\n\n    let submitFunc = (e) => {\n        e.preventDefault();\n        let form = e.currentTarget;\n        setNameAlarm('');\n\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            setValidated(true);\n\n        } else if (!nameFormat.test(account.userName))\n            setNameAlarm('이름의 형식이 올바르지 않습니다.');\n\n        else {\n            axios.post('/findid', {\n                userName: account.userName,\n                userEmail: account.userEmail\n            })\n                .then(res => {\n                    if (res.data == '유효하지 않은 이메일입니다.' || res.data == '회원을 찾을 수 없습니다.') {\n                        alert('아이디를 찾을 수 없습니다. 입력하신 이름과 이메일을 다시 확인해주세요😵');\n                    } else {\n                        setUserid(res.data);\n                        setShow(true);\n                    }\n                })\n                .catch(error => {\n                    alert('통신실패! 에러명 : ' + error);\n                    console.log(error);\n                });\n        }\n\n    }\n\n    return (\n        <Wrapper>\n            <Form noValidate validated={validated} onSubmit={submitFunc}>\n                <h3>아이디 찾기</h3>\n\n                <GroupStyle>\n                    <Form.Group>\n                        <Form.Label>이름</Form.Label>\n                        <Alarm>{nameAlarm}</Alarm>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            name=\"userName\"\n                            placeholder=\"ex) 홍길동\"\n                            onChange={onChangeFunc}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">이름을 입력해주세요.</Form.Control.Feedback>\n                    </Form.Group>\n                </GroupStyle>\n\n                <GroupStyle>\n                    <Form.Group>\n                        <Form.Label>이메일</Form.Label>\n                        {/* <Alarm>{emailAlarm}</Alarm> */}\n                        <Form.Control\n                            required\n                            type=\"email\"\n                            name=\"userEmail\"\n                            placeholder=\"ex) GoBook@naver.com\"\n                            onChange={onChangeFunc}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">이메일을 입력해주세요.</Form.Control.Feedback>\n                    </Form.Group>\n                </GroupStyle>\n\n                <Button variant=\"info\" type=\"submit\">\n                    아이디찾기\n                </Button>\n            </Form>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>아이디 알림</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>회원님의 아이디는 {userid}입니다.</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        닫기\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => history.push(\"/login\") }>\n                        로그인 하러가기\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Wrapper>\n    );\n}\n\nexport default FindId;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport axios from \"axios\";\n\nlet Wrapper = styled.div`\n    width: 22rem;\n    margin: auto;\n\n    h5 {\n        margin: 1.5vh 0;\n    }\n\n    p {\n        color: gray;\n    }\n\n`\nlet GroupStyle = styled.div`\n    margin: 1rem 0;\n`\n\nfunction FindPassword() {\n\n    // 로그인하지 않은 경우 url입력 시 출입불가\n    let history = useHistory();\n    let [validated, setValidated] = useState(false);\n    const [show, setShow] = useState(false);\n    let [userEmail, setUserEmail] = useState('')\n    let [code, setCode] = useState(0)\n\n    const handleClose = () => setShow(false);\n\n    let submitFunc = (e) => {\n        e.preventDefault();\n        let form = e.currentTarget;\n\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            setValidated(true);\n        } else {\n            axios.post('/findpw', {\n                userEmail: userEmail\n            })\n                .then(res => {\n                    if (res.data) {\n                        alert('비밀번호 변경 메일을 보냈습니다📨');\n                        setShow(true);\n                    } else {\n                        console.log(res.data.code)\n                        alert('회원정보에 등록된 이메일이 아닙니다😰');\n                        history.push(\"/signin\");\n                    }\n                })\n                .catch(error => {\n                    alert('통신실패! 에러명 : ' + error);\n                    console.log(error);\n                });\n        }\n\n    }\n\n    let checkCode = () => {\n        axios.post('/findpw/code', {\n                userEmail: userEmail,\n            })\n            .then(res => {\n                if (res.data) {\n                    alert('회원님의 임시 비밀번호는 gobook777! 입니다. 로그인 후 변경해주세요.');\n                    history.push(\"/login\");\n                } else if (!code) {\n                    alert('인증번호를 입력해주세요.');\n                } else {\n                    alert('인증번호가 올바르지 않습니다. 다시 확인해주세요.')\n                }\n            })\n            .catch(error => {\n                alert('통신실패! 에러명 : ' + error);\n                console.log(error);\n            });\n    }\n\n    return (\n        <Wrapper>\n            <Form noValidate validated={validated} onSubmit={submitFunc}>\n                <h3>비밀번호 찾기</h3>\n                <h5>비밀번호를 잊으셨나요?</h5>\n                <p>가입했던 이메일을 적어주세요.<br />\n                    입력하신 이메일 주소로 비밀번호 변경 메일을 보낼게요.</p>\n                <GroupStyle>\n                    <Form.Group>\n                        <Form.Label>이메일</Form.Label>\n                        {/* <Alarm>{emailAlarm}</Alarm> */}\n                        <Form.Control\n                            required\n                            type=\"email\"\n                            name=\"userEmail\"\n                            placeholder=\"ex) GoBook@naver.com\"\n                            onChange={(e) => { setUserEmail(e.target.value) }}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">이메일을 입력해주세요.</Form.Control.Feedback>\n                    </Form.Group>\n                </GroupStyle>\n\n                <Button variant=\"info\" type=\"submit\">\n                    비밀번호 변경 이메일 보내기\n                </Button>\n            </Form>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>비밀번호 재설정 알림</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>메일함에서 확인하신 인증번호를 입력해주세요.</Form.Label>\n                            <Form.Control\n                                name=\"code\"\n                                autoFocus\n                                onChange={(e) => { setCode(e.target.value) }}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        닫기\n                    </Button>\n                    <Button variant=\"primary\" onClick={checkCode}>\n                        인증번호 확인\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Wrapper>\n    );\n}\n\nexport default FindPassword;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport FindId from './FindId.js';\nimport FindPassword from './FindPassword.js';\nimport styled from 'styled-components';\n\nlet Wrapper = styled.div`\n    padding-top : 8vh;\n    padding-bottom: 10vh;\n    text-align: left;\n    input, button {\n        width: 100%;\n        height: 3rem;\n    }\n    button {\n        margin-top: 1rem;\n    }\n    h3 {\n        font-weight: bold;\n    }\n`\n\nfunction FindMyInfo() {\n\n    return (\n        <Wrapper>\n            <Row>\n                <Col>\n                    <FindId />\n                </Col>\n\n                <Col>\n                    <FindPassword />\n                </Col>\n            </Row>\n        </Wrapper>\n    );\n}\n\nexport default FindMyInfo;\n","import React, { useState } from \"react\";\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport BestSeller from \"./book/BestSeller.js\";\nimport NewBooks from \"./book/NewBooks.js\";\nimport Detail from \"./book/Detail.js\";\nimport Search from \"./book/Search.js\";\nimport Login from \"./user/Login.js\";\nimport Signin from \"./user/Signin.js\";\nimport SearchBar from \"./book/SearchBar\";\nimport Mypage from \"./mypage/Mypage.js\";\nimport Goodbye from \"./user/Goodbye.js\";\nimport Admin from \"./user/Admin.js\";\nimport Footer from \"./Footer.js\";\nimport FindMyInfo from \"./user/FindMyInfo\";\n\n// const GlobalStyle  =  createGlobalStyle`\n//   font-family: 'Pretendard-Medium';\n// `\n\nlet Wrapper = styled.div`\n  width: 70%;\n  margin: auto;\n  padding-top: 3rem;\n  min-height: 100%;\n`;\nlet UserStyle = styled.div`\n  text-align: right;\n  padding: 2rem;\n  font-size: 13pt;\n  background-color: rgb(13, 202, 240);\n  color: floralwhite;\n  span {\n    margin: 0.5rem;\n  }\n`;\n\nexport let BookContext = React.createContext();\nexport let SetBookContext = React.createContext();\nexport let DueDateContext = React.createContext();\n\nfunction App() {\n  let userId = localStorage.getItem(\"userId\");\n  let [isLogin, setIsLogin] = useState(\"\");\n  let [books, setBooks] = useState();\n  let [searchWord, searchWordChange] = useState(\"\");\n\n  // useEffect(() => {\n  //   localStorage.setItem('userId', null);\n  // },[isLogin]);\n  return (\n    <div className=\"App\">\n      {/* <GlobalStyle/> */}\n      <UserStyle>\n        <div className=\"nav\">\n          <div className=\"titleImg\">\n            <Link to=\"/\">\n              <span>Go Book Go Book</span>\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReIJDl-BNU7poDMxewQcEWm7ZLBeoxSfvVlQ&usqp=CAU\" />\n            </Link>\n          </div>\n          <div>\n            {userId ? (\n              <div>\n                <Link to=\"/\">\n                  <span\n                    onClick={() => {\n                      localStorage.clear();\n                      setIsLogin(false); // 얘를 주석처리하면 로그아웃 눌러도 로그인으로 돌아오지 않음\n                    }}\n                  >\n                    로그아웃\n                  </span>\n                </Link>\n                <span>|</span>\n                {userId == \"admin0\" ? (\n                  <Link to=\"/admin\">\n                    <span>관리자페이지</span>\n                  </Link>\n                ) : (\n                  <Link to=\"/mypage\">\n                    <span>마이페이지&nbsp;</span>\n                  </Link>\n                )}\n              </div>\n            ) : (\n              <div>\n                <Link to=\"/login\">\n                  <span>로그인</span>\n                </Link>\n                <span>|</span>\n                <Link to=\"/signin\">\n                  <span>회원가입</span>\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n        <SearchBar\n          searchWord={searchWord}\n          searchWordChange={searchWordChange}\n        />\n      </UserStyle>\n      <Navbar bg=\"info\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand className=\"fs-3\">도서</Navbar.Brand>\n          <Nav className=\"me-auto fs-5\">\n            <Nav.Link as={Link} to=\"/api/bestseller\">\n              베스트셀러\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/api/newbook\">\n              신간도서\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Wrapper>\n          <Route exact path=\"/api/bestseller\">\n            <BookContext.Provider value={books}>\n              <SetBookContext.Provider value={setBooks}>\n                <BestSeller />\n              </SetBookContext.Provider>\n            </BookContext.Provider>\n          </Route>\n          <Route exact path=\"/api/newbook\">\n            <BookContext.Provider value={books}>\n              <SetBookContext.Provider value={setBooks}>\n                <NewBooks />\n              </SetBookContext.Provider>\n            </BookContext.Provider>\n          </Route>\n          <Route path=\"/detail/:isbn\">\n            <BookContext.Provider value={books}>\n              <Detail />\n            </BookContext.Provider>\n          </Route>\n          <Route path=\"/api/search\">\n            <BookContext.Provider value={books}>\n              <SetBookContext.Provider value={setBooks}>\n                <Search searchWord={searchWord} />\n              </SetBookContext.Provider>\n            </BookContext.Provider>\n          </Route>\n          <Route path=\"/login\">\n            <Login setIsLogin={setIsLogin} />\n          </Route>\n          <Route path=\"/findmyinfo\">\n            <FindMyInfo />\n          </Route>\n          <Route path=\"/signin\">\n            <Signin />\n          </Route>\n          <Route path=\"/goodbye\">\n            <Goodbye setIsLogin={setIsLogin} />\n          </Route>\n          <Route path=\"/mypage\">\n            <Mypage />\n          </Route>\n          <Route path=\"/admin\">\n            <Admin />\n          </Route>\n        </Wrapper>\n      </Switch>\n      <div className=\"footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}